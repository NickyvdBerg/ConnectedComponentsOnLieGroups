(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1775946,      35666]
NotebookOptionsPosition[   1439737,      29247]
NotebookOutlinePosition[   1743368,      35204]
CellTagsIndexPosition[   1743325,      35201]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.635672260738264*^9, 3.635672265820571*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"b48582d0-796c-4d80-a70e-26fe08b36565"],

Cell[CellGroupData[{

Cell["Functions", "Chapter",
 CellChangeTimes->{{3.9055881397239814`*^9, 
  3.9055881412441463`*^9}},ExpressionUUID->"1f1b5ca2-a3e0-4c9b-ae2f-\
da293954b2b8"],

Cell[CellGroupData[{

Cell["General functions", "Section",
 CellChangeTimes->{{3.8713711461793976`*^9, 
  3.871371148540756*^9}},ExpressionUUID->"5be36f9a-83fd-47c6-9cf4-\
aa397ae71445"],

Cell[CellGroupData[{

Cell["Coordinate Conversion", "Subsection",
 CellChangeTimes->{{3.665124935814988*^9, 
  3.6651249390832376`*^9}},ExpressionUUID->"5eecc558-7caf-4f54-a673-\
ab096ff804e1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Converts", " ", "graphics", " ", "coordinates", " ", "to", " ", "image", 
    " ", "coordinates", " ", "using", " ", "image", " ", "dimensions"}], 
   "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"graphicsToImageCoordinates", "[", 
     RowBox[{"imOrImDim_", ",", "coordinates_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"ydim", ",", "xdim"}], "}"}], ",", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Depth", "[", "imOrImDim", "]"}], "\[Equal]", "2"}], "&&", 
          RowBox[{
           RowBox[{"Length", "[", "imOrImDim", "]"}], "\[Equal]", "2"}]}], 
         ",", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"ydim", ",", "xdim"}], "}"}], "=", "imOrImDim"}], ",", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"ydim", ",", "xdim"}], "}"}], "=", 
          RowBox[{"Dimensions", "[", "imOrImDim", "]"}]}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"ydim", "-", 
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], ",", 
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], "}"}], "+", 
           RowBox[{"1", "/", "2"}]}], "&"}], ",", "coordinates", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Depth", "[", "coordinates", "]"}], "-", "2"}], "}"}]}], 
        "]"}]}]}], "]"}]}], "\n", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Converts", " ", "image", " ", "coordinates", " ", "to", " ", "graphics", 
     " ", "coordinates", " ", "using", " ", "image", " ", "dimensions"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"imageToGraphicsCoordinates", "[", 
     RowBox[{"imOrImDim_", ",", "coordinates_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"ydim", ",", "xdim"}], "}"}], ",", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Depth", "[", "imOrImDim", "]"}], "\[Equal]", "2"}], "&&", 
          RowBox[{
           RowBox[{"Length", "[", "imOrImDim", "]"}], "\[Equal]", "2"}]}], 
         ",", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"ydim", ",", "xdim"}], "}"}], "=", "imOrImDim"}], ",", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"ydim", ",", "xdim"}], "}"}], "=", 
          RowBox[{"Dimensions", "[", "imOrImDim", "]"}]}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "2", "]"}], "]"}], ",", 
             RowBox[{"ydim", "+", "1", "-", 
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}], "-", 
           RowBox[{"1", "/", "2"}]}], "&"}], ",", "coordinates", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Depth", "[", "coordinates", "]"}], "-", "2"}], "}"}]}], 
        "]"}]}]}], "]"}]}], "\n", "\n", 
   RowBox[{
    RowBox[{"PointImageCoordinates", "[", 
     RowBox[{"imOrImDim_", ",", "coordinates_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"ydim", ",", "xdim"}], "}"}], ",", "\n", 
      RowBox[{"Point", "[", 
       RowBox[{"imageToGraphicsCoordinates", "[", 
        RowBox[{"imOrImDim", ",", "coordinates"}], "]"}], "]"}]}], "]"}]}], 
   "\n", "\n", 
   RowBox[{
    RowBox[{"LineImageCoordinates", "[", 
     RowBox[{"imOrImDim_", ",", "coordinates_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"ydim", ",", "xdim"}], "}"}], ",", "\n", 
      RowBox[{"Line", "[", 
       RowBox[{"imageToGraphicsCoordinates", "[", 
        RowBox[{"imOrImDim", ",", "coordinates"}], "]"}], "]"}]}], "]"}]}], 
   "\n", "\n", 
   RowBox[{
    RowBox[{"ArrowImageCoordinates", "[", 
     RowBox[{"imOrImDim_", ",", "coordinates_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"ydim", ",", "xdim"}], "}"}], ",", "\n", 
      RowBox[{"Map", "[", 
       RowBox[{"Arrow", ",", 
        RowBox[{"imageToGraphicsCoordinates", "[", 
         RowBox[{"imOrImDim", ",", "coordinates"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Depth", "[", "coordinates", "]"}], "-", "3"}], "}"}]}], 
       "]"}]}], "]"}]}]}]}]], "Code",
 InitializationCell->False,
 CellChangeTimes->{{3.665124939880169*^9, 3.665124939895767*^9}, {
   3.6651279049928255`*^9, 3.665127911816661*^9}, {3.665127948462348*^9, 
   3.6651280186162367`*^9}, {3.6651281213424406`*^9, 3.665128130117424*^9}, 
   3.665128584550886*^9, {3.665128867302336*^9, 3.6651289344292917`*^9}, {
   3.665128964644614*^9, 3.665129023836845*^9}, {3.6651323236384478`*^9, 
   3.66513232860851*^9}, {3.6651329851615205`*^9, 3.6651329854115896`*^9}},
 CellLabel->
  "In[664]:=",ExpressionUUID->"ce0bcb8c-1ef3-4c54-ae9d-7ead0859c500"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Cost Function", "Section",
 CellChangeTimes->{{3.871371313477089*^9, 3.8713713230924745`*^9}, 
   3.8713744994680367`*^9},ExpressionUUID->"1ac3cd53-09e5-45f5-b47e-\
6795de51639f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"$HistoryLength", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"<<", " ", "LieAnalysis`"}]}], "Input",
 CellLabel->
  "In[669]:=",ExpressionUUID->"b66c351f-b1cc-4483-b96b-f808bb4bc972"],

Cell[CellGroupData[{

Cell["Single Scale Vesselness Filter", "Subsection",
 CellChangeTimes->{{3.8316344807809677`*^9, 3.831634483141035*^9}, {
  3.8713757292638564`*^9, 3.871375737736952*^9}, {3.8713757708660736`*^9, 
  3.8713757848739877`*^9}},ExpressionUUID->"98d76889-0838-449f-98b7-\
d7385e0c913c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"CostFunctionVesselnessFiltering", "[", 
   RowBox[{
   "U_", ",", "\[Xi]_", ",", "\[Zeta]_", ",", "\[Sigma]s_", ",", "method_"}], 
   "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "cost", ",", "H", ",", "Q", ",", "S", ",", "R", ",", "B11", ",", "B22", 
      ",", "obj", ",", "oc", ",", 
      RowBox[{"\[Sigma]1", "=", "0.5"}], ",", "\[Sigma]2", ",", "Qgreater0", 
      ",", "M", ",", "\[Lambda]1", ",", "\[Lambda]2", ",", "\[Lambda]3", ",", 
      "c", ",", 
      RowBox[{"\[Beta]", "=", 
       RowBox[{"0.75", "/", "\[Sigma]s"}]}], ",", "Hess"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{"calculate", " ", "the", " ", "Hessian"}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"obj", "=", 
      RowBox[{"ObjPositionOrientationData", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\"\<Data\>\"", "\[Rule]", "U"}], ",", 
         RowBox[{"\"\<Symmetry\>\"", "\[Rule]", 
          RowBox[{"2", "\[Pi]"}]}], ",", " ", 
         RowBox[{"\"\<Wavelets\>\"", "\[Rule]", " ", "None"}], ",", " ", 
         RowBox[{"\"\<InputData\>\"", "\[Rule]", " ", "None"}], ",", " ", 
         RowBox[{"\"\<DcFilteredImage\>\"", "\[Rule]", "0"}]}], "}"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"H", "=", 
      RowBox[{
       RowBox[{"OrientationScoreTensor", "[", 
        RowBox[{"obj", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"0.5", "*", 
            SuperscriptBox["\[Sigma]s", "2"]}], ",", 
           RowBox[{"0.5", "*", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"\[Beta]", "*", "\[Sigma]s"}], ")"}], "2"]}]}], "}"}], 
         ",", "\"\<Hessian\>\""}], "]"}], "[", "\"\<Data\>\"", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"define", " ", "M"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"M", " ", "=", " ", 
      RowBox[{"DiagonalMatrix", "[", 
       RowBox[{"{", 
        RowBox[{
         FractionBox["1", "\[Xi]"], ",", 
         FractionBox["\[Zeta]", "\[Xi]"], ",", "1"}], "}"}], "]"}]}], ";", 
     "  ", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"obtain", " ", "the", " ", "Hessian", " ", "field"}], " ", 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"Hess", "=", 
      RowBox[{
       RowBox[{"ConstantArray", "[", 
        RowBox[{
         RowBox[{"M", ".", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], "}"}], ".", "M"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"Nx", ",", "Ny", ",", "No"}], "}"}]}], "]"}], "*", "H"}]}], 
     ";", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Hess", "=", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"M", ".", "#", ".", "M"}], "&"}], ",", "H", ",", 
          RowBox[{"{", "3", "}"}]}], "]"}]}], ";"}], "*)"}], 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "Determine", " ", "variables", " ", "depending", " ", "on", " ", "the", 
       " ", "method", " ", "that", " ", "is", " ", "considered"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"method", "==", "\"\<LIF\>\""}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\[Lambda]1", "=", 
         RowBox[{"Hess", "\[LeftDoubleBracket]", 
          RowBox[{"All", ",", "All", ",", "All", ",", "1", ",", "1"}], 
          "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"c", "=", 
         RowBox[{"Hess", "\[LeftDoubleBracket]", 
          RowBox[{"All", ",", "All", ",", "All", ",", "2", ",", "2"}], 
          "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"Q", "=", "c"}], ";"}], " ", 
       RowBox[{"(*", 
        RowBox[{"convexity", " ", "criterion"}], "*)"}], 
       "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\[Lambda]3", ",", "\[Lambda]2", ",", "\[Lambda]1"}], "}"}],
          "=", 
         RowBox[{"Transpose", "[", 
          RowBox[{
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Eigenvalues", "[", 
               RowBox[{"M", ".", "M", ".", 
                RowBox[{"Transpose", "[", "#", "]"}], ".", "M", ".", "M", ".",
                 "#"}], "]"}], "&"}], ",", "H", ",", 
             RowBox[{"{", "3", "}"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"2", ",", "3", ",", "4", ",", "1"}], "}"}]}], "]"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"c", "=", 
         RowBox[{"0.5", "*", 
          RowBox[{"(", 
           RowBox[{"\[Lambda]2", "+", "\[Lambda]3"}], ")"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Q", "=", 
         RowBox[{"Hess", "\[LeftDoubleBracket]", 
          RowBox[{"All", ",", "All", ",", "All", ",", "2", ",", "2"}], 
          "\[RightDoubleBracket]"}]}]}]}], " ", 
      RowBox[{"(*", 
       RowBox[{"convexity", " ", "criterion"}], "*)"}], "\[IndentingNewLine]",
       "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "Determine", " ", "measures", " ", "that", " ", "are", " ", "used", " ",
        "when", " ", "calculating", " ", "the", " ", "vesselness"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"S", "=", 
      RowBox[{
       SuperscriptBox["\[Lambda]1", "2"], "+", 
       SuperscriptBox["c", "2"]}]}], ";", " ", 
     RowBox[{"(*", 
      RowBox[{"structure", " ", "measure"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"R", "=", 
      RowBox[{"\[Lambda]1", "/", "c"}]}], ";", " ", 
     RowBox[{"(*", 
      RowBox[{"anisotropy", " ", "measure"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"\[Sigma]2", "=", 
      RowBox[{"0.2", "*", 
       RowBox[{"Max", "[", 
        RowBox[{"Abs", "[", "S", "]"}], "]"}]}]}], ";", " ", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Max", "[", 
        RowBox[{"Abs", "[", "S", "]"}], "]"}], " ", "ensures", " ", "that", 
       " ", "the", " ", "method", " ", "is", " ", "scaling", " ", 
       "invariant"}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "Calculate", " ", "the", " ", "vesselness", " ", "at", " ", "ALL", " ", 
       "locations", " ", "and", " ", "orientations"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"cost", "=", 
      RowBox[{
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["R", "2"]}], "/", 
         RowBox[{"(", 
          RowBox[{"2", 
           SuperscriptBox["\[Sigma]1", "2"]}], ")"}]}], "]"}], "*", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"Exp", "[", 
          RowBox[{
           RowBox[{"-", "S"}], "/", 
           RowBox[{"(", 
            RowBox[{"2", "*", "\[Sigma]2"}], ")"}]}], "]"}]}], ")"}]}]}], ";",
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"Selection", " ", "criterion", " ", "on", " ", "convexity"}], 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"Qgreater0", "=", 
      RowBox[{"1", "-", 
       RowBox[{"UnitStep", "[", 
        RowBox[{"-", "Q"}], "]"}]}]}], 
     RowBox[{"(*", 
      RowBox[{"Boole", "[", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"#", ">", "0"}], "&"}], ",", "Q", ",", 
         RowBox[{"{", "3", "}"}]}], "]"}], "]"}], "*)"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "Vesselness", " ", "at", " ", "locations", " ", "that", " ", "meet", 
       " ", "the", " ", "convexity", " ", "criterion"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"cost", "=", 
      RowBox[{"cost", "*", "Qgreater0"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "cost", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.831700621055113*^9, 3.83170071527347*^9}, {
   3.831700747539089*^9, 3.8317007766656637`*^9}, {3.8317008204573913`*^9, 
   3.831700862001667*^9}, {3.831700892710336*^9, 3.831700970456744*^9}, {
   3.8317010154423776`*^9, 3.831701059479223*^9}, {3.8317013033704925`*^9, 
   3.8317013312815733`*^9}, {3.831701406870053*^9, 3.831701479619607*^9}, 
   3.831702376776008*^9, {3.831702481275221*^9, 3.831702483945857*^9}, {
   3.8317025887621565`*^9, 3.8317025903591995`*^9}, {3.8317027497648787`*^9, 
   3.831702800763775*^9}, {3.8317033970662265`*^9, 3.831703398700817*^9}, {
   3.8317035132347107`*^9, 3.8317035667713284`*^9}, 3.831703623390505*^9, {
   3.831703687980508*^9, 3.831703755108315*^9}, 3.8317040310380526`*^9, {
   3.831704503596468*^9, 3.8317045060547113`*^9}, {3.8317091510973673`*^9, 
   3.831709151348405*^9}, {3.831709700050008*^9, 3.8317097006454115`*^9}, {
   3.831709769465223*^9, 3.831709778053362*^9}, {3.8317155312170706`*^9, 
   3.8317155333119874`*^9}, {3.8317161114464207`*^9, 3.831716113460864*^9}, {
   3.8317165663062634`*^9, 3.831716601884225*^9}, {3.8317166341631827`*^9, 
   3.8317166662136497`*^9}, {3.831716698452117*^9, 3.8317168843813276`*^9}, {
   3.8317170307114677`*^9, 3.8317170337875433`*^9}, {3.8317171661180487`*^9, 
   3.8317171824213257`*^9}, 3.8317196038493547`*^9, {3.8317198439178524`*^9, 
   3.831719846461735*^9}, {3.831720090946414*^9, 3.831720107271838*^9}, {
   3.83180597103368*^9, 3.831805975131879*^9}, 3.8318066757759495`*^9, 
   3.831807160890427*^9, {3.831807535208869*^9, 3.83180753950561*^9}, 
   3.831816444761509*^9, {3.8318769075046463`*^9, 3.831876924351859*^9}, {
   3.8318769679894247`*^9, 3.831876969530199*^9}, 3.8318770753873186`*^9, {
   3.831877380489173*^9, 3.831877416462142*^9}, 3.8318776429750586`*^9, {
   3.831877724862707*^9, 3.831877724981058*^9}, 3.831877863831921*^9, {
   3.831877987522004*^9, 3.831877987771125*^9}, 3.8318780977397194`*^9, 
   3.831878680963387*^9, {3.831878755740961*^9, 3.831878755799967*^9}, 
   3.8318792938839674`*^9, {3.8318798792499523`*^9, 3.831879879727828*^9}, 
   3.8318918349459953`*^9, 3.831892122586246*^9, {3.8318924298905687`*^9, 
   3.831892429990985*^9}, 3.831893137371763*^9, {3.831893508108944*^9, 
   3.8318935086064987`*^9}, {3.8318977629378843`*^9, 3.831897763043951*^9}, 
   3.8319619837836237`*^9, {3.831962015095559*^9, 3.8319620211980247`*^9}, {
   3.832039708432623*^9, 3.832039771838543*^9}, {3.8320399649595394`*^9, 
   3.832039967207567*^9}, {3.8320400626702003`*^9, 3.832040090979965*^9}, {
   3.832040147331139*^9, 3.83204021589231*^9}, {3.8320404626864543`*^9, 
   3.83204047811031*^9}, {3.8320405304053903`*^9, 3.832040532371476*^9}, {
   3.8320406329553537`*^9, 3.832040639388233*^9}, {3.8320406794126854`*^9, 
   3.8320406815172057`*^9}, {3.8320415723932037`*^9, 
   3.8320417365714226`*^9}, {3.8320418581849036`*^9, 3.832041858268427*^9}, {
   3.8320419615836406`*^9, 3.83204197356218*^9}, {3.8320422023049603`*^9, 
   3.8320422244985046`*^9}, 3.832043217729306*^9, 3.832043405912733*^9, {
   3.83204354210608*^9, 3.832043544501052*^9}, {3.8320501159262037`*^9, 
   3.83205011599699*^9}, {3.8320877489160194`*^9, 3.8320877502980633`*^9}, 
   3.8320893687909594`*^9, {3.832089922644105*^9, 3.832089923021311*^9}, {
   3.8320920918539553`*^9, 3.832092092656397*^9}, {3.832147657024498*^9, 
   3.8321476779655695`*^9}, {3.832147862083398*^9, 3.83214786842303*^9}, {
   3.8322997317459273`*^9, 3.8322997436680493`*^9}, {3.8466754167767963`*^9, 
   3.8466754214888153`*^9}, 3.8466755327969456`*^9, 3.8466757923554125`*^9, {
   3.8467384136211014`*^9, 3.846738663916294*^9}, {3.8467553051584396`*^9, 
   3.8467553078065615`*^9}, {3.8472525489043355`*^9, 
   3.8472525532853584`*^9}, {3.8472525955539646`*^9, 
   3.8472526036202583`*^9}, {3.8472532930518665`*^9, 
   3.8472532993081465`*^9}, {3.847253682235481*^9, 3.847253690273202*^9}, {
   3.84726643518459*^9, 3.847266452966767*^9}, {3.847270444672587*^9, 
   3.847270446233013*^9}, 3.8472736558816433`*^9, {3.847276058842713*^9, 
   3.8472761159053526`*^9}},
 CellLabel->
  "In[671]:=",ExpressionUUID->"e9b7349a-76e7-4e6b-9d41-a98e279a90e5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Cost", "[", 
   RowBox[{"oc_", ",", "\[Lambda]_", ",", "p_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "cost", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"cost", "=", 
      RowBox[{"1", "/", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"\[Lambda]", "*", 
          SuperscriptBox["oc", "p"]}]}], ")"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Show", "[", 
      RowBox[{
       RowBox[{"ImageAdjust", "[", 
        RowBox[{"Image", "[", 
         RowBox[{"Map", "[", 
          RowBox[{"Min", ",", 
           RowBox[{"Rescale", "[", "cost", "]"}], ",", 
           RowBox[{"{", "2", "}"}]}], "]"}], "]"}], "]"}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "600"}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.8319618117031293`*^9, 3.8319618838348403`*^9}},
 CellLabel->
  "In[672]:=",ExpressionUUID->"00dbe610-eee4-4379-b93e-2e35226421c2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"CostFunction", "[", 
   RowBox[{"oc_", ",", "\[Lambda]_", ",", "p_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "cost", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"cost", "=", 
      RowBox[{"1", "/", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"\[Lambda]", "*", 
          SuperscriptBox["oc", "p"]}]}], ")"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "cost", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.8319618117031293`*^9, 3.8319618838348403`*^9}, {
  3.831998121571029*^9, 3.831998129082103*^9}, {3.831998168905656*^9, 
  3.831998169657459*^9}},
 CellLabel->
  "In[673]:=",ExpressionUUID->"9b967058-8619-4a9f-bd37-6860dc4468c6"]
}, Closed]],

Cell[CellGroupData[{

Cell["Multiscale Vesselness Filter", "Subsection",
 CellChangeTimes->{{3.8467368047953024`*^9, 
  3.8467368118756647`*^9}},ExpressionUUID->"bf5c9a22-840b-42b0-85ad-\
d8bddec3f25d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"MultiScaleVesselness", "[", 
   RowBox[{
   "U_", ",", "Uboarder_", ",", "\[Xi]_", ",", "\[Zeta]_", ",", "\[Sigma]s_", 
    ",", "method_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "vesselness", ",", "vesselnessBoarder", ",", "vesselnessfilterNoBoarder",
       ",", "vesselnessfilterNoBoarderErosion", ",", 
      "vesselnessfilterNoBoarderErosion2", ",", "liftElevators", ",", 
      "newvesselnessfilter", ",", 
      RowBox[{"vesselnessfilter", "=", 
       RowBox[{"{", "}"}]}], ",", "k", ",", "i"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "1"}], ",", 
       RowBox[{"i", "<=", 
        RowBox[{"Length", "[", "\[Sigma]s", "]"}]}], ",", 
       RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Select", " ", "the", " ", "spatial", " ", "scale", " ", "for", " ", 
         "the", " ", "specific", " ", "iteration"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"k", "=", 
         RowBox[{"\[Sigma]s", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
         "Calculate", " ", "the", " ", "vesselness", " ", "of", " ", "the", 
          " ", "full", " ", "image"}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"vesselness", "=", 
         RowBox[{"CostFunctionVesselnessFiltering", "[", 
          RowBox[{
          "U", ",", "\[Xi]", ",", "\[Zeta]", ",", "k", ",", "method"}], 
          "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
         "Calculate", " ", "the", " ", "vesselness", " ", "of", " ", "the", 
          " ", "boarder", " ", "of", " ", "the", " ", "image"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"vesselnessBoarder", "=", 
         RowBox[{"CostFunctionVesselnessFiltering", "[", 
          RowBox[{
          "Uboarder", ",", "\[Xi]", ",", "\[Zeta]", ",", "k", ",", "method"}],
           "]"}]}], ";", " ", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
         "Calculate", " ", "the", " ", "vesselness", " ", "without", " ", 
          "the", " ", "boarder"}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"vesselnessfilterNoBoarder", "=", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"UnitStep", "[", 
             RowBox[{"vesselnessBoarder", "-", "0.0001"}], "]"}]}], ")"}], 
          "*", "vesselness"}]}], 
        RowBox[{"(*", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Boole", "[", 
             RowBox[{"#", "<", "0.0001"}], "]"}], "&"}], ",", 
           "vesselnessBoarder", ",", 
           RowBox[{"{", "3", "}"}]}], "]"}], "*)"}], ";", " ", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{
          "Add", " ", "erosion", " ", "to", " ", "the", " ", "cost", " ", 
           "function"}], " ", "\[Rule]", " ", 
          RowBox[{
          "erosion", " ", "of", " ", "broad", " ", "angular", " ", 
           "boundaries"}]}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"vesselnessfilterNoBoarderErosion", "=", 
         RowBox[{"Erosion", "[", 
          RowBox[{"vesselnessfilterNoBoarder", ",", 
           RowBox[{"{", 
            RowBox[{"{", 
             RowBox[{"{", 
              RowBox[{"1", ",", "1", ",", "1"}], "}"}], "}"}], "}"}], ",", 
           RowBox[{"Padding", "\[Rule]", "\"\<Periodic\>\""}]}], "]"}]}], ";", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Erosion", "[", 
              RowBox[{"#", ",", "0.5", ",", 
               RowBox[{"Padding", "\[Rule]", "\"\<Periodic\>\""}]}], "]"}], 
             "&"}], ",", "vesselnessfilterNoBoarder", ",", 
            RowBox[{"{", "2", "}"}]}], "]"}], ";"}], "*)"}], " ", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
         "Cut", " ", "off", " ", "the", " ", "upper", " ", "boarder", " ", 
          "which", " ", "influences", " ", "the", " ", "vesselness"}], "*)"}],
         "\[IndentingNewLine]", 
        RowBox[{
        "vesselnessfilterNoBoarderErosion2", "=", 
         "vesselnessfilterNoBoarderErosion"}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"vesselnessfilterNoBoarderErosion2", "[", 
          RowBox[{"[", 
           RowBox[{"1", ";;", "5"}], "]"}], "]"}], "=", 
         RowBox[{"ConstantArray", "[", 
          RowBox[{"0", ",", 
           RowBox[{"{", 
            RowBox[{"5", ",", "Ny", ",", "No"}], "}"}]}], "]"}]}], ";", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"MapIndexed", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Boole", "[", 
               RowBox[{
                RowBox[{
                "#2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                "\[GreaterEqual]", "6"}], "]"}], "*", "#1"}], "&"}], ",", 
            "vesselnessfilterNoBoarderErosion", ",", 
            RowBox[{"{", "3", "}"}]}], "]"}], ";"}], "*)"}], 
        RowBox[{"(*", 
         RowBox[{"Cut", " ", "off", " ", "upper", " ", "boarder"}], "*)"}], 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"(*", 
          RowBox[{
          "Create", " ", "mobility", " ", "function", " ", "only", " ", 
           "containing", " ", "lifts", " ", "at", " ", "bifurcations"}], 
          "*)"}], "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"liftElevators", "=", 
           RowBox[{"ConstantArray", "[", 
            RowBox[{"0", ",", 
             RowBox[{"{", 
              RowBox[{"No", ",", "Nx", ",", "Ny"}], "}"}]}], "]"}]}], ";"}], 
         "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"liftElevators", "\[LeftDoubleBracket]", 
                 RowBox[{"All", ",", 
                  RowBox[{"Sequence", "@@", 
                   RowBox[{"(", 
                    RowBox[{"#", "-", 
                    RowBox[{"{", 
                    RowBox[{"ySelect", ",", "0"}], "}"}]}], ")"}]}]}], 
                 "\[RightDoubleBracket]"}], "=", "1"}], ";"}], "&"}], ",", 
             "seedsIndex"}], "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"liftElevators", "=", 
            RowBox[{"GaussianFilter", "[", 
             RowBox[{"liftElevators", ",", "1.5"}], "]"}]}], ";"}], "*)"}], 
         "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"Combine", " ", "both", " ", "mobility", " ", "functions"}], 
         "*)"}], "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Max", "[", "#", "]"}], "&"}], ",", 
            RowBox[{"Transpose", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"4", "*", 
                 RowBox[{
                 "Rescale", "[", "vesselnessfilterNoBoarderErosion2", "]"}]}],
                 ",", 
                RowBox[{"Transpose", "[", 
                 RowBox[{
                  RowBox[{"Rescale", "[", "liftElevators", "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"3", ",", "1", ",", "2"}], "}"}]}], "]"}]}], "}"}],
               ",", 
              RowBox[{"{", 
               RowBox[{"4", ",", "1", ",", "2", ",", "3"}], "}"}]}], "]"}], 
            ",", 
            RowBox[{"{", "3", "}"}]}], "]"}], ";"}], "*)"}], 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
         "Add", " ", "new", " ", "vesselness", " ", "to", " ", "the", " ", 
          "array", " ", "containing", " ", "vesselness", " ", "filters", " ", 
          "for", " ", "all", " ", "different", " ", "values", " ", "of", " ", 
          "\[Sigma]s"}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{
        "newvesselnessfilter", "=", "vesselnessfilterNoBoarderErosion2"}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"vesselnessfilter", ",", "newvesselnessfilter"}], "]"}], 
        ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"vesselnessfilter", "=", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Max", "[", "#", "]"}], "&"}], ",", 
          RowBox[{"Transpose", "[", 
           RowBox[{"vesselnessfilter", ",", 
            RowBox[{"{", 
             RowBox[{"4", ",", "1", ",", "2", ",", "3"}], "}"}]}], "]"}], ",", 
          RowBox[{"{", "3", "}"}]}], "]"}]}], ";"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "vesselnessfilter", "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.846069290478445*^9, 3.846069320848277*^9}, {
  3.846069388578823*^9, 3.8460694136426706`*^9}, {3.8460698943625517`*^9, 
  3.8460699961806927`*^9}, {3.8460700607895765`*^9, 3.846070370519379*^9}, {
  3.8460704370347395`*^9, 3.846070455399172*^9}, {3.8460705633723164`*^9, 
  3.846070607320956*^9}, {3.8461357617580004`*^9, 3.84613576321036*^9}, {
  3.8461371780315437`*^9, 3.8461371794824996`*^9}, {3.8467383924445486`*^9, 
  3.8467384051500874`*^9}, {3.8472527956174803`*^9, 3.847252804776075*^9}, {
  3.847254715962023*^9, 3.84725477265746*^9}, {3.8472550730271826`*^9, 
  3.8472550948254304`*^9}, {3.8472645825577707`*^9, 3.8472645902415514`*^9}, {
  3.8472648673212476`*^9, 3.8472649626651025`*^9}, {3.8472650190287113`*^9, 
  3.8472650286441393`*^9}, {3.8472761287663803`*^9, 3.8472762743068795`*^9}, {
  3.8479437503598204`*^9, 3.8479437633810444`*^9}},
 CellLabel->
  "In[674]:=",ExpressionUUID->"998a2175-9b2d-434e-b46e-c403fdbd3cb6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"MultiScaleVesselnessFilter", "[", "vesselnessfilters_", "]"}], ":=",
   "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "sum1", ",", "\[Mu]\[Infinity]", ",", "sum2", ",", "\[Mu]l\[Infinity]", 
      ",", "cost"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
     "Calculate", " ", "vesselness", " ", "per", " ", "location", " ", "and", 
      " ", "orientation", " ", "by", " ", "taking", " ", "sum", " ", "over", 
      " ", "all", " ", "spatial", " ", "scales"}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"sum1", "=", 
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{"vesselnessfilters", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{
           RowBox[{"Dimensions", "[", "vesselnessfilters", "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], "]"}]}], 
     RowBox[{"(*", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Total", "[", 
          RowBox[{"weights", ".", "#"}], "]"}], "&"}], ",", 
        RowBox[{"Transpose", "[", 
         RowBox[{"vesselnessfilters", ",", 
          RowBox[{"{", 
           RowBox[{"4", ",", "1", ",", "2", ",", "3"}], "}"}]}], "]"}], ",", 
        RowBox[{"{", "3", "}"}]}], "]"}], "*)"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "Calculate", " ", "maximum", " ", "value", " ", "in", " ", "sum1"}], 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"\[Mu]\[Infinity]", "=", 
      RowBox[{"Max", "[", "sum1", "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "Rescale", " ", "the", " ", "sum1", " ", "by", " ", "dividing", " ", 
       "with", " ", "its", " ", "maximum", " ", "to", " ", "find", " ", "the",
        " ", "cost", " ", "function"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"cost", "=", 
      RowBox[{
       SuperscriptBox["\[Mu]\[Infinity]", 
        RowBox[{"-", "1"}]], "*", "sum1"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"cost", "=", 
        RowBox[{"Transpose", "[", 
         RowBox[{"cost", ",", 
          RowBox[{"{", 
           RowBox[{"2", ",", "3", ",", "1"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Calculate", " ", "vesselness", " ", "per", " ", "location", " ", 
         "by", " ", "taking", " ", "sum", " ", "over", " ", "all", " ", 
         "orientations"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"sum2", "=", 
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{"cost", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{
             RowBox[{"Dimensions", "[", "cost", "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Calculate", " ", "maximum", " ", "value", " ", "in", " ", "sum2"}], 
        "*)"}], "\[IndentingNewLine]", 
       RowBox[{"\[Mu]l\[Infinity]", "=", 
        RowBox[{"Max", "[", "sum2", "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"cost", "=", 
        RowBox[{
         SuperscriptBox["\[Mu]l\[Infinity]", 
          RowBox[{"-", "1"}]], "*", "sum2"}]}], ";"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "cost", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.8461351164748793`*^9, 3.846135301233615*^9}, {
  3.8461353918983126`*^9, 3.8461354296469297`*^9}, {3.8461354708019032`*^9, 
  3.84613550183355*^9}, {3.846135565954836*^9, 3.846135585502041*^9}, {
  3.8461356206333733`*^9, 3.846135625324848*^9}, {3.8461365925473847`*^9, 
  3.8461366255417967`*^9}, {3.8461366613125324`*^9, 3.8461366681133223`*^9}, {
  3.8461380233321896`*^9, 3.8461380346543207`*^9}, {3.84658043492728*^9, 
  3.8465804362968216`*^9}, {3.846761981543815*^9, 3.8467619923206415`*^9}, {
  3.846762380572624*^9, 3.8467624741657667`*^9}, {3.84676257915926*^9, 
  3.8467625894172935`*^9}, {3.846762774042492*^9, 3.8467627925348787`*^9}, {
  3.8472751267320757`*^9, 3.847275212905927*^9}, {3.847276618866034*^9, 
  3.847276871448764*^9}, {3.847276925336969*^9, 3.847276930574594*^9}, {
  3.847277021172058*^9, 3.847277055403304*^9}},
 CellLabel->
  "In[675]:=",ExpressionUUID->"db448320-72fb-44bb-a98f-68f821a7f685"],

Cell[BoxData[
 RowBox[{
  RowBox[{"MultiScaleVesselnessFilter2D", "[", "vesselnessfilters_", "]"}], ":=",
   "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "sum1", ",", "\[Mu]\[Infinity]", ",", "sum2", ",", "\[Mu]l\[Infinity]", 
      ",", "cost"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
     "Calculate", " ", "vesselness", " ", "per", " ", "location", " ", "and", 
      " ", "orientation", " ", "by", " ", "taking", " ", "sum", " ", "over", 
      " ", "all", " ", "spatial", " ", "scales"}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"sum1", "=", 
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{"vesselnessfilters", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{
           RowBox[{"Dimensions", "[", "vesselnessfilters", "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], "]"}]}], 
     RowBox[{"(*", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Total", "[", 
          RowBox[{"weights", ".", "#"}], "]"}], "&"}], ",", 
        RowBox[{"Transpose", "[", 
         RowBox[{"vesselnessfilters", ",", 
          RowBox[{"{", 
           RowBox[{"4", ",", "1", ",", "2", ",", "3"}], "}"}]}], "]"}], ",", 
        RowBox[{"{", "3", "}"}]}], "]"}], "*)"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "Calculate", " ", "maximum", " ", "value", " ", "in", " ", "sum1"}], 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"\[Mu]\[Infinity]", "=", 
      RowBox[{"Max", "[", "sum1", "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "Rescale", " ", "the", " ", "sum1", " ", "by", " ", "dividing", " ", 
       "with", " ", "its", " ", "maximum", " ", "to", " ", "find", " ", "the",
        " ", "cost", " ", "function"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"cost", "=", 
      RowBox[{
       SuperscriptBox["\[Mu]\[Infinity]", 
        RowBox[{"-", "1"}]], "*", "sum1"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "Putting", " ", "cost", " ", "function", " ", "in", " ", "right", " ", 
       "dimensions"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"cost", "=", 
      RowBox[{"Transpose", "[", 
       RowBox[{"cost", ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "3", ",", "1"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "Calculate", " ", "vesselness", " ", "per", " ", "location", " ", "by", 
       " ", "taking", " ", "sum", " ", "over", " ", "all", " ", 
       "orientations"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"sum2", "=", 
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{"cost", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{
           RowBox[{"Dimensions", "[", "cost", "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "Calculate", " ", "maximum", " ", "value", " ", "in", " ", "sum2"}], 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"\[Mu]l\[Infinity]", "=", 
      RowBox[{"Max", "[", "sum2", "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"cost", "=", 
      RowBox[{
       SuperscriptBox["\[Mu]l\[Infinity]", 
        RowBox[{"-", "1"}]], "*", "sum2"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "cost", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.8461351164748793`*^9, 3.846135301233615*^9}, {
  3.8461353918983126`*^9, 3.8461354296469297`*^9}, {3.8461354708019032`*^9, 
  3.84613550183355*^9}, {3.846135565954836*^9, 3.846135585502041*^9}, {
  3.8461356206333733`*^9, 3.846135625324848*^9}, {3.8461365925473847`*^9, 
  3.8461366255417967`*^9}, {3.8461366613125324`*^9, 3.8461366681133223`*^9}, {
  3.8461380233321896`*^9, 3.8461380346543207`*^9}, {3.84658043492728*^9, 
  3.8465804362968216`*^9}, {3.846761981543815*^9, 3.8467619923206415`*^9}, {
  3.846762380572624*^9, 3.8467624741657667`*^9}, {3.84676257915926*^9, 
  3.8467625894172935`*^9}, {3.846762774042492*^9, 3.8467627925348787`*^9}, {
  3.8472751267320757`*^9, 3.847275212905927*^9}, {3.847276618866034*^9, 
  3.847276871448764*^9}, {3.847276925336969*^9, 3.847276930574594*^9}, {
  3.847277021172058*^9, 3.847277055403304*^9}, {3.8472784934463716`*^9, 
  3.84727851900611*^9}},
 CellLabel->
  "In[676]:=",ExpressionUUID->"b7fe319a-fe9a-4561-9273-70c7584e6617"]
}, Closed]],

Cell[CellGroupData[{

Cell["External Regularization", "Subsection",
 CellChangeTimes->{{3.846736828118457*^9, 
  3.8467368336747875`*^9}},ExpressionUUID->"bd348826-fe53-4650-b8ef-\
3e44f2fcf11d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"CostFunctionVesselnessFilteringExtReg", "[", 
   RowBox[{
   "U_", ",", "\[Xi]_", ",", "\[Zeta]_", ",", "\[Sigma]s_", ",", "method_", 
    ",", 
    RowBox[{"\[Sigma]sExt_", ":", "0"}], ",", 
    RowBox[{"\[Sigma]aExt_", ":", "0"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "cost", ",", "H", ",", "Q", ",", "S", ",", "R", ",", "B11", ",", "B22", 
      ",", "obj", ",", "oc", ",", 
      RowBox[{"\[Sigma]1", "=", "0.5"}], ",", "\[Sigma]2", ",", "Qgreater0", 
      ",", "M", ",", "\[Lambda]1", ",", "\[Lambda]2", ",", "\[Lambda]3", ",", 
      "c", ",", 
      RowBox[{"\[Beta]", "=", 
       RowBox[{"0.75", "/", "\[Sigma]s"}]}], ",", "Hess"}], "}"}], ",", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{"calculate", " ", "the", " ", "Hessian"}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"obj", "=", 
      RowBox[{"ObjPositionOrientationData", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\"\<Data\>\"", "\[Rule]", "U"}], ",", 
         RowBox[{"\"\<Symmetry\>\"", "\[Rule]", 
          RowBox[{"2", "\[Pi]"}]}], ",", " ", 
         RowBox[{"\"\<Wavelets\>\"", "\[Rule]", " ", "None"}], ",", " ", 
         RowBox[{"\"\<InputData\>\"", "\[Rule]", " ", "None"}], ",", " ", 
         RowBox[{"\"\<DcFilteredImage\>\"", "\[Rule]", "0"}]}], "}"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"H", "=", 
      RowBox[{
       RowBox[{"OrientationScoreTensor", "[", 
        RowBox[{"obj", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"0.5", "*", 
            SuperscriptBox["\[Sigma]s", "2"]}], ",", 
           RowBox[{"0.5", "*", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"\[Beta]", "*", "\[Sigma]s"}], ")"}], "2"]}]}], "}"}], 
         ",", "\"\<Hessian\>\""}], "]"}], "[", "\"\<Data\>\"", "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"define", " ", "M"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"M", " ", "=", " ", 
      RowBox[{"DiagonalMatrix", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"1", "/", "\[Xi]"}], ",", 
         RowBox[{"\[Zeta]", "/", "\[Xi]"}], ",", "1"}], "}"}], "]"}]}], ";", 
     "  ", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[Sigma]sExt", ",", "\[Sigma]aExt"}], "}"}], " ", "=!=", 
        " ", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}]}], ",", " ", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\[Sigma]sExt", ",", "\[Sigma]aExt"}], "}"}], " ", 
           "proportional", " ", "with", " ", 
           RowBox[{"{", 
            RowBox[{"\[Sigma]s", ",", "\[Sigma]a"}]}]}], ")"}], "?"}], "*)"}],
        "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"H", "=", " ", 
         RowBox[{"LieAnalysis`Common`ExternalRegularization", "[", 
          RowBox[{"H", ",", " ", 
           RowBox[{"obj", "[", "\"\<FullOrientationList\>\"", "]"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"\[Sigma]sExt", ",", "\[Sigma]aExt"}], "}"}]}], "]"}]}], 
        ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"Dimensions", "[", "H", "]"}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"{", 
       RowBox[{"Nx", ",", "Ny", ",", "No"}], "}"}], "]"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"obtain", " ", "the", " ", "Hessian", " ", "field"}], " ", 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"Hess", "=", 
      RowBox[{
       RowBox[{"ConstantArray", "[", 
        RowBox[{
         RowBox[{"M", ".", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], "}"}], ".", "M"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"Nx", ",", "Ny", ",", "No"}], "}"}]}], "]"}], "*", "H"}]}], 
     RowBox[{"(*", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"M", ".", "#", ".", "M"}], "&"}], ",", "H", ",", 
        RowBox[{"{", "3", "}"}]}], "]"}], "*)"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "Determine", " ", "variables", " ", "depending", " ", "on", " ", "the", 
       " ", "method", " ", "that", " ", "is", " ", "considered"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"method", "==", "\"\<LIF\>\""}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\[Lambda]1", "=", 
         RowBox[{"Hess", "\[LeftDoubleBracket]", 
          RowBox[{"All", ",", "All", ",", "All", ",", "1", ",", "1"}], 
          "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"c", "=", 
         RowBox[{"Hess", "\[LeftDoubleBracket]", 
          RowBox[{"All", ",", "All", ",", "All", ",", "2", ",", "2"}], 
          "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"Q", "=", "c"}], ";"}], " ", 
       RowBox[{"(*", 
        RowBox[{"convexity", " ", "criterion"}], "*)"}], 
       "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\[Lambda]3", ",", "\[Lambda]2", ",", "\[Lambda]1"}], "}"}],
          "=", 
         RowBox[{"Transpose", "[", 
          RowBox[{
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Eigenvalues", "[", 
               RowBox[{"M", ".", "M", ".", 
                RowBox[{"Transpose", "[", "#", "]"}], ".", "M", ".", "M", ".",
                 "#"}], "]"}], "&"}], ",", "H", ",", 
             RowBox[{"{", "3", "}"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"2", ",", "3", ",", "4", ",", "1"}], "}"}]}], "]"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"c", "=", 
         RowBox[{"0.5", "*", 
          RowBox[{"(", 
           RowBox[{"\[Lambda]2", "+", "\[Lambda]3"}], ")"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Q", "=", 
         RowBox[{"Hess", "\[LeftDoubleBracket]", 
          RowBox[{"All", ",", "All", ",", "All", ",", "2", ",", "2"}], 
          "\[RightDoubleBracket]"}]}]}]}], " ", 
      RowBox[{"(*", 
       RowBox[{"convexity", " ", "criterion"}], "*)"}], "\[IndentingNewLine]",
       "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "Determine", " ", "measures", " ", "that", " ", "are", " ", "used", " ",
        "when", " ", "calculating", " ", "the", " ", "vesselness"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"S", "=", 
      RowBox[{
       SuperscriptBox["\[Lambda]1", "2"], "+", 
       SuperscriptBox["c", "2"]}]}], ";", " ", 
     RowBox[{"(*", 
      RowBox[{"structure", " ", "measure"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"R", "=", 
      RowBox[{"\[Lambda]1", "/", "c"}]}], ";", " ", 
     RowBox[{"(*", 
      RowBox[{"anisotropy", " ", "measure"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"\[Sigma]2", "=", 
      RowBox[{"0.2", "*", 
       RowBox[{"Max", "[", 
        RowBox[{"Abs", "[", "S", "]"}], "]"}]}]}], ";", " ", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Max", "[", 
        RowBox[{"Abs", "[", "S", "]"}], "]"}], " ", "ensures", " ", "that", 
       " ", "the", " ", "method", " ", "is", " ", "scaling", " ", 
       "invariant"}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "Calculate", " ", "the", " ", "vesselness", " ", "at", " ", "ALL", " ", 
       "locations", " ", "and", " ", "orientations"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"cost", "=", 
      RowBox[{
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["R", "2"]}], "/", 
         RowBox[{"(", 
          RowBox[{"2", 
           SuperscriptBox["\[Sigma]1", "2"]}], ")"}]}], "]"}], "*", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"Exp", "[", 
          RowBox[{
           RowBox[{"-", "S"}], "/", 
           RowBox[{"(", 
            RowBox[{"2", "*", "\[Sigma]2"}], ")"}]}], "]"}]}], ")"}]}]}], ";",
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"Selection", " ", "criterion", " ", "on", " ", "convexity"}], 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"Qgreater0", "=", 
      RowBox[{"1", "-", 
       RowBox[{"UnitStep", "[", 
        RowBox[{"-", "Q"}], "]"}]}]}], 
     RowBox[{"(*", 
      RowBox[{"Boole", "[", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"#", ">", "0"}], "&"}], ",", "Q", ",", 
         RowBox[{"{", "3", "}"}]}], "]"}], "]"}], "*)"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "Vesselness", " ", "at", " ", "locations", " ", "that", " ", "meet", 
       " ", "the", " ", "convexity", " ", "criterion"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"cost", "=", 
      RowBox[{"cost", "*", "Qgreater0"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "cost", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.831700621055113*^9, 3.83170071527347*^9}, {
   3.831700747539089*^9, 3.8317007766656637`*^9}, {3.8317008204573913`*^9, 
   3.831700862001667*^9}, {3.831700892710336*^9, 3.831700970456744*^9}, {
   3.8317010154423776`*^9, 3.831701059479223*^9}, {3.8317013033704925`*^9, 
   3.8317013312815733`*^9}, {3.831701406870053*^9, 3.831701479619607*^9}, 
   3.831702376776008*^9, {3.831702481275221*^9, 3.831702483945857*^9}, {
   3.8317025887621565`*^9, 3.8317025903591995`*^9}, {3.8317027497648787`*^9, 
   3.831702800763775*^9}, {3.8317033970662265`*^9, 3.831703398700817*^9}, {
   3.8317035132347107`*^9, 3.8317035667713284`*^9}, 3.831703623390505*^9, {
   3.831703687980508*^9, 3.831703755108315*^9}, 3.8317040310380526`*^9, {
   3.831704503596468*^9, 3.8317045060547113`*^9}, {3.8317091510973673`*^9, 
   3.831709151348405*^9}, {3.831709700050008*^9, 3.8317097006454115`*^9}, {
   3.831709769465223*^9, 3.831709778053362*^9}, {3.8317155312170706`*^9, 
   3.8317155333119874`*^9}, {3.8317161114464207`*^9, 3.831716113460864*^9}, {
   3.8317165663062634`*^9, 3.831716601884225*^9}, {3.8317166341631827`*^9, 
   3.8317166662136497`*^9}, {3.831716698452117*^9, 3.8317168843813276`*^9}, {
   3.8317170307114677`*^9, 3.8317170337875433`*^9}, {3.8317171661180487`*^9, 
   3.8317171824213257`*^9}, 3.8317196038493547`*^9, {3.8317198439178524`*^9, 
   3.831719846461735*^9}, {3.831720090946414*^9, 3.831720107271838*^9}, {
   3.83180597103368*^9, 3.831805975131879*^9}, 3.8318066757759495`*^9, 
   3.831807160890427*^9, {3.831807535208869*^9, 3.83180753950561*^9}, 
   3.831816444761509*^9, {3.8318769075046463`*^9, 3.831876924351859*^9}, {
   3.8318769679894247`*^9, 3.831876969530199*^9}, 3.8318770753873186`*^9, {
   3.831877380489173*^9, 3.831877416462142*^9}, 3.8318776429750586`*^9, {
   3.831877724862707*^9, 3.831877724981058*^9}, 3.831877863831921*^9, {
   3.831877987522004*^9, 3.831877987771125*^9}, 3.8318780977397194`*^9, 
   3.831878680963387*^9, {3.831878755740961*^9, 3.831878755799967*^9}, 
   3.8318792938839674`*^9, {3.8318798792499523`*^9, 3.831879879727828*^9}, 
   3.8318918349459953`*^9, 3.831892122586246*^9, {3.8318924298905687`*^9, 
   3.831892429990985*^9}, 3.831893137371763*^9, {3.831893508108944*^9, 
   3.8318935086064987`*^9}, {3.8318977629378843`*^9, 3.831897763043951*^9}, 
   3.8319619837836237`*^9, {3.831962015095559*^9, 3.8319620211980247`*^9}, {
   3.832039708432623*^9, 3.832039771838543*^9}, {3.8320399649595394`*^9, 
   3.832039967207567*^9}, {3.8320400626702003`*^9, 3.832040090979965*^9}, {
   3.832040147331139*^9, 3.83204021589231*^9}, {3.8320404626864543`*^9, 
   3.83204047811031*^9}, {3.8320405304053903`*^9, 3.832040532371476*^9}, {
   3.8320406329553537`*^9, 3.832040639388233*^9}, {3.8320406794126854`*^9, 
   3.8320406815172057`*^9}, {3.8320415723932037`*^9, 
   3.8320417365714226`*^9}, {3.8320418581849036`*^9, 3.832041858268427*^9}, {
   3.8320419615836406`*^9, 3.83204197356218*^9}, {3.8320422023049603`*^9, 
   3.8320422244985046`*^9}, 3.832043217729306*^9, 3.832043405912733*^9, {
   3.83204354210608*^9, 3.832043544501052*^9}, {3.8320501159262037`*^9, 
   3.83205011599699*^9}, {3.8320877489160194`*^9, 3.8320877502980633`*^9}, 
   3.8320893687909594`*^9, {3.832089922644105*^9, 3.832089923021311*^9}, {
   3.8320920918539553`*^9, 3.832092092656397*^9}, {3.832147657024498*^9, 
   3.8321476779655695`*^9}, {3.832147862083398*^9, 3.83214786842303*^9}, {
   3.8322997317459273`*^9, 3.8322997436680493`*^9}, {3.8465775928712397`*^9, 
   3.846577745083552*^9}, {3.8465778557171717`*^9, 3.8465778577551675`*^9}, {
   3.8465786742558002`*^9, 3.84657868367164*^9}, {3.8465788410951853`*^9, 
   3.846578857194363*^9}, {3.846579500498774*^9, 3.846579534540459*^9}, {
   3.8465796324902325`*^9, 3.8465796355829167`*^9}, 3.8465797857096863`*^9, {
   3.8465846164448853`*^9, 3.846584616720894*^9}, {3.846590246345928*^9, 
   3.846590319449998*^9}, 3.846592329832641*^9, {3.84666532669689*^9, 
   3.846665336334193*^9}, {3.8467368598810167`*^9, 3.846736864703286*^9}, {
   3.846736905911895*^9, 3.8467370029116135`*^9}, {3.8467370345126*^9, 
   3.846737077193122*^9}, {3.8467371253042583`*^9, 3.8467371294255247`*^9}, {
   3.8467552673380394`*^9, 3.8467552736122336`*^9}, {3.8467553158993297`*^9, 
   3.84675535142774*^9}, {3.846755429772394*^9, 3.8467554331364737`*^9}, {
   3.84727712879815*^9, 3.8472772027147455`*^9}, {3.905496086461472*^9, 
   3.9054961090841694`*^9}, {3.927604261130409*^9, 3.927604263090679*^9}},
 CellLabel->
  "In[677]:=",ExpressionUUID->"e4ab114b-0457-4183-a0d4-44eac90f96b7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"CostFunctionVesselnessFilteringExtReg2", "[", 
   RowBox[{
   "U_", ",", "\[Xi]_", ",", "\[Zeta]_", ",", "\[Sigma]s_", ",", "method_", 
    ",", 
    RowBox[{"\[Sigma]sExt_", ":", "0"}], ",", 
    RowBox[{"\[Sigma]aExt_", ":", "0"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "cost", ",", "H", ",", "Q", ",", "S", ",", "R", ",", "B11", ",", "B22", 
      ",", "obj", ",", "oc", ",", 
      RowBox[{"\[Sigma]1", "=", "0.5"}], ",", "\[Sigma]2", ",", "Qgreater0", 
      ",", "M", ",", "\[Lambda]1", ",", "\[Lambda]2", ",", "\[Lambda]3", ",", 
      "c", ",", 
      RowBox[{"\[Beta]", "=", 
       RowBox[{"0.75", "/", "\[Sigma]s"}]}], ",", "Hess", ",", " ", "HTH"}], 
     "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{"calculate", " ", "the", " ", "Hessian"}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"obj", "=", 
      RowBox[{"ObjPositionOrientationData", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\"\<Data\>\"", "\[Rule]", "U"}], ",", 
         RowBox[{"\"\<Symmetry\>\"", "\[Rule]", 
          RowBox[{"2", "\[Pi]"}]}], ",", " ", 
         RowBox[{"\"\<Wavelets\>\"", "\[Rule]", " ", "None"}], ",", " ", 
         RowBox[{"\"\<InputData\>\"", "\[Rule]", " ", "None"}], ",", " ", 
         RowBox[{"\"\<DcFilteredImage\>\"", "\[Rule]", "0"}]}], "}"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"H", "=", 
      RowBox[{
       RowBox[{"OrientationScoreTensor", "[", 
        RowBox[{"obj", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"0.5", "*", 
            SuperscriptBox["\[Sigma]s", "2"]}], ",", 
           RowBox[{"0.5", "*", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"\[Beta]", "*", "\[Sigma]s"}], ")"}], "2"]}]}], "}"}], 
         ",", "\"\<Hessian\>\""}], "]"}], "[", "\"\<Data\>\"", "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"define", " ", "M"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"M", " ", "=", " ", 
      RowBox[{"DiagonalMatrix", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"1", "/", "\[Xi]"}], ",", 
         RowBox[{"\[Zeta]", "/", "\[Xi]"}], ",", "1"}], "}"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Hess", "=", 
      RowBox[{
       RowBox[{"ConstantArray", "[", 
        RowBox[{
         RowBox[{"M", ".", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], "}"}], ".", "M"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"Nx", ",", "Ny", ",", "No"}], "}"}]}], "]"}], "*", "H"}]}], 
     RowBox[{"(*", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"M", ".", "#", ".", "M"}], "&"}], ",", "H", ",", 
        RowBox[{"{", "3", "}"}]}], "]"}], "*)"}], ";", "\[IndentingNewLine]", 
     RowBox[{"HTH", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Transpose", "[", "#", "]"}], ".", "#"}], "&"}], ",", 
        "Hess", ",", 
        RowBox[{"{", "3", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[Sigma]sExt", ",", "\[Sigma]aExt"}], "}"}], " ", "=!=", 
        " ", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"HTH", "=", " ", 
         RowBox[{"LieAnalysis`Common`ExternalRegularization", "[", 
          RowBox[{"HTH", ",", " ", 
           RowBox[{"obj", "[", "\"\<FullOrientationList\>\"", "]"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"\[Sigma]sExt", ",", "\[Sigma]aExt"}], "}"}]}], "]"}]}], 
        ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"Dimensions", "[", "HTH", "]"}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"{", 
       RowBox[{"Nx", ",", "Ny", ",", "No"}], "}"}], "]"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"obtain", " ", "the", " ", "Hessian", " ", "field"}], " ", 
      "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "Determine", " ", "variables", " ", "depending", " ", "on", " ", "the", 
       " ", "method", " ", "that", " ", "is", " ", "considered"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"method", "==", "\"\<LIF\>\""}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\[Lambda]1", "=", 
         RowBox[{"Hess", "\[LeftDoubleBracket]", 
          RowBox[{"All", ",", "All", ",", "All", ",", "1", ",", "1"}], 
          "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"c", "=", 
         RowBox[{"Hess", "\[LeftDoubleBracket]", 
          RowBox[{"All", ",", "All", ",", "All", ",", "2", ",", "2"}], 
          "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"Q", "=", "c"}], ";"}], " ", 
       RowBox[{"(*", 
        RowBox[{"convexity", " ", "criterion"}], "*)"}], 
       "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\[Lambda]3", ",", "\[Lambda]2", ",", "\[Lambda]1"}], "}"}],
          "=", 
         RowBox[{"Transpose", "[", 
          RowBox[{
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Eigenvalues", "[", "#", "]"}], "&"}], ",", "HTH", ",", 
             RowBox[{"{", "3", "}"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"2", ",", "3", ",", "4", ",", "1"}], "}"}]}], "]"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"c", "=", 
         RowBox[{"0.5", "*", 
          RowBox[{"(", 
           RowBox[{"\[Lambda]2", "+", "\[Lambda]3"}], ")"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Q", "=", 
         RowBox[{"Hess", "\[LeftDoubleBracket]", 
          RowBox[{"All", ",", "All", ",", "All", ",", "2", ",", "2"}], 
          "\[RightDoubleBracket]"}]}]}]}], " ", 
      RowBox[{"(*", 
       RowBox[{"convexity", " ", "criterion"}], "*)"}], "\[IndentingNewLine]",
       "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "Determine", " ", "measures", " ", "that", " ", "are", " ", "used", " ",
        "when", " ", "calculating", " ", "the", " ", "vesselness"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"S", "=", 
      RowBox[{
       SuperscriptBox["\[Lambda]1", "2"], "+", 
       SuperscriptBox["c", "2"]}]}], ";", " ", 
     RowBox[{"(*", 
      RowBox[{"structure", " ", "measure"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"R", "=", 
      RowBox[{"\[Lambda]1", "/", "c"}]}], ";", " ", 
     RowBox[{"(*", 
      RowBox[{"anisotropy", " ", "measure"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"\[Sigma]2", "=", 
      RowBox[{"0.2", "*", 
       RowBox[{"Max", "[", 
        RowBox[{"Abs", "[", "S", "]"}], "]"}]}]}], ";", " ", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Max", "[", 
        RowBox[{"Abs", "[", "S", "]"}], "]"}], " ", "ensures", " ", "that", 
       " ", "the", " ", "method", " ", "is", " ", "scaling", " ", 
       "invariant"}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "Calculate", " ", "the", " ", "vesselness", " ", "at", " ", "ALL", " ", 
       "locations", " ", "and", " ", "orientations"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"cost", "=", 
      RowBox[{
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["R", "2"]}], "/", 
         RowBox[{"(", 
          RowBox[{"2", 
           SuperscriptBox["\[Sigma]1", "2"]}], ")"}]}], "]"}], "*", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"Exp", "[", 
          RowBox[{
           RowBox[{"-", "S"}], "/", 
           RowBox[{"(", 
            RowBox[{"2", "*", "\[Sigma]2"}], ")"}]}], "]"}]}], ")"}]}]}], ";",
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"Selection", " ", "criterion", " ", "on", " ", "convexity"}], 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"Qgreater0", "=", 
      RowBox[{"1", "-", 
       RowBox[{"UnitStep", "[", 
        RowBox[{"-", "Q"}], "]"}]}]}], 
     RowBox[{"(*", 
      RowBox[{"Boole", "[", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"#", ">", "0"}], "&"}], ",", "Q", ",", 
         RowBox[{"{", "3", "}"}]}], "]"}], "]"}], "*)"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "Vesselness", " ", "at", " ", "locations", " ", "that", " ", "meet", 
       " ", "the", " ", "convexity", " ", "criterion"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"cost", "=", 
      RowBox[{"cost", "*", "Qgreater0"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "cost", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.831700621055113*^9, 3.83170071527347*^9}, {
   3.831700747539089*^9, 3.8317007766656637`*^9}, {3.8317008204573913`*^9, 
   3.831700862001667*^9}, {3.831700892710336*^9, 3.831700970456744*^9}, {
   3.8317010154423776`*^9, 3.831701059479223*^9}, {3.8317013033704925`*^9, 
   3.8317013312815733`*^9}, {3.831701406870053*^9, 3.831701479619607*^9}, 
   3.831702376776008*^9, {3.831702481275221*^9, 3.831702483945857*^9}, {
   3.8317025887621565`*^9, 3.8317025903591995`*^9}, {3.8317027497648787`*^9, 
   3.831702800763775*^9}, {3.8317033970662265`*^9, 3.831703398700817*^9}, {
   3.8317035132347107`*^9, 3.8317035667713284`*^9}, 3.831703623390505*^9, {
   3.831703687980508*^9, 3.831703755108315*^9}, 3.8317040310380526`*^9, {
   3.831704503596468*^9, 3.8317045060547113`*^9}, {3.8317091510973673`*^9, 
   3.831709151348405*^9}, {3.831709700050008*^9, 3.8317097006454115`*^9}, {
   3.831709769465223*^9, 3.831709778053362*^9}, {3.8317155312170706`*^9, 
   3.8317155333119874`*^9}, {3.8317161114464207`*^9, 3.831716113460864*^9}, {
   3.8317165663062634`*^9, 3.831716601884225*^9}, {3.8317166341631827`*^9, 
   3.8317166662136497`*^9}, {3.831716698452117*^9, 3.8317168843813276`*^9}, {
   3.8317170307114677`*^9, 3.8317170337875433`*^9}, {3.8317171661180487`*^9, 
   3.8317171824213257`*^9}, 3.8317196038493547`*^9, {3.8317198439178524`*^9, 
   3.831719846461735*^9}, {3.831720090946414*^9, 3.831720107271838*^9}, {
   3.83180597103368*^9, 3.831805975131879*^9}, 3.8318066757759495`*^9, 
   3.831807160890427*^9, {3.831807535208869*^9, 3.83180753950561*^9}, 
   3.831816444761509*^9, {3.8318769075046463`*^9, 3.831876924351859*^9}, {
   3.8318769679894247`*^9, 3.831876969530199*^9}, 3.8318770753873186`*^9, {
   3.831877380489173*^9, 3.831877416462142*^9}, 3.8318776429750586`*^9, {
   3.831877724862707*^9, 3.831877724981058*^9}, 3.831877863831921*^9, {
   3.831877987522004*^9, 3.831877987771125*^9}, 3.8318780977397194`*^9, 
   3.831878680963387*^9, {3.831878755740961*^9, 3.831878755799967*^9}, 
   3.8318792938839674`*^9, {3.8318798792499523`*^9, 3.831879879727828*^9}, 
   3.8318918349459953`*^9, 3.831892122586246*^9, {3.8318924298905687`*^9, 
   3.831892429990985*^9}, 3.831893137371763*^9, {3.831893508108944*^9, 
   3.8318935086064987`*^9}, {3.8318977629378843`*^9, 3.831897763043951*^9}, 
   3.8319619837836237`*^9, {3.831962015095559*^9, 3.8319620211980247`*^9}, {
   3.832039708432623*^9, 3.832039771838543*^9}, {3.8320399649595394`*^9, 
   3.832039967207567*^9}, {3.8320400626702003`*^9, 3.832040090979965*^9}, {
   3.832040147331139*^9, 3.83204021589231*^9}, {3.8320404626864543`*^9, 
   3.83204047811031*^9}, {3.8320405304053903`*^9, 3.832040532371476*^9}, {
   3.8320406329553537`*^9, 3.832040639388233*^9}, {3.8320406794126854`*^9, 
   3.8320406815172057`*^9}, {3.8320415723932037`*^9, 
   3.8320417365714226`*^9}, {3.8320418581849036`*^9, 3.832041858268427*^9}, {
   3.8320419615836406`*^9, 3.83204197356218*^9}, {3.8320422023049603`*^9, 
   3.8320422244985046`*^9}, 3.832043217729306*^9, 3.832043405912733*^9, {
   3.83204354210608*^9, 3.832043544501052*^9}, {3.8320501159262037`*^9, 
   3.83205011599699*^9}, {3.8320877489160194`*^9, 3.8320877502980633`*^9}, 
   3.8320893687909594`*^9, {3.832089922644105*^9, 3.832089923021311*^9}, {
   3.8320920918539553`*^9, 3.832092092656397*^9}, {3.832147657024498*^9, 
   3.8321476779655695`*^9}, {3.832147862083398*^9, 3.83214786842303*^9}, {
   3.8322997317459273`*^9, 3.8322997436680493`*^9}, {3.8465775928712397`*^9, 
   3.846577745083552*^9}, {3.8465778557171717`*^9, 3.8465778577551675`*^9}, {
   3.8465786742558002`*^9, 3.84657868367164*^9}, {3.8465788410951853`*^9, 
   3.846578857194363*^9}, {3.846579500498774*^9, 3.846579534540459*^9}, {
   3.8465796324902325`*^9, 3.8465796355829167`*^9}, 3.8465797857096863`*^9, {
   3.8465846164448853`*^9, 3.846584616720894*^9}, {3.846590246345928*^9, 
   3.846590319449998*^9}, 3.846592329832641*^9, {3.84666532669689*^9, 
   3.846665336334193*^9}, {3.8467368598810167`*^9, 3.846736864703286*^9}, {
   3.846736905911895*^9, 3.8467370029116135`*^9}, {3.8467370345126*^9, 
   3.846737077193122*^9}, {3.8467371253042583`*^9, 3.8467371294255247`*^9}, {
   3.8467552673380394`*^9, 3.8467552736122336`*^9}, {3.8467553158993297`*^9, 
   3.84675535142774*^9}, {3.846755429772394*^9, 3.8467554331364737`*^9}, {
   3.84727712879815*^9, 3.8472772027147455`*^9}, {3.905496086461472*^9, 
   3.9054961090841694`*^9}, {3.9276039711326647`*^9, 3.927604064972455*^9}, {
   3.9276044142390966`*^9, 3.9276044810993137`*^9}, {3.927604797678545*^9, 
   3.9276048116494365`*^9}, {3.9276053675473843`*^9, 3.927605368300291*^9}, {
   3.9276055560440817`*^9, 3.927605588541387*^9}, {3.9276095741602025`*^9, 
   3.9276095873079762`*^9}, {3.9276102263860145`*^9, 3.927610245267482*^9}, {
   3.927610291986785*^9, 3.92761033862362*^9}},
 CellLabel->
  "In[678]:=",ExpressionUUID->"65e0e830-f568-4c71-b485-3d9de782c63e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"MultiScaleVesselnessExtReg", "[", 
   RowBox[{
   "U_", ",", "Uboarder_", ",", "\[Xi]_", ",", "\[Zeta]_", ",", "\[Sigma]s_", 
    ",", "method_", ",", 
    RowBox[{"\[Sigma]sExt_", ":", "0"}], ",", 
    RowBox[{"\[Sigma]aExt_", ":", "0"}], ",", 
    RowBox[{"erosion_", ":", "1"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "vesselness", ",", "vesselnessBoarder", ",", "vesselnessfilterNoBoarder",
       ",", "vesselnessfilterNoBoarderErosion", ",", "newvesselnessfilter", 
      ",", 
      RowBox[{"vesselnessfilter", "=", 
       RowBox[{"{", "}"}]}], ",", "k", ",", "i"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "1"}], ",", 
       RowBox[{"i", "<=", 
        RowBox[{"Length", "[", "\[Sigma]s", "]"}]}], ",", 
       RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Select", " ", "the", " ", "spatial", " ", "scale", " ", "for", " ", 
         "the", " ", "specific", " ", "iteration"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"k", "=", 
         RowBox[{"\[Sigma]s", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
         "Calculate", " ", "the", " ", "vesselness", " ", "of", " ", "the", 
          " ", "full", " ", "image"}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"vesselness", "=", 
         RowBox[{"CostFunctionVesselnessFilteringExtReg", "[", 
          RowBox[{
          "U", ",", "\[Xi]", ",", "\[Zeta]", ",", "k", ",", "method", ",", 
           "k", ",", "\[Sigma]aExt"}], "]"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
         "Calculate", " ", "the", " ", "vesselness", " ", "of", " ", "the", 
          " ", "boarder", " ", "of", " ", "the", " ", "image"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"vesselnessBoarder", "=", 
         RowBox[{"CostFunctionVesselnessFilteringExtReg", "[", 
          RowBox[{
          "Uboarder", ",", "\[Xi]", ",", "\[Zeta]", ",", "k", ",", "method", 
           ",", "k", ",", "\[Sigma]aExt"}], "]"}]}], ";", " ", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
         "Calculate", " ", "the", " ", "vesselness", " ", "without", " ", 
          "the", " ", "boarder"}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"vesselnessfilterNoBoarder", "=", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"UnitStep", "[", 
             RowBox[{"vesselnessBoarder", "-", "0.0001"}], "]"}]}], ")"}], 
          "*", "vesselness"}]}], ";", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Boole", "[", 
               RowBox[{"#", "<", "0.0001"}], "]"}], "&"}], ",", 
             "vesselnessBoarder", ",", 
             RowBox[{"{", "3", "}"}]}], "]"}], "*", "vesselness"}], ";"}], 
         "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{
          "Add", " ", "erosion", " ", "to", " ", "the", " ", "cost", " ", 
           "function"}], " ", "\[Rule]", " ", 
          RowBox[{
          "erosion", " ", "of", " ", "broad", " ", "angular", " ", 
           "boundaries"}]}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"vesselnessfilterNoBoarderErosion", "=", 
         RowBox[{"Erosion", "[", 
          RowBox[{"vesselnessfilterNoBoarder", ",", 
           RowBox[{"erosion", "*", 
            RowBox[{"{", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"1", ",", "1", ",", "1"}], "}"}], "}"}], "}"}]}], ",", 
           RowBox[{"Padding", "\[Rule]", "\"\<Periodic\>\""}]}], "]"}]}], ";",
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
         "Cut", " ", "off", " ", "the", " ", "upper", " ", "boarder", " ", 
          "which", " ", "influences", " ", "the", " ", "vesselness"}], "*)"}],
         "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"vesselnessfilterNoBoarderErosion", "[", 
          RowBox[{"[", 
           RowBox[{"1", ";;", "5"}], "]"}], "]"}], "=", 
         RowBox[{"ConstantArray", "[", 
          RowBox[{"0", ",", 
           RowBox[{"{", 
            RowBox[{"5", ",", "Ny", ",", "No"}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
         "Cut", " ", "off", " ", "the", " ", "lower", " ", "boarder", " ", 
          "which", " ", "influences", " ", "the", " ", "vesselness"}], "*)"}],
         "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"vesselnessfilterNoBoarderErosion", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"-", "5"}], ";;"}], "]"}], "]"}], "=", 
         RowBox[{"ConstantArray", "[", 
          RowBox[{"0", ",", 
           RowBox[{"{", 
            RowBox[{"5", ",", "Ny", ",", "No"}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"vesselnessfilterNoBoarderErosion2", "=", 
           RowBox[{"MapIndexed", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"Boole", "[", 
                RowBox[{
                 RowBox[{
                 "#2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
                  "\[GreaterEqual]", "6"}], "]"}], "*", "#1"}], "&"}], ",", 
             "vesselnessfilterNoBoarderErosion", ",", 
             RowBox[{"{", "3", "}"}]}], "]"}]}], ";"}], 
         RowBox[{"(*", 
          RowBox[{"Cut", " ", "off", " ", "upper", " ", "boarder"}], "*)"}], 
         "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"(*", 
          RowBox[{
          "Create", " ", "mobility", " ", "function", " ", "only", " ", 
           "containing", " ", "lifts", " ", "at", " ", "bifurcations"}], 
          "*)"}], "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"liftElevators", "=", 
           RowBox[{"ConstantArray", "[", 
            RowBox[{"0", ",", 
             RowBox[{"{", 
              RowBox[{"No", ",", "Nx", ",", "Ny"}], "}"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"Map", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"liftElevators", "\[LeftDoubleBracket]", 
                  RowBox[{"All", ",", 
                   RowBox[{"Sequence", "@@", 
                    RowBox[{"(", 
                    RowBox[{"#", "-", 
                    RowBox[{"{", 
                    RowBox[{"ySelect", ",", "0"}], "}"}]}], ")"}]}]}], 
                  "\[RightDoubleBracket]"}], "=", "1"}], ";"}], "&"}], ",", 
              "seedsIndex"}], "]"}], ";", "\[IndentingNewLine]", 
            RowBox[{"liftElevators", "=", 
             RowBox[{"GaussianFilter", "[", 
              RowBox[{"liftElevators", ",", "1.5"}], "]"}]}], ";"}], "*)"}], 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
           "Combine", " ", "both", " ", "mobility", " ", "functions"}], 
           "*)"}], "\[IndentingNewLine]", 
          RowBox[{"newvesselnessfilter", "=", 
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Max", "[", "#", "]"}], "&"}], ",", 
             RowBox[{"Transpose", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"4", "*", 
                  RowBox[{
                  "Rescale", "[", "vesselnessfilterNoBoarderErosion2", 
                   "]"}]}], ",", 
                 RowBox[{"Transpose", "[", 
                  RowBox[{
                   RowBox[{"Rescale", "[", "liftElevators", "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"3", ",", "1", ",", "2"}], "}"}]}], "]"}]}], 
                "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"4", ",", "1", ",", "2", ",", "3"}], "}"}]}], "]"}], 
             ",", 
             RowBox[{"{", "3", "}"}]}], "]"}]}], ";"}], "*)"}], 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
         "Add", " ", "new", " ", "vesselness", " ", "to", " ", "the", " ", 
          "array", " ", "containing", " ", "vesselness", " ", "filters", " ", 
          "for", " ", "all", " ", "different", " ", "values", " ", "of", " ", 
          "\[Sigma]s"}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{
        "newvesselnessfilter", "=", "vesselnessfilterNoBoarderErosion"}], ";",
         "\[IndentingNewLine]", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"vesselnessfilter", ",", "newvesselnessfilter"}], "]"}], 
        ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"vesselnessfilter", "=", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Max", "[", "#", "]"}], "&"}], ",", 
          RowBox[{"Transpose", "[", 
           RowBox[{"vesselnessfilter", ",", 
            RowBox[{"{", 
             RowBox[{"4", ",", "1", ",", "2", ",", "3"}], "}"}]}], "]"}], ",", 
          RowBox[{"{", "3", "}"}]}], "]"}]}], ";"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "vesselnessfilter", "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.846069290478445*^9, 3.846069320848277*^9}, {
   3.846069388578823*^9, 3.8460694136426706`*^9}, {3.8460698943625517`*^9, 
   3.8460699961806927`*^9}, {3.8460700607895765`*^9, 3.846070370519379*^9}, {
   3.8460704370347395`*^9, 3.846070455399172*^9}, {3.8460705633723164`*^9, 
   3.846070607320956*^9}, {3.8461357617580004`*^9, 3.84613576321036*^9}, {
   3.8461371780315437`*^9, 3.8461371794824996`*^9}, {3.846578893545618*^9, 
   3.8465789371578035`*^9}, {3.846579069704646*^9, 3.8465790701274323`*^9}, {
   3.846737145534981*^9, 3.846737164629548*^9}, {3.846755598107308*^9, 
   3.8467556087354326`*^9}, {3.846759888042096*^9, 3.846759896286005*^9}, {
   3.8467599385553436`*^9, 3.8467599421542425`*^9}, {3.8467604834169755`*^9, 
   3.8467604851386766`*^9}, {3.8467609263246174`*^9, 3.846760926478567*^9}, {
   3.846761476147117*^9, 3.8467614789751863`*^9}, {3.8468387665957375`*^9, 
   3.8468387816980734`*^9}, {3.8468427788829308`*^9, 
   3.8468427790168743`*^9}, {3.847277220387966*^9, 3.8472773673148804`*^9}, {
   3.8477898596589794`*^9, 3.847789876833465*^9}, {3.8478563017751393`*^9, 
   3.8478563188662643`*^9}, {3.8479662286057787`*^9, 3.847966240197607*^9}, {
   3.8479664567407155`*^9, 3.847966457909107*^9}, {3.847967542490487*^9, 
   3.8479675639557314`*^9}, {3.848039855485445*^9, 3.848039859594449*^9}, 
   3.848120190541051*^9, {3.9054959362666745`*^9, 3.9054959560897274`*^9}, {
   3.9054975650941095`*^9, 3.9054975678243*^9}},
 CellLabel->
  "In[679]:=",ExpressionUUID->"bf566bfa-53e3-4131-9fbd-16b8c7b203b7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"MultiScaleVesselnessExtReg2", "[", 
   RowBox[{
   "U_", ",", "Uboarder_", ",", "\[Xi]_", ",", "\[Zeta]_", ",", "\[Sigma]s_", 
    ",", "method_", ",", 
    RowBox[{"\[Sigma]sExt_", ":", "0"}], ",", 
    RowBox[{"\[Sigma]aExt_", ":", "0"}], ",", 
    RowBox[{"erosion_", ":", "1"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "vesselness", ",", "vesselnessBoarder", ",", "vesselnessfilterNoBoarder",
       ",", "vesselnessfilterNoBoarderErosion", ",", "newvesselnessfilter", 
      ",", 
      RowBox[{"vesselnessfilter", "=", 
       RowBox[{"{", "}"}]}], ",", "k", ",", "i"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "1"}], ",", 
       RowBox[{"i", "<=", 
        RowBox[{"Length", "[", "\[Sigma]s", "]"}]}], ",", 
       RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Select", " ", "the", " ", "spatial", " ", "scale", " ", "for", " ", 
         "the", " ", "specific", " ", "iteration"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"k", "=", 
         RowBox[{"\[Sigma]s", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
         "Calculate", " ", "the", " ", "vesselness", " ", "of", " ", "the", 
          " ", "full", " ", "image"}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"vesselness", "=", 
         RowBox[{"CostFunctionVesselnessFilteringExtReg2", "[", 
          RowBox[{
          "U", ",", "\[Xi]", ",", "\[Zeta]", ",", "k", ",", "method", ",", 
           "k", ",", "\[Sigma]aExt"}], "]"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
         "Calculate", " ", "the", " ", "vesselness", " ", "of", " ", "the", 
          " ", "boarder", " ", "of", " ", "the", " ", "image"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"vesselnessBoarder", "=", 
         RowBox[{"CostFunctionVesselnessFilteringExtReg", "[", 
          RowBox[{
          "Uboarder", ",", "\[Xi]", ",", "\[Zeta]", ",", "k", ",", "method", 
           ",", "k", ",", "\[Sigma]aExt"}], "]"}]}], ";", " ", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
         "Calculate", " ", "the", " ", "vesselness", " ", "without", " ", 
          "the", " ", "boarder"}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"vesselnessfilterNoBoarder", "=", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"UnitStep", "[", 
             RowBox[{"vesselnessBoarder", "-", "0.0001"}], "]"}]}], ")"}], 
          "*", "vesselness"}]}], ";", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Boole", "[", 
               RowBox[{"#", "<", "0.0001"}], "]"}], "&"}], ",", 
             "vesselnessBoarder", ",", 
             RowBox[{"{", "3", "}"}]}], "]"}], "*", "vesselness"}], ";"}], 
         "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{
          "Add", " ", "erosion", " ", "to", " ", "the", " ", "cost", " ", 
           "function"}], " ", "\[Rule]", " ", 
          RowBox[{
          "erosion", " ", "of", " ", "broad", " ", "angular", " ", 
           "boundaries"}]}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"vesselnessfilterNoBoarderErosion", "=", 
         RowBox[{"Erosion", "[", 
          RowBox[{"vesselnessfilterNoBoarder", ",", 
           RowBox[{"erosion", "*", 
            RowBox[{"{", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"1", ",", "1", ",", "1"}], "}"}], "}"}], "}"}]}], ",", 
           RowBox[{"Padding", "\[Rule]", "\"\<Periodic\>\""}]}], "]"}]}], ";",
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
         "Cut", " ", "off", " ", "the", " ", "upper", " ", "boarder", " ", 
          "which", " ", "influences", " ", "the", " ", "vesselness"}], "*)"}],
         "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"vesselnessfilterNoBoarderErosion", "[", 
          RowBox[{"[", 
           RowBox[{"1", ";;", "5"}], "]"}], "]"}], "=", 
         RowBox[{"ConstantArray", "[", 
          RowBox[{"0", ",", 
           RowBox[{"{", 
            RowBox[{"5", ",", "Ny", ",", "No"}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
         "Cut", " ", "off", " ", "the", " ", "lower", " ", "boarder", " ", 
          "which", " ", "influences", " ", "the", " ", "vesselness"}], "*)"}],
         "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"vesselnessfilterNoBoarderErosion", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"-", "5"}], ";;"}], "]"}], "]"}], "=", 
         RowBox[{"ConstantArray", "[", 
          RowBox[{"0", ",", 
           RowBox[{"{", 
            RowBox[{"5", ",", "Ny", ",", "No"}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"vesselnessfilterNoBoarderErosion2", "=", 
           RowBox[{"MapIndexed", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"Boole", "[", 
                RowBox[{
                 RowBox[{
                 "#2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
                  "\[GreaterEqual]", "6"}], "]"}], "*", "#1"}], "&"}], ",", 
             "vesselnessfilterNoBoarderErosion", ",", 
             RowBox[{"{", "3", "}"}]}], "]"}]}], ";"}], 
         RowBox[{"(*", 
          RowBox[{"Cut", " ", "off", " ", "upper", " ", "boarder"}], "*)"}], 
         "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"(*", 
          RowBox[{
          "Create", " ", "mobility", " ", "function", " ", "only", " ", 
           "containing", " ", "lifts", " ", "at", " ", "bifurcations"}], 
          "*)"}], "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"liftElevators", "=", 
           RowBox[{"ConstantArray", "[", 
            RowBox[{"0", ",", 
             RowBox[{"{", 
              RowBox[{"No", ",", "Nx", ",", "Ny"}], "}"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"Map", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"liftElevators", "\[LeftDoubleBracket]", 
                  RowBox[{"All", ",", 
                   RowBox[{"Sequence", "@@", 
                    RowBox[{"(", 
                    RowBox[{"#", "-", 
                    RowBox[{"{", 
                    RowBox[{"ySelect", ",", "0"}], "}"}]}], ")"}]}]}], 
                  "\[RightDoubleBracket]"}], "=", "1"}], ";"}], "&"}], ",", 
              "seedsIndex"}], "]"}], ";", "\[IndentingNewLine]", 
            RowBox[{"liftElevators", "=", 
             RowBox[{"GaussianFilter", "[", 
              RowBox[{"liftElevators", ",", "1.5"}], "]"}]}], ";"}], "*)"}], 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
           "Combine", " ", "both", " ", "mobility", " ", "functions"}], 
           "*)"}], "\[IndentingNewLine]", 
          RowBox[{"newvesselnessfilter", "=", 
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Max", "[", "#", "]"}], "&"}], ",", 
             RowBox[{"Transpose", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"4", "*", 
                  RowBox[{
                  "Rescale", "[", "vesselnessfilterNoBoarderErosion2", 
                   "]"}]}], ",", 
                 RowBox[{"Transpose", "[", 
                  RowBox[{
                   RowBox[{"Rescale", "[", "liftElevators", "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"3", ",", "1", ",", "2"}], "}"}]}], "]"}]}], 
                "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"4", ",", "1", ",", "2", ",", "3"}], "}"}]}], "]"}], 
             ",", 
             RowBox[{"{", "3", "}"}]}], "]"}]}], ";"}], "*)"}], 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
         "Add", " ", "new", " ", "vesselness", " ", "to", " ", "the", " ", 
          "array", " ", "containing", " ", "vesselness", " ", "filters", " ", 
          "for", " ", "all", " ", "different", " ", "values", " ", "of", " ", 
          "\[Sigma]s"}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{
        "newvesselnessfilter", "=", "vesselnessfilterNoBoarderErosion"}], ";",
         "\[IndentingNewLine]", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"vesselnessfilter", ",", "newvesselnessfilter"}], "]"}], 
        ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"vesselnessfilter", "=", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Max", "[", "#", "]"}], "&"}], ",", 
          RowBox[{"Transpose", "[", 
           RowBox[{"vesselnessfilter", ",", 
            RowBox[{"{", 
             RowBox[{"4", ",", "1", ",", "2", ",", "3"}], "}"}]}], "]"}], ",", 
          RowBox[{"{", "3", "}"}]}], "]"}]}], ";"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "vesselnessfilter", "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.846069290478445*^9, 3.846069320848277*^9}, {
   3.846069388578823*^9, 3.8460694136426706`*^9}, {3.8460698943625517`*^9, 
   3.8460699961806927`*^9}, {3.8460700607895765`*^9, 3.846070370519379*^9}, {
   3.8460704370347395`*^9, 3.846070455399172*^9}, {3.8460705633723164`*^9, 
   3.846070607320956*^9}, {3.8461357617580004`*^9, 3.84613576321036*^9}, {
   3.8461371780315437`*^9, 3.8461371794824996`*^9}, {3.846578893545618*^9, 
   3.8465789371578035`*^9}, {3.846579069704646*^9, 3.8465790701274323`*^9}, {
   3.846737145534981*^9, 3.846737164629548*^9}, {3.846755598107308*^9, 
   3.8467556087354326`*^9}, {3.846759888042096*^9, 3.846759896286005*^9}, {
   3.8467599385553436`*^9, 3.8467599421542425`*^9}, {3.8467604834169755`*^9, 
   3.8467604851386766`*^9}, {3.8467609263246174`*^9, 3.846760926478567*^9}, {
   3.846761476147117*^9, 3.8467614789751863`*^9}, {3.8468387665957375`*^9, 
   3.8468387816980734`*^9}, {3.8468427788829308`*^9, 
   3.8468427790168743`*^9}, {3.847277220387966*^9, 3.8472773673148804`*^9}, {
   3.8477898596589794`*^9, 3.847789876833465*^9}, {3.8478563017751393`*^9, 
   3.8478563188662643`*^9}, {3.8479662286057787`*^9, 3.847966240197607*^9}, {
   3.8479664567407155`*^9, 3.847966457909107*^9}, {3.847967542490487*^9, 
   3.8479675639557314`*^9}, {3.848039855485445*^9, 3.848039859594449*^9}, 
   3.848120190541051*^9, {3.9054959362666745`*^9, 3.9054959560897274`*^9}, {
   3.9054975650941095`*^9, 3.9054975678243*^9}, {3.9276048375295362`*^9, 
   3.927604841247712*^9}, 3.9276121965947943`*^9},
 CellLabel->
  "In[680]:=",ExpressionUUID->"57e8162f-8cf3-4b50-9305-3a25c892b4df"],

Cell[BoxData[
 RowBox[{
  RowBox[{"MultiScaleVesselnessExtRegErosion0", "[", 
   RowBox[{
   "U_", ",", "Uboarder_", ",", "\[Xi]_", ",", "\[Zeta]_", ",", "\[Sigma]s_", 
    ",", "method_", ",", 
    RowBox[{"\[Sigma]sExt_", ":", "0"}], ",", 
    RowBox[{"\[Sigma]aExt_", ":", "0"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "vesselness", ",", "vesselnessBoarder", ",", "vesselnessfilterNoBoarder",
       ",", "vesselnessfilterNoBoarderErosion", ",", "newvesselnessfilter", 
      ",", 
      RowBox[{"vesselnessfilter", "=", 
       RowBox[{"{", "}"}]}], ",", "k", ",", "i"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "1"}], ",", 
       RowBox[{"i", "<=", 
        RowBox[{"Length", "[", "\[Sigma]s", "]"}]}], ",", 
       RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Select", " ", "the", " ", "spatial", " ", "scale", " ", "for", " ", 
         "the", " ", "specific", " ", "iteration"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"k", "=", 
         RowBox[{"\[Sigma]s", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
         "Calculate", " ", "the", " ", "vesselness", " ", "of", " ", "the", 
          " ", "full", " ", "image"}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"vesselness", "=", 
         RowBox[{"CostFunctionVesselnessFilteringExtReg", "[", 
          RowBox[{
          "U", ",", "\[Xi]", ",", "\[Zeta]", ",", "k", ",", "method", ",", 
           "k", ",", "\[Sigma]aExt"}], "]"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
         "Calculate", " ", "the", " ", "vesselness", " ", "of", " ", "the", 
          " ", "boarder", " ", "of", " ", "the", " ", "image"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"vesselnessBoarder", "=", 
         RowBox[{"CostFunctionVesselnessFilteringExtReg", "[", 
          RowBox[{
          "Uboarder", ",", "\[Xi]", ",", "\[Zeta]", ",", "k", ",", "method", 
           ",", "\[Sigma]sExt", ",", "\[Sigma]aExt"}], "]"}]}], ";", " ", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
         "Calculate", " ", "the", " ", "vesselness", " ", "without", " ", 
          "the", " ", "boarder"}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"vesselnessfilterNoBoarder", "=", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"UnitStep", "[", 
             RowBox[{"vesselnessBoarder", "-", "0.0001"}], "]"}]}], ")"}], 
          "*", "vesselness"}]}], ";", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Boole", "[", 
               RowBox[{"#", "<", "0.0001"}], "]"}], "&"}], ",", 
             "vesselnessBoarder", ",", 
             RowBox[{"{", "3", "}"}]}], "]"}], "*", "vesselness"}], ";"}], 
         "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{
          "Add", " ", "erosion", " ", "to", " ", "the", " ", "cost", " ", 
           "function"}], " ", "\[Rule]", " ", 
          RowBox[{
          "erosion", " ", "of", " ", "broad", " ", "angular", " ", 
           "boundaries"}]}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{
        "vesselnessfilterNoBoarderErosion", "=", 
         "vesselnessfilterNoBoarder"}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
         "Cut", " ", "off", " ", "the", " ", "upper", " ", "boarder", " ", 
          "which", " ", "influences", " ", "the", " ", "vesselness"}], "*)"}],
         "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"vesselnessfilterNoBoarderErosion", "[", 
          RowBox[{"[", 
           RowBox[{"1", ";;", "5"}], "]"}], "]"}], "=", 
         RowBox[{"ConstantArray", "[", 
          RowBox[{"0", ",", 
           RowBox[{"{", 
            RowBox[{"5", ",", "Ny", ",", "No"}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
         "Cut", " ", "off", " ", "the", " ", "lower", " ", "boarder", " ", 
          "which", " ", "influences", " ", "the", " ", "vesselness"}], "*)"}],
         "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"vesselnessfilterNoBoarderErosion", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"-", "5"}], ";;"}], "]"}], "]"}], "=", 
         RowBox[{"ConstantArray", "[", 
          RowBox[{"0", ",", 
           RowBox[{"{", 
            RowBox[{"5", ",", "Ny", ",", "No"}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"vesselnessfilterNoBoarderErosion2", "=", 
           RowBox[{"MapIndexed", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"Boole", "[", 
                RowBox[{
                 RowBox[{
                 "#2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
                  "\[GreaterEqual]", "6"}], "]"}], "*", "#1"}], "&"}], ",", 
             "vesselnessfilterNoBoarderErosion", ",", 
             RowBox[{"{", "3", "}"}]}], "]"}]}], ";"}], 
         RowBox[{"(*", 
          RowBox[{"Cut", " ", "off", " ", "upper", " ", "boarder"}], "*)"}], 
         "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"(*", 
          RowBox[{
          "Create", " ", "mobility", " ", "function", " ", "only", " ", 
           "containing", " ", "lifts", " ", "at", " ", "bifurcations"}], 
          "*)"}], "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"liftElevators", "=", 
           RowBox[{"ConstantArray", "[", 
            RowBox[{"0", ",", 
             RowBox[{"{", 
              RowBox[{"No", ",", "Nx", ",", "Ny"}], "}"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"Map", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"liftElevators", "\[LeftDoubleBracket]", 
                  RowBox[{"All", ",", 
                   RowBox[{"Sequence", "@@", 
                    RowBox[{"(", 
                    RowBox[{"#", "-", 
                    RowBox[{"{", 
                    RowBox[{"ySelect", ",", "0"}], "}"}]}], ")"}]}]}], 
                  "\[RightDoubleBracket]"}], "=", "1"}], ";"}], "&"}], ",", 
              "seedsIndex"}], "]"}], ";", "\[IndentingNewLine]", 
            RowBox[{"liftElevators", "=", 
             RowBox[{"GaussianFilter", "[", 
              RowBox[{"liftElevators", ",", "1.5"}], "]"}]}], ";"}], "*)"}], 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
           "Combine", " ", "both", " ", "mobility", " ", "functions"}], 
           "*)"}], "\[IndentingNewLine]", 
          RowBox[{"newvesselnessfilter", "=", 
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Max", "[", "#", "]"}], "&"}], ",", 
             RowBox[{"Transpose", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"4", "*", 
                  RowBox[{
                  "Rescale", "[", "vesselnessfilterNoBoarderErosion2", 
                   "]"}]}], ",", 
                 RowBox[{"Transpose", "[", 
                  RowBox[{
                   RowBox[{"Rescale", "[", "liftElevators", "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"3", ",", "1", ",", "2"}], "}"}]}], "]"}]}], 
                "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"4", ",", "1", ",", "2", ",", "3"}], "}"}]}], "]"}], 
             ",", 
             RowBox[{"{", "3", "}"}]}], "]"}]}], ";"}], "*)"}], 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
         "Add", " ", "new", " ", "vesselness", " ", "to", " ", "the", " ", 
          "array", " ", "containing", " ", "vesselness", " ", "filters", " ", 
          "for", " ", "all", " ", "different", " ", "values", " ", "of", " ", 
          "\[Sigma]s"}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{
        "newvesselnessfilter", "=", "vesselnessfilterNoBoarderErosion"}], ";",
         "\[IndentingNewLine]", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"vesselnessfilter", ",", "newvesselnessfilter"}], "]"}], 
        ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"vesselnessfilter", "=", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Max", "[", "#", "]"}], "&"}], ",", 
          RowBox[{"Transpose", "[", 
           RowBox[{"vesselnessfilter", ",", 
            RowBox[{"{", 
             RowBox[{"4", ",", "1", ",", "2", ",", "3"}], "}"}]}], "]"}], ",", 
          RowBox[{"{", "3", "}"}]}], "]"}]}], ";"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "vesselnessfilter", "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->CompressedData["
1:eJwdxTtIQlEYAGATEQqHzPKSWRBl0BSRhJBSpzTaNIkeIiRGomZcFxvDIaHE
wsqCHAxReuhUmogOld0k0jBoM8SlGuxGCA3R1PnP8PF1m2n9MpfD4Ugw2KHV
egqnLBLLOrbgtGdvF875kwGYHyw8w8oHTwUeVh+9w7chnaCIP5SGW2FenhWT
ayu98KSm1g97keLvE6/JWshWLoqz+IiTJiddFwvMGYsyAtkivOZL0fCXiCH7
uwaPhecsGpcFwrCQvgtL8LFNKgKX5xsyUvxPX2MWNt1P38A73wy5MrfK68Q3
OaNk9dLjCOzQlcgDVxtuOCOvkqeaX1QT+NBsahT+HTMOafBKr4mssPtm2mMs
cotqFtgodkVFcRZdx4MncP0p3SbHO9OvFOw17+ds+KKez8D1BFWFrZSK3HJZ
stjxhoN1GxzsySe28W+GjyT8D7uY3Fk=
  "],
 CellLabel->
  "In[681]:=",ExpressionUUID->"701ac80d-0526-4a5d-9504-385ea3956621"]
}, Closed]],

Cell[CellGroupData[{

Cell["External Regularization - No boarder", "Subsection",
 CellChangeTimes->{{3.846736828118457*^9, 3.8467368336747875`*^9}, {
  3.847354136324772*^9, 
  3.847354138393787*^9}},ExpressionUUID->"d8f97c37-c04e-46b7-9fa2-\
6d972ebe7fc4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"MultiScaleVesselnessExtRegNoBoarder", "[", 
   RowBox[{
   "U_", ",", "\[Xi]_", ",", "\[Zeta]_", ",", "\[Sigma]s_", ",", "method_", 
    ",", 
    RowBox[{"\[Sigma]sExt_", ":", "0"}], ",", 
    RowBox[{"\[Sigma]aExt_", ":", "0"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "vesselness", ",", "vesselnessBoarder", ",", "vesselnessfilterNoBoarder",
       ",", "vesselnessfilterNoBoarderErosion", ",", "newvesselnessfilter", 
      ",", 
      RowBox[{"vesselnessfilter", "=", 
       RowBox[{"{", "}"}]}], ",", "k", ",", "i"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "1"}], ",", 
       RowBox[{"i", "<=", 
        RowBox[{"Length", "[", "\[Sigma]s", "]"}]}], ",", 
       RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Select", " ", "the", " ", "spatial", " ", "scale", " ", "for", " ", 
         "the", " ", "specific", " ", "iteration"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"k", "=", 
         RowBox[{"\[Sigma]s", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
         "Calculate", " ", "the", " ", "vesselness", " ", "of", " ", "the", 
          " ", "full", " ", "image"}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"vesselness", "=", 
         RowBox[{"CostFunctionVesselnessFilteringExtReg", "[", 
          RowBox[{
          "U", ",", "\[Xi]", ",", "\[Zeta]", ",", "k", ",", "method", ",", 
           "k", ",", "\[Sigma]aExt"}], "]"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{
          "Add", " ", "erosion", " ", "to", " ", "the", " ", "cost", " ", 
           "function"}], " ", "\[Rule]", " ", 
          RowBox[{
          "erosion", " ", "of", " ", "broad", " ", "angular", " ", 
           "boundaries"}]}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"vesselness", "=", 
         RowBox[{"Erosion", "[", 
          RowBox[{"vesselness", ",", 
           RowBox[{"{", 
            RowBox[{"{", 
             RowBox[{"{", 
              RowBox[{"1", ",", "1", ",", "1"}], "}"}], "}"}], "}"}], ",", 
           RowBox[{"Padding", "\[Rule]", "\"\<Periodic\>\""}]}], "]"}]}], ";", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Erosion", "[", 
              RowBox[{"#", ",", 
               RowBox[{"(*", "0.5", "*)"}], "1", ",", 
               RowBox[{"Padding", "\[Rule]", "\"\<Periodic\>\""}]}], "]"}], 
             "&"}], ",", "vesselnessfilterNoBoarder", ",", 
            RowBox[{"{", "2", "}"}]}], "]"}], ";"}], "*)"}], " ", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"(*", 
          RowBox[{
          "Create", " ", "mobility", " ", "function", " ", "only", " ", 
           "containing", " ", "lifts", " ", "at", " ", "bifurcations"}], 
          "*)"}], "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"liftElevators", "=", 
           RowBox[{"ConstantArray", "[", 
            RowBox[{"0", ",", 
             RowBox[{"{", 
              RowBox[{"No", ",", "Nx", ",", "Ny"}], "}"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"Map", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"liftElevators", "\[LeftDoubleBracket]", 
                  RowBox[{"All", ",", 
                   RowBox[{"Sequence", "@@", 
                    RowBox[{"(", 
                    RowBox[{"#", "-", 
                    RowBox[{"{", 
                    RowBox[{"ySelect", ",", "0"}], "}"}]}], ")"}]}]}], 
                  "\[RightDoubleBracket]"}], "=", "1"}], ";"}], "&"}], ",", 
              "seedsIndex"}], "]"}], ";", "\[IndentingNewLine]", 
            RowBox[{"liftElevators", "=", 
             RowBox[{"GaussianFilter", "[", 
              RowBox[{"liftElevators", ",", "1.5"}], "]"}]}], ";"}], "*)"}], 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
           "Combine", " ", "both", " ", "mobility", " ", "functions"}], 
           "*)"}], "\[IndentingNewLine]", 
          RowBox[{"newvesselnessfilter", "=", 
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Max", "[", "#", "]"}], "&"}], ",", 
             RowBox[{"Transpose", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"4", "*", 
                  RowBox[{
                  "Rescale", "[", "vesselnessfilterNoBoarderErosion2", 
                   "]"}]}], ",", 
                 RowBox[{"Transpose", "[", 
                  RowBox[{
                   RowBox[{"Rescale", "[", "liftElevators", "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"3", ",", "1", ",", "2"}], "}"}]}], "]"}]}], 
                "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"4", ",", "1", ",", "2", ",", "3"}], "}"}]}], "]"}], 
             ",", 
             RowBox[{"{", "3", "}"}]}], "]"}]}], ";"}], "*)"}], 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
         "Add", " ", "new", " ", "vesselness", " ", "to", " ", "the", " ", 
          "array", " ", "containing", " ", "vesselness", " ", "filters", " ", 
          "for", " ", "all", " ", "different", " ", "values", " ", "of", " ", 
          "\[Sigma]s"}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"newvesselnessfilter", "=", "vesselness"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"vesselnessfilter", ",", "newvesselnessfilter"}], "]"}], 
        ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"vesselnessfilter", "=", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Max", "[", "#", "]"}], "&"}], ",", 
          RowBox[{"Transpose", "[", 
           RowBox[{"vesselnessfilter", ",", 
            RowBox[{"{", 
             RowBox[{"4", ",", "1", ",", "2", ",", "3"}], "}"}]}], "]"}], ",", 
          RowBox[{"{", "3", "}"}]}], "]"}]}], ";"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "vesselnessfilter", "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.846069290478445*^9, 3.846069320848277*^9}, {
   3.846069388578823*^9, 3.8460694136426706`*^9}, {3.8460698943625517`*^9, 
   3.8460699961806927`*^9}, {3.8460700607895765`*^9, 3.846070370519379*^9}, {
   3.8460704370347395`*^9, 3.846070455399172*^9}, {3.8460705633723164`*^9, 
   3.846070607320956*^9}, {3.8461357617580004`*^9, 3.84613576321036*^9}, {
   3.8461371780315437`*^9, 3.8461371794824996`*^9}, {3.846578893545618*^9, 
   3.8465789371578035`*^9}, {3.846579069704646*^9, 3.8465790701274323`*^9}, {
   3.846737145534981*^9, 3.846737164629548*^9}, {3.846755598107308*^9, 
   3.8467556087354326`*^9}, {3.846759888042096*^9, 3.846759896286005*^9}, {
   3.8467599385553436`*^9, 3.8467599421542425`*^9}, {3.8467604834169755`*^9, 
   3.8467604851386766`*^9}, {3.8467609263246174`*^9, 3.846760926478567*^9}, {
   3.846761476147117*^9, 3.8467614789751863`*^9}, {3.8468387665957375`*^9, 
   3.8468387816980734`*^9}, {3.8468427788829308`*^9, 
   3.8468427790168743`*^9}, {3.847277220387966*^9, 3.8472773673148804`*^9}, {
   3.8473541629695444`*^9, 3.847354195249935*^9}, 3.848040834461649*^9},
 CellLabel->
  "In[682]:=",ExpressionUUID->"7d410c18-dc97-4e07-9207-eee81814a759"]
}, Closed]],

Cell[CellGroupData[{

Cell["Add lifts to cost function", "Subsection",
 CellChangeTimes->{{3.8468394957920785`*^9, 3.846839497832074*^9}, {
  3.8713756985233936`*^9, 
  3.8713757007370853`*^9}},ExpressionUUID->"9c822d5e-81fa-450c-9fab-\
f7096b357395"],

Cell[BoxData[
 RowBox[{
  RowBox[{"AddLifts", "[", 
   RowBox[{"vesselness_", ",", "seedsIndex_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"liftElevators", ",", "newvesselnessfilter"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"liftElevators", "=", 
      RowBox[{"ConstantArray", "[", 
       RowBox[{"0", ",", 
        RowBox[{"{", 
         RowBox[{"No", ",", "Nx", ",", "Ny"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"liftElevators", "\[LeftDoubleBracket]", 
           RowBox[{"All", ",", 
            RowBox[{"Sequence", "@@", 
             RowBox[{"(", "#", ")"}]}]}], "\[RightDoubleBracket]"}], "=", 
          "1"}], ";"}], "&"}], ",", "seedsIndex"}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"liftElevators", "=", 
      RowBox[{"GaussianFilter", "[", 
       RowBox[{"liftElevators", ",", "1.5"}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"Combine", " ", "both", " ", "mobility", " ", "functions"}], 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"newvesselnessfilter", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Max", "[", "#", "]"}], "&"}], ",", 
        RowBox[{"Transpose", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"4", "*", 
             RowBox[{"Rescale", "[", "vesselness", "]"}]}], ",", 
            RowBox[{"Transpose", "[", 
             RowBox[{
              RowBox[{"Rescale", "[", "liftElevators", "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"3", ",", "1", ",", "2"}], "}"}]}], "]"}]}], "}"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"4", ",", "1", ",", "2", ",", "3"}], "}"}]}], "]"}], ",", 
        RowBox[{"{", "3", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"newvesselnessfilter", "=", 
      RowBox[{"newvesselnessfilter", "/", 
       RowBox[{"Max", "[", "newvesselnessfilter", "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "newvesselnessfilter", "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.8468394992372694`*^9, 3.8468396468033724`*^9}, 
   3.846841208450967*^9, {3.8468420895555043`*^9, 3.846842089834281*^9}, 
   3.8468423468577747`*^9},
 CellLabel->
  "In[683]:=",ExpressionUUID->"c3cc28ea-24c2-4fee-b90d-4395efb15945"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Rescaling cost function", "Subsection",
 CellChangeTimes->{{3.8479447175456133`*^9, 
  3.8479447288831964`*^9}},ExpressionUUID->"a95c6130-72fd-4a92-9df7-\
ebca3ed64023"],

Cell[BoxData[
 RowBox[{
  RowBox[{"CostFunction2", "[", 
   RowBox[{"oc_", ",", 
    RowBox[{"{", 
     RowBox[{"g0_", ",", "g1_"}], "}"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"cost", ",", "ocg0", ",", "ocg1", ",", "ocg"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ocg0", "=", 
      RowBox[{"oc", "\[LeftDoubleBracket]", 
       RowBox[{
        RowBox[{"g0", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
        ",", 
        RowBox[{"g0", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
        ",", 
        RowBox[{
        "g0", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], 
       "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"ocg1", "=", 
      RowBox[{"oc", "\[LeftDoubleBracket]", 
       RowBox[{
        RowBox[{"g1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
        ",", 
        RowBox[{"g1", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
        ",", 
        RowBox[{
        "g1", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], 
       "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"ocg", "=", 
      RowBox[{"Min", "[", 
       RowBox[{"ocg1", ",", "ocg0"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"ocg", "=", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"ocg0", "+", "ocg1"}], ")"}], "/", "2"}]}], ";"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"cost", "=", 
      RowBox[{"Exp", "[", 
       RowBox[{"-", 
        RowBox[{"Ramp", "[", 
         RowBox[{"oc", "-", "ocg"}], "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "cost", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellLabel->
  "In[684]:=",ExpressionUUID->"b3e0461f-bcd2-4551-a1a9-1adb1f6a4f75"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ToContinuousAngle", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x_", ",", "y_", ",", "\[Theta]d_"}], "}"}], ",", "s\[Theta]_"}],
    "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{"x", ",", "y", ",", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"\[Theta]d", "-", "1"}], ")"}], "s\[Theta]"}]}], 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ToDiscreteAngle", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x_", ",", "y_", ",", "\[Theta]c_"}], "}"}], ",", "s\[Theta]_"}],
    "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{"x", ",", "y", ",", 
    RowBox[{
     RowBox[{"\[Theta]c", "/", "s\[Theta]"}], "+", "1"}]}], "}"}]}]}], "Input",
 CellChangeTimes->{{3.797068872444806*^9, 3.7970689682551284`*^9}, {
  3.8477709300985203`*^9, 3.847770931063661*^9}},
 CellLabel->
  "In[685]:=",ExpressionUUID->"15ead49b-71f9-4088-9076-e8f56b73b4a3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"AddObstaclesCrossings", "[", 
   RowBox[{
   "cost_", ",", "obstacleCenter_", ",", "obstacleWidth_", ",", 
    "obstacleHeight_", ",", "Nx_", ",", 
    RowBox[{"scaling_", ":", "10"}], ",", 
    RowBox[{"grayValueCriteria_", ":", ".8"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "newcost", ",", "xmin", ",", "xmax", ",", "ymin", ",", "ymax", ",", 
      "i"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"newcost", "=", "cost"}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "1"}], ",", 
       RowBox[{"i", "<=", 
        RowBox[{"Length", "[", "obstacleCenter", "]"}]}], ",", 
       RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"xmin", "=", 
         RowBox[{"Round", "[", 
          RowBox[{"Nx", "-", 
           RowBox[{"obstacleCenter", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "2"}], "]"}], "]"}], "-", 
           RowBox[{"obstacleHeight", "/", "2"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"xmax", "=", 
         RowBox[{"Round", "[", 
          RowBox[{"Nx", "-", 
           RowBox[{"obstacleCenter", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "2"}], "]"}], "]"}], "+", 
           RowBox[{"obstacleHeight", "/", "2"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"ymin", "=", 
         RowBox[{"Round", "[", 
          RowBox[{
           RowBox[{"obstacleCenter", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "1"}], "]"}], "]"}], "-", 
           RowBox[{"obstacleWidth", "/", "2"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"ymax", "=", 
         RowBox[{"Round", "[", 
          RowBox[{
           RowBox[{"obstacleCenter", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "1"}], "]"}], "]"}], "+", 
           RowBox[{"obstacleWidth", "/", "2"}]}], "]"}]}], ";", 
        RowBox[{"(*", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Print", "[", 
           RowBox[{"{", 
            RowBox[{"xmin", ",", "xmax", ",", "ymin", ",", "ymax"}], "}"}], 
           "]"}], ";"}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"newcost", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"xmin", ";;", "xmax"}], ",", 
            RowBox[{"ymin", ";;", "ymax"}]}], "]"}], "]"}], "=", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Clip", "[", 
             RowBox[{
              RowBox[{"cost", "[", 
               RowBox[{"[", 
                RowBox[{
                 RowBox[{"xmin", ";;", "xmax"}], ",", 
                 RowBox[{"ymin", ";;", "ymax"}]}], "]"}], "]"}], "/", 
              "grayValueCriteria"}], "]"}], "/.", 
            RowBox[{
             RowBox[{"x_", "/;", 
              RowBox[{"x", "==", "1"}]}], "\[Rule]", "scaling"}]}], ")"}], 
          "*", "grayValueCriteria"}]}], ";"}]}], "\[IndentingNewLine]", "]"}],
      ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "newcost", "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8582335225335665`*^9, 3.8582336216298285`*^9}, {
   3.8582336542935967`*^9, 3.858233744879365*^9}, {3.858233940013635*^9, 
   3.8582340294253044`*^9}, {3.8582341334636493`*^9, 3.858234139214013*^9}, {
   3.85823429485408*^9, 3.8582343147253714`*^9}, {3.8582343796541233`*^9, 
   3.8582344290743575`*^9}, 3.8582350510146756`*^9, {3.858235273535246*^9, 
   3.858235286184969*^9}, {3.8582356842557554`*^9, 3.8582356860655136`*^9}},
 CellLabel->
  "In[687]:=",ExpressionUUID->"afe599e2-5340-4632-9a19-d301a3d41ac9"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Orientation Score transform", "Section",
 CellChangeTimes->{{3.6361799360061083`*^9, 
  3.636179938720508*^9}},ExpressionUUID->"eecdece1-910f-44e4-9306-\
eba9d653b292"],

Cell[CellGroupData[{

Cell["Orientation score transform", "Subsection",
 CellChangeTimes->{{3.6283308046688805`*^9, 3.6283308128694572`*^9}, {
  3.669950051521691*^9, 
  3.669950082508013*^9}},ExpressionUUID->"f6b16b30-d579-4b8b-b932-\
7b197d5d0218"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"CakeWaveletStack", "::", "usage"}], "=", 
    "\"\<CakeWaveletStack[size,s\[CurlyPhi]] returns the set \n\tof rotated \
wavelets with standard paramters (see Options[CakeWaveletStack]).\n\tThe \
kernel stack has dimensions No x size x size, where No = \
\\!\\(\\*FractionBox[\\(s\[CurlyPhi]\\), \\(periodicity\\)]\\). \n\tBy \
default periodicity = \[Pi], meaning that the wavelets are constructed \n\t\
from 0 to \[Pi]. Parameter s\[CurlyPhi] specifies the angular resolution: \n\t\
the number of kernels per \[Pi] radians. \n\nOther parameters can be adjusted \
through the options or by calling the function \n\tas follows:\n \n\
CakeWaveletStack[size,s\[CurlyPhi],kSpline,q,periodicity,\[Rho]Inflection,kMn,\
\[Sigma]s,matrixCoordinatesQ].\>\""}], ";"}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"GaborWaveletStack", "::", "usage"}], "=", 
    "\"\<GaborWaveletStack[a,s\[CurlyPhi]] returns the set \n\tof rotated \
Gabor wavelets at scale a, with standard paramters (see \
Options[GaborWaveletStack]).\n\tThe kernel stack has dimensions No x size x \
size, where No = \\!\\(\\*FractionBox[\\(s\[CurlyPhi]\\), \
\\(periodicity\\)]\\),\n\tand where size = 8*a*Sqrt[\[Epsilon]]. By default \
periodicity = \[Pi], meaning that \n\tthe wavelets are constructed from 0 to \
\[Pi]. Parameter s\[CurlyPhi] specifies \n\tthe angular resolution: the \
number of kernels per \[Pi] radians.\>\""}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"WaveletTransform2DErik", "::", "usage"}], "=", 
    "\"\<WaveletTransform2DErik[kernelStack,im] correlates each \n\tkernel \
with the image. If the kernel dimensions and image dimensions \n\tcoincide, \
correlation is done using (conjugate) Fourier multiplication, else\n\t it is \
done using correlation.\>\""}], ";"}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"OrientationScoreTransform", "::", "usage"}], "=", 
    "\"\<OrientationScoreTransform[image, s\[CurlyPhi]] \n\tconstructs an \
orientation score from the image using cake wavelets with \n\tdefault \
paramters (see Options[OrientationScoreTransform] and \n\t?CakeWaveletStack). \
By default this is done through Fourier domain \n\tmultiplication, unless it \
is specified (by using the options) otherwise.\>\""}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", "\n", 
  RowBox[{"(*", "******************************************************)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
      "**", "**", "**", "**", "**", "**", "**", "Begin"}], " ", "Private"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Begin", "[", "\"\<Private`\>\"", "]"}], ";"}], 
  "\[IndentingNewLine]", "\n", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", "**********************************)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"**", "**", "**", "**", "**", "**", "**", "**"}], "*", 
    "CakeWaveletStack", " ", "Private", " ", "Functions"}], "*)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "PolarCoordinateGridRadial", " ", "returns", " ", "a", " ", "matrix", " ", 
    "in", " ", "which", " ", "each", " ", "element", " ", "gives", " ", "the",
     " ", "corresponding", " ", "radial", " ", "coordinate", " ", 
    RowBox[{"(", 
     RowBox[{
     "with", " ", "the", " ", "origin", " ", "in", " ", "the", " ", "center", 
      " ", "of", " ", "the", " ", "matrix"}]}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PolarCoordinateGridRadial", "=", 
    RowBox[{"Compile", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"size", ",", "_Integer"}], "}"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Table", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Sqrt", "[", 
         RowBox[{
          RowBox[{"x", "^", "2"}], "+", 
          RowBox[{"y", "^", "2"}]}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"x", ",", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"size", "-", "1"}], ")"}], "/", "2"}], ")"}]}], "-", 
           RowBox[{"Mod", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"size", "-", "1"}], ")"}], "/", "2"}], ",", "1"}], 
            "]"}]}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"size", "-", "1"}], ")"}], "/", "2"}], "-", 
           RowBox[{"Mod", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"size", "-", "1"}], ")"}], "/", "2"}], ",", "1"}], 
            "]"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"y", ",", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"size", "-", "1"}], ")"}], "/", "2"}], ")"}]}], "-", 
           RowBox[{"Mod", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"size", "-", "1"}], ")"}], "/", "2"}], ",", "1"}], 
            "]"}]}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"size", "-", "1"}], ")"}], "/", "2"}], "-", 
           RowBox[{"Mod", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"size", "-", "1"}], ")"}], "/", "2"}], ",", "1"}], 
            "]"}]}]}], "}"}]}], "\[IndentingNewLine]", "]"}]}], 
     RowBox[{"(*", 
      RowBox[{"End", " ", "of", " ", "table"}], "*)"}], "\[IndentingNewLine]",
      "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"End", " ", "of", " ", "compile"}], "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\n", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "PolarCoordinateGridRadial", " ", "returns", " ", "a", " ", "matrix", " ", 
    "in", " ", "which", " ", "each", " ", "element", " ", "gives", " ", "the",
     " ", "corresponding", " ", "radial", " ", "coordinate", " ", 
    RowBox[{"(", 
     RowBox[{
     "with", " ", "the", " ", "origin", " ", "in", " ", "the", " ", "center", 
      " ", "of", " ", "the", " ", "matrix"}]}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PolarCoordinateGridAngular", "=", 
    RowBox[{"Compile", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"size", ",", "_Integer"}], "}"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Table", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Arg", "[", 
         RowBox[{"x", "+", 
          RowBox[{"I", " ", "y"}]}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"x", ",", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"size", "-", "1"}], ")"}], "/", "2"}], ")"}]}], "-", 
           RowBox[{"Mod", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"size", "-", "1"}], ")"}], "/", "2"}], ",", "1"}], 
            "]"}]}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"size", "-", "1"}], ")"}], "/", "2"}], "-", 
           RowBox[{"Mod", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"size", "-", "1"}], ")"}], "/", "2"}], ",", "1"}], 
            "]"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"y", ",", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"size", "-", "1"}], ")"}], "/", "2"}], ")"}]}], "-", 
           RowBox[{"Mod", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"size", "-", "1"}], ")"}], "/", "2"}], ",", "1"}], 
            "]"}]}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"size", "-", "1"}], ")"}], "/", "2"}], "-", 
           RowBox[{"Mod", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"size", "-", "1"}], ")"}], "/", "2"}], ",", "1"}], 
            "]"}]}]}], "}"}]}], "\[IndentingNewLine]", "]"}]}], 
     RowBox[{"(*", 
      RowBox[{"End", " ", "of", " ", "table"}], "*)"}], "\[IndentingNewLine]",
      "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"End", " ", "of", " ", "compile"}], "*)"}], "\[IndentingNewLine]", 
  "\n", 
  RowBox[{"(*", 
   RowBox[{
   "MnWindow", " ", "gives", " ", "the", " ", "radial", " ", "windowing", " ",
     "matrix", " ", "for", " ", "sampling", " ", "the", " ", "fourier", " ", 
    "domain"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MnWindow", "=", 
    RowBox[{"Compile", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"size", ",", "_Integer"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "_Integer"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Rho]inflection", ",", "_Real"}], "}"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Module", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
        "{", "\[IndentingNewLine]", "\[Rho]Matrix", "\[IndentingNewLine]", 
         "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"\[Rho]Matrix", "=", 
          RowBox[{"$MachineEpsilon", "+", 
           RowBox[{
            RowBox[{"1", "/", 
             RowBox[{"Sqrt", "[", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"2", "*", 
                 RowBox[{"\[Rho]inflection", "^", "2"}]}], ")"}], "/", 
               RowBox[{"(", 
                RowBox[{"1", "+", 
                 RowBox[{"2", " ", "n"}]}], ")"}]}], "]"}]}], " ", 
            RowBox[{"PolarCoordinateGridRadial", "[", "size", "]"}]}]}]}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"Total", "[", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"E", "^", 
              RowBox[{"-", 
               RowBox[{"\[Rho]Matrix", "^", "2"}]}]}], "*", 
             RowBox[{
              RowBox[{"\[Rho]Matrix", "^", 
               RowBox[{"(", 
                RowBox[{"2", "k"}], ")"}]}], "/", 
              RowBox[{"k", "!"}]}]}], ",", 
            RowBox[{"{", 
             RowBox[{"k", ",", "0", ",", "n"}], "}"}]}], "]"}], "]"}]}]}], 
       "\[IndentingNewLine]", "]"}], 
      RowBox[{"(*", 
       RowBox[{"End", " ", "of", " ", "Module"}], "*)"}], 
      "\[IndentingNewLine]", ",", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"k", "!"}], ",", "_Real"}], "}"}], "}"}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"End", " ", "of", " ", "compile"}], "*)"}], "\[IndentingNewLine]", 
  "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "BSplineScalarFunc", " ", "is", " ", "a", " ", "compile", " ", "spline", 
     " ", "basis", " ", "function", " ", "of", " ", "arbitrary", " ", 
     RowBox[{"order", ".", "The"}], " ", "function", " ", "is", " ", 
     "defined", " ", "for", " ", "scalars"}], ",", 
    RowBox[{
    "list", " ", "and", " ", "2", "D", " ", "matrix", " ", "objects"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"BSplineScalarFunc", "=", 
    RowBox[{"Compile", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"n", ",", "_Integer"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "_Real"}], "}"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Module", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{"function", ",", "\[IndentingNewLine]", "intervalCheck"}], 
         "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Total", "[", "\[IndentingNewLine]", 
         RowBox[{"Table", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"function", "=", 
             RowBox[{
              RowBox[{"1", "/", 
               RowBox[{"(", 
                RowBox[{"2", " ", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"n", "+", "1", "-", "1"}], ")"}], "!"}]}], ")"}]}],
               " ", 
              RowBox[{"Total", "[", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Binomial", "[", 
                   RowBox[{
                    RowBox[{"n", "+", "1"}], ",", "k"}], "]"}], 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"x", "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"n", "+", "1"}], ")"}], "/", "2"}], "-", "k"}], 
                    ")"}], "^", 
                   RowBox[{"(", 
                    RowBox[{"n", "+", "1", "-", "1"}], ")"}]}], " ", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"-", "1"}], ")"}], "^", "k"}], " ", 
                  RowBox[{"Sign", "[", 
                   RowBox[{"i", "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"n", "+", "1"}], ")"}], "/", "2"}], "-", "k"}], 
                   "]"}]}], ",", 
                 RowBox[{"{", 
                  RowBox[{"k", ",", "0", ",", 
                   RowBox[{"n", "+", "1"}]}], "}"}]}], "]"}], "]"}]}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"intervalCheck", "=", 
             RowBox[{"Round", "[", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"i", "<", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"n", "+", "1", "-", "1"}], ")"}], "/", "2"}]}], 
                ",", 
                RowBox[{
                 RowBox[{"UnitStep", "[", 
                  RowBox[{"x", "-", 
                   RowBox[{"(", 
                    RowBox[{"i", "-", 
                    RowBox[{"1", "/", "2"}], "+", "$MachineEpsilon"}], 
                    ")"}]}], "]"}], "*", 
                 RowBox[{"UnitStep", "[", 
                  RowBox[{"-", 
                   RowBox[{"(", 
                    RowBox[{"x", "-", 
                    RowBox[{"(", 
                    RowBox[{"i", "+", 
                    RowBox[{"1", "/", "2"}]}], ")"}]}], ")"}]}], "]"}]}], ",", 
                RowBox[{
                 RowBox[{"UnitStep", "[", 
                  RowBox[{"x", "-", 
                   RowBox[{"(", 
                    RowBox[{"i", "-", 
                    RowBox[{"1", "/", "2"}], "+", "$MachineEpsilon"}], 
                    ")"}]}], "]"}], "*", 
                 RowBox[{"UnitStep", "[", 
                  RowBox[{"-", 
                   RowBox[{"(", 
                    RowBox[{"x", "-", 
                    RowBox[{"(", 
                    RowBox[{"i", "+", 
                    RowBox[{"1", "/", "2"}], "-", "$MachineEpsilon"}], 
                    ")"}]}], ")"}]}], "]"}]}]}], "]"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"function", "*", "intervalCheck"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", "n", "-", "1"}], ")"}], "/", "2"}], ",", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"n", "-", "1", "+", "1"}], ")"}], "/", "2"}]}], 
            "}"}]}], "\[IndentingNewLine]", "]"}], 
         RowBox[{"(*", 
          RowBox[{"End", " ", "of", " ", "Table"}], "*)"}], 
         "\[IndentingNewLine]", "]"}]}], 
       RowBox[{"(*", 
        RowBox[{"End", " ", "of", " ", "Total"}], "*)"}], 
       "\[IndentingNewLine]", "]"}]}], 
     RowBox[{"(*", 
      RowBox[{"End", " ", "of", " ", "Module"}], "*)"}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"End", " ", "of", " ", "Compile"}], "*)"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"BSplineListFunc", "=", 
    RowBox[{"Compile", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"n", ",", "_Integer"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "_Real", ",", "1"}], "}"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Module", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{"function", ",", "\[IndentingNewLine]", "intervalCheck"}], 
         "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Total", "[", "\[IndentingNewLine]", 
         RowBox[{"Table", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"function", "=", 
             RowBox[{
              RowBox[{"1", "/", 
               RowBox[{"(", 
                RowBox[{"2", " ", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"n", "+", "1", "-", "1"}], ")"}], "!"}]}], ")"}]}],
               " ", 
              RowBox[{"Total", "[", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Binomial", "[", 
                   RowBox[{
                    RowBox[{"n", "+", "1"}], ",", "k"}], "]"}], 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"x", "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"n", "+", "1"}], ")"}], "/", "2"}], "-", "k"}], 
                    ")"}], "^", 
                   RowBox[{"(", 
                    RowBox[{"n", "+", "1", "-", "1"}], ")"}]}], " ", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"-", "1"}], ")"}], "^", "k"}], " ", 
                  RowBox[{"Sign", "[", 
                   RowBox[{"i", "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"n", "+", "1"}], ")"}], "/", "2"}], "-", "k"}], 
                   "]"}]}], ",", 
                 RowBox[{"{", 
                  RowBox[{"k", ",", "0", ",", 
                   RowBox[{"n", "+", "1"}]}], "}"}]}], "]"}], "]"}]}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"intervalCheck", "=", 
             RowBox[{"Round", "[", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"i", "<", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"n", "+", "1", "-", "1"}], ")"}], "/", "2"}]}], 
                ",", 
                RowBox[{
                 RowBox[{"UnitStep", "[", 
                  RowBox[{"x", "-", 
                   RowBox[{"(", 
                    RowBox[{"i", "-", 
                    RowBox[{"1", "/", "2"}], "+", "$MachineEpsilon"}], 
                    ")"}]}], "]"}], "*", 
                 RowBox[{"UnitStep", "[", 
                  RowBox[{"-", 
                   RowBox[{"(", 
                    RowBox[{"x", "-", 
                    RowBox[{"(", 
                    RowBox[{"i", "+", 
                    RowBox[{"1", "/", "2"}]}], ")"}]}], ")"}]}], "]"}]}], ",", 
                RowBox[{
                 RowBox[{"UnitStep", "[", 
                  RowBox[{"x", "-", 
                   RowBox[{"(", 
                    RowBox[{"i", "-", 
                    RowBox[{"1", "/", "2"}], "+", "$MachineEpsilon"}], 
                    ")"}]}], "]"}], "*", 
                 RowBox[{"UnitStep", "[", 
                  RowBox[{"-", 
                   RowBox[{"(", 
                    RowBox[{"x", "-", 
                    RowBox[{"(", 
                    RowBox[{"i", "+", 
                    RowBox[{"1", "/", "2"}], "-", "$MachineEpsilon"}], 
                    ")"}]}], ")"}]}], "]"}]}]}], "]"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"function", "*", "intervalCheck"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", "n", "-", "1"}], ")"}], "/", "2"}], ",", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"n", "-", "1", "+", "1"}], ")"}], "/", "2"}]}], 
            "}"}]}], "\[IndentingNewLine]", "]"}], 
         RowBox[{"(*", 
          RowBox[{"End", " ", "of", " ", "Table"}], "*)"}], 
         "\[IndentingNewLine]", "]"}]}], 
       RowBox[{"(*", 
        RowBox[{"ENd", " ", "of", " ", "Total"}], "*)"}], 
       "\[IndentingNewLine]", "]"}]}], 
     RowBox[{"(*", 
      RowBox[{"End", " ", "of", " ", "Module"}], "*)"}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"ENd", " ", "of", " ", "Compile"}], "*)"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"BSplineMatrixFunc", "=", 
    RowBox[{"Compile", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"n", ",", "_Integer"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "_Real", ",", "2"}], "}"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Module", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{"function", ",", "\[IndentingNewLine]", "intervalCheck"}], 
         "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Total", "[", "\[IndentingNewLine]", 
         RowBox[{"Table", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"function", "=", 
             RowBox[{
              RowBox[{"1", "/", 
               RowBox[{"(", 
                RowBox[{"2", " ", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"n", "+", "1", "-", "1"}], ")"}], "!"}]}], ")"}]}],
               " ", 
              RowBox[{"Total", "[", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Binomial", "[", 
                   RowBox[{
                    RowBox[{"n", "+", "1"}], ",", "k"}], "]"}], 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"x", "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"n", "+", "1"}], ")"}], "/", "2"}], "-", "k"}], 
                    ")"}], "^", 
                   RowBox[{"(", 
                    RowBox[{"n", "+", "1", "-", "1"}], ")"}]}], " ", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"-", "1"}], ")"}], "^", "k"}], " ", 
                  RowBox[{"Sign", "[", 
                   RowBox[{"i", "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"n", "+", "1"}], ")"}], "/", "2"}], "-", "k"}], 
                   "]"}]}], ",", 
                 RowBox[{"{", 
                  RowBox[{"k", ",", "0", ",", 
                   RowBox[{"n", "+", "1"}]}], "}"}]}], "]"}], "]"}]}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"intervalCheck", "=", 
             RowBox[{"Round", "[", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"i", "<", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"n", "+", "1", "-", "1"}], ")"}], "/", "2"}]}], 
                ",", 
                RowBox[{
                 RowBox[{"UnitStep", "[", 
                  RowBox[{"x", "-", 
                   RowBox[{"(", 
                    RowBox[{"i", "-", 
                    RowBox[{"1", "/", "2"}], "+", "$MachineEpsilon"}], 
                    ")"}]}], "]"}], "*", 
                 RowBox[{"UnitStep", "[", 
                  RowBox[{"-", 
                   RowBox[{"(", 
                    RowBox[{"x", "-", 
                    RowBox[{"(", 
                    RowBox[{"i", "+", 
                    RowBox[{"1", "/", "2"}]}], ")"}]}], ")"}]}], "]"}]}], ",", 
                RowBox[{
                 RowBox[{"UnitStep", "[", 
                  RowBox[{"x", "-", 
                   RowBox[{"(", 
                    RowBox[{"i", "-", 
                    RowBox[{"1", "/", "2"}], "+", "$MachineEpsilon"}], 
                    ")"}]}], "]"}], "*", 
                 RowBox[{"UnitStep", "[", 
                  RowBox[{"-", 
                   RowBox[{"(", 
                    RowBox[{"x", "-", 
                    RowBox[{"(", 
                    RowBox[{"i", "+", 
                    RowBox[{"1", "/", "2"}], "-", "$MachineEpsilon"}], 
                    ")"}]}], ")"}]}], "]"}]}]}], "]"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"function", "*", "intervalCheck"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", "n", "-", "1"}], ")"}], "/", "2"}], ",", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"n", "-", "1", "+", "1"}], ")"}], "/", "2"}]}], 
            "}"}]}], "\[IndentingNewLine]", "]"}], 
         RowBox[{"(*", 
          RowBox[{"End", " ", "of", " ", "Table"}], "*)"}], 
         "\[IndentingNewLine]", "]"}]}], 
       RowBox[{"(*", 
        RowBox[{"End", " ", "of", " ", "Total"}], "*)"}], 
       "\[IndentingNewLine]", "]"}]}], 
     RowBox[{"(*", 
      RowBox[{"End", " ", "of", " ", "Module"}], "*)"}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"End", " ", "of", " ", "Compile"}], "*)"}], "\n", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "WindowGauss", " ", "retuns", " ", "the", " ", "spatial", " ", "Gauss", 
    " ", "envelope"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"WindowGauss", "=", 
    RowBox[{"Compile", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"size", ",", "_Integer"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Sigma]s", ",", "_Real"}], "}"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Table", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"E", "^", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"x", "^", "2"}], "/", 
              RowBox[{"(", 
               RowBox[{"2", 
                RowBox[{"\[Sigma]s", "^", "2"}]}], ")"}]}], ")"}]}], "-", 
           RowBox[{
            RowBox[{"y", "^", "2"}], "/", 
            RowBox[{"(", 
             RowBox[{"2", 
              RowBox[{"\[Sigma]s", "^", "2"}]}], ")"}]}]}], ")"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"x", ",", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"size", "-", "1"}], ")"}], "/", "2"}], ")"}]}], "-", 
           RowBox[{"Mod", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"size", "-", "1"}], ")"}], "/", "2"}], ",", "1"}], 
            "]"}]}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"size", "-", "1"}], ")"}], "/", "2"}], "-", 
           RowBox[{"Mod", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"size", "-", "1"}], ")"}], "/", "2"}], ",", "1"}], 
            "]"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"y", ",", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"size", "-", "1"}], ")"}], "/", "2"}], ")"}]}], "-", 
           RowBox[{"Mod", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"size", "-", "1"}], ")"}], "/", "2"}], ",", "1"}], 
            "]"}]}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"size", "-", "1"}], ")"}], "/", "2"}], "-", 
           RowBox[{"Mod", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"size", "-", "1"}], ")"}], "/", "2"}], ",", "1"}], 
            "]"}]}]}], "}"}]}], "\[IndentingNewLine]", "]"}]}], 
     RowBox[{"(*", 
      RowBox[{"End", " ", "of", " ", "Table"}], "*)"}], "\[IndentingNewLine]",
      "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"End", " ", "of", " ", "Compile"}], "*)"}], "\n", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "CakeWaveletStackFourier", " ", "constructs", " ", "the", " ", "cake", " ",
     "wavelets", " ", "in", " ", "the", " ", "Fourier", " ", "domain", " ", 
    RowBox[{"(", 
     RowBox[{
     "note", " ", "that", " ", "windowing", " ", "in", " ", "the", " ", 
      "spatial", " ", "domain", " ", "is", " ", "still", " ", "required", " ",
       "after", " ", "this"}]}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"CakeWaveletStackFourier", "=", 
    RowBox[{"Compile", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"size", ",", "_Integer"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"s\[CurlyPhi]", ",", "_Real"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"kspline", ",", "_Integer"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"q", ",", "_Integer"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Rho]Inflection", ",", "_Real"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"kMn", ",", "_Integer"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"matrixCoordinatesQ", ",", 
          RowBox[{"True", "|", "False"}]}], "}"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Module", "[", 
       RowBox[{
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{"mnWindow", ",", "\[IndentingNewLine]", "angleGrid"}], 
         "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"mnWindow", "=", 
          RowBox[{"MnWindow", "[", 
           RowBox[{"size", ",", "kMn", ",", "\[Rho]Inflection"}], "]"}]}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"angleGrid", "=", 
          RowBox[{"PolarCoordinateGridAngular", "[", "size", "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Table", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"mnWindow", "*", 
            RowBox[{"BSplineMatrixFunc", "[", 
             RowBox[{"kspline", ",", 
              RowBox[{"If", "[", 
               RowBox[{"matrixCoordinatesQ", ",", 
                RowBox[{
                 RowBox[{"Mod", "[", 
                  RowBox[{
                   RowBox[{"angleGrid", "-", "\[Theta]", "-", 
                    RowBox[{"\[Pi]", "/", "2"}]}], ",", 
                   RowBox[{"2", "\[Pi]"}], ",", 
                   RowBox[{"-", "\[Pi]"}]}], "]"}], "/", "s\[CurlyPhi]"}], 
                ",", 
                RowBox[{
                 RowBox[{"Mod", "[", 
                  RowBox[{
                   RowBox[{"angleGrid", "+", "\[Theta]", "+", "\[Pi]"}], ",", 
                   RowBox[{"2", "\[Pi]"}], ",", 
                   RowBox[{"-", "\[Pi]"}]}], "]"}], "/", "s\[CurlyPhi]"}]}], 
               "]"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"\[Theta]", ",", "\[Pi]", ",", 
             RowBox[{
              RowBox[{"2", "\[Pi]"}], "-", 
              RowBox[{"s\[CurlyPhi]", "/", "q"}]}], ",", 
             RowBox[{"(", 
              RowBox[{"s\[CurlyPhi]", "/", "q"}], ")"}]}], "}"}]}], 
          "\[IndentingNewLine]", "]"}]}]}], 
       RowBox[{"(*", 
        RowBox[{"End", " ", "of", " ", "Table"}], "*)"}], 
       "\[IndentingNewLine]", "]"}]}], 
     RowBox[{"(*", 
      RowBox[{"End", " ", "of", " ", "Module"}], "*)"}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"End", " ", "of", " ", "Compile"}], "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "ErfSet", " ", "retuns", " ", "a", " ", "set", " ", "of", " ", "2", "D", 
    " ", "error", " ", 
    RowBox[{"functions", ".", "This"}], " ", "function", " ", "is", " ", 
    "used", " ", "to", " ", "cut", " ", "the", " ", "wavelets", " ", "in", 
    " ", "two", " ", 
    RowBox[{"(", 
     RowBox[{"in", " ", "the", " ", "spatial", " ", "domain"}], ")"}]}], 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ErfSet", "=", 
    RowBox[{"Compile", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"size", ",", "_Real"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"No", ",", "_Integer"}], "}"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Module", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
        "{", "\[IndentingNewLine]", "d\[Theta]", "\[IndentingNewLine]", "}"}],
         ",", "\[IndentingNewLine]", 
        RowBox[{"Table", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Table", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"1", "/", "2"}], " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"Erf", "[", 
                RowBox[{
                 RowBox[{"x", " ", 
                  RowBox[{"Cos", "[", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "i"}], ")"}], " ", "\[Pi]"}], 
                    ")"}], "/", "No"}], "]"}]}], "+", 
                 RowBox[{"y", " ", 
                  RowBox[{"Sin", "[", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "i"}], ")"}], " ", "\[Pi]"}], 
                    ")"}], "/", "No"}], "]"}]}]}], "]"}]}], ")"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"x", ",", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"size", "-", "1"}], ")"}], "/", "2"}], ")"}]}], 
               "-", 
               RowBox[{"Mod", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"size", "-", "1"}], ")"}], "/", "2"}], ",", "1"}], 
                "]"}]}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"size", "-", "1"}], ")"}], "/", "2"}], "-", 
               RowBox[{"Mod", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"size", "-", "1"}], ")"}], "/", "2"}], ",", "1"}], 
                "]"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"y", ",", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"size", "-", "1"}], ")"}], "/", "2"}], ")"}]}], 
               "-", 
               RowBox[{"Mod", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"size", "-", "1"}], ")"}], "/", "2"}], ",", "1"}], 
                "]"}]}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"size", "-", "1"}], ")"}], "/", "2"}], "-", 
               RowBox[{"Mod", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"size", "-", "1"}], ")"}], "/", "2"}], ",", "1"}], 
                "]"}]}]}], "}"}]}], "\[IndentingNewLine]", "]"}], ",", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"End", " ", "of", " ", "Table", " ", "x"}], ",", "y"}], 
           "*)"}], "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "No"}], "}"}]}], "\[IndentingNewLine]",
          "]"}]}], 
       RowBox[{"(*", 
        RowBox[{"End", " ", "of", " ", "Table", " ", "theta"}], "*)"}], 
       "\[IndentingNewLine]", "]"}]}], 
     RowBox[{"(*", 
      RowBox[{"End", " ", "of", " ", "Module"}], "*)"}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"End", " ", "of", " ", "Compile"}], "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", "**********************************)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"**", "**", "**", "**", "**", "**", "**", "**"}], "*", 
    "CakeWaveletStack"}], "*)"}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Options", "[", "CakeWaveletStack", "]"}], "=", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\"\<SplineOrder\>\"", "\[Rule]", "3"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<AngularSubSampleRate\>\"", "\[Rule]", "1"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<Periodicity\>\"", "\[Rule]", "\[Pi]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<InflectionPoint\>\"", "\[Rule]", "\"\<Automatic\>\""}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{"\"\<MnOrder\>\"", "\[Rule]", "8"}], ",", "\[IndentingNewLine]", 
      RowBox[{"\"\<GaussianWindowSigma\>\"", "\[Rule]", "\"\<Automatic\>\""}],
       ",", "\[IndentingNewLine]", 
      RowBox[{"\"\<InflectionPoint\>\"", "\[Rule]", "\"\<Automatic\>\""}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{"\"\<CoordinateSystem\>\"", "\[Rule]", "\"\<Matrix\>\""}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<SingleVsDoubleSided\>\"", "\[Rule]", "\"\<Double\>\""}]}], 
     "\[IndentingNewLine]", "}"}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "Function", " ", "definition", " ", "for", " ", "direct", " ", "options", 
    " ", "input"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"CakeWaveletStack", "[", 
     RowBox[{
     "size_", ",", "s\[CurlyPhi]_", ",", "kSpline_", ",", "q_", ",", 
      "periodicity_", ",", "\[Rho]Inflection_", ",", "kMn_", ",", 
      "\[Sigma]s_", ",", "matrixCoordinatesQ_", ",", "singleOrDouble_"}], 
     "]"}], ":=", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
       "cakeF", ",", "cakeIF", ",", "\[IndentingNewLine]", "window", ",", 
        "\[IndentingNewLine]", "cake"}], "\[IndentingNewLine]", "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"cakeF", "=", 
        RowBox[{"CakeWaveletStackFourier", "[", 
         RowBox[{
         "size", ",", "s\[CurlyPhi]", ",", "kSpline", ",", "q", ",", 
          "\[Rho]Inflection", ",", "kMn", ",", "matrixCoordinatesQ"}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
          RowBox[{"cakeF", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", 
             RowBox[{
              RowBox[{"Ceiling", "[", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"size", "-", "1"}], ")"}], "/", "2"}], "]"}], "+", 
              "2"}], ",", 
             RowBox[{
              RowBox[{"Ceiling", "[", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"size", "-", "1"}], ")"}], "/", "2"}], "]"}], "+", 
              "2"}]}], "]"}], "]"}], "="}], ";", 
         RowBox[{"0", "*", 
          RowBox[{"s\[CurlyPhi]", "/", "periodicity"}]}]}], 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{
          "The", " ", "central", " ", "frequency", " ", "overlaps", " ", 
           "with", " ", "all", " ", "rotated", " ", "kernels"}], ",", 
          RowBox[{
          "it", " ", "should", " ", "still", " ", "ad", " ", "up", " ", "to", 
           " ", "1"}]}], "*)"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"s", "=", "2"}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"cakeF", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", 
           RowBox[{
            RowBox[{
             RowBox[{"Ceiling", "[", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"size", "-", "1"}], ")"}], "/", "2"}], "]"}], "+", 
             "1", "-", "s"}], ";;", 
            RowBox[{
             RowBox[{"Ceiling", "[", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"size", "-", "1"}], ")"}], "/", "2"}], "]"}], "+", 
             "1", "+", "s"}]}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"Ceiling", "[", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"size", "-", "1"}], ")"}], "/", "2"}], "]"}], "+", 
             "1", "-", "s"}], ";;", 
            RowBox[{
             RowBox[{"Ceiling", "[", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"size", "-", "1"}], ")"}], "/", "2"}], "]"}], "+", 
             "1", "+", "s"}]}]}], "]"}], "]"}], "=", 
        RowBox[{"s\[CurlyPhi]", "/", "periodicity"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
         "The", " ", "central", " ", "frequency", " ", "overlaps", " ", 
          "with", " ", "all", " ", "rotated", " ", "kernels"}], ",", 
         RowBox[{
         "it", " ", "should", " ", "still", " ", "ad", " ", "up", " ", "to", 
          " ", "1"}]}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"Inverse", " ", 
         RowBox[{"(", "centered", ")"}], " ", "Fourier", " ", "transform"}], 
        "*)"}], "\[IndentingNewLine]", 
       RowBox[{"cakeIF", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"RotateRight", "[", 
           RowBox[{
            RowBox[{"InverseFourier", "[", 
             RowBox[{"RotateLeft", "[", 
              RowBox[{"#", ",", 
               RowBox[{"Floor", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"size", ",", "size"}], "}"}], "/", "2"}], "]"}]}], 
              "]"}], "]"}], ",", 
            RowBox[{"Floor", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"size", ",", "size"}], "}"}], "/", "2"}], "]"}]}], 
           "]"}], "&"}], "/@", "cakeF"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"window", "=", 
        RowBox[{"WindowGauss", "[", 
         RowBox[{"size", ",", "\[Sigma]s"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"cake", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"window", "*", "#"}], "&"}], "/@", "cakeIF"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"If", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"periodicity", "\[Equal]", 
          RowBox[{"2", "\[Pi]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"cake", "=", 
           RowBox[{"Flatten", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"cake", ",", 
               RowBox[{"Conjugate", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Reverse", "[", 
                   RowBox[{"Reverse", "[", "#", "]"}], "]"}], "&"}], "/@", 
                 "cake"}], "]"}]}], "}"}], ",", "1"}], "]"}]}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"singleOrDouble", "\[Equal]", "\"\<Single\>\""}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"cake", "=", 
           RowBox[{"cake", "*", 
            RowBox[{"ErfSet", "[", 
             RowBox[{"size", ",", 
              RowBox[{"q", "*", 
               RowBox[{"periodicity", "/", "s\[CurlyPhi]"}]}]}], "]"}]}]}], 
          ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "cake", "]"}]}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"End", " ", "of", " ", "Module"}], "*)"}], "\[IndentingNewLine]", 
  "\n", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "Function", " ", "definition", " ", "that", " ", "uses", " ", "the", " ", 
    "OptionsPattern"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"CakeWaveletStack", "[", 
     RowBox[{"size_", ",", "s\[CurlyPhi]_", ",", 
      RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
       "kSpline", ",", "\[IndentingNewLine]", "q", ",", "\[IndentingNewLine]",
         "periodicity", ",", "\[IndentingNewLine]", "\[Rho]Inflection", ",", 
        "\[IndentingNewLine]", "kMn", ",", "\[IndentingNewLine]", "\[Sigma]s",
         ",", "\[IndentingNewLine]", "matrixCoordinatesQ", ",", 
        "\[IndentingNewLine]", "cakeStack", ",", "\[IndentingNewLine]", 
        "singleOrDouble"}], "\[IndentingNewLine]", "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", "***************************)"}], 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"**", "**", "**", "**", "**", "Check"}], " ", "Parameters"}], 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"kSpline", "=", 
        RowBox[{"OptionValue", "[", "\"\<SplineOrder\>\"", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"q", "=", 
        RowBox[{"OptionValue", "[", "\"\<AngularSubSampleRate\>\"", "]"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"periodicity", "=", 
        RowBox[{"OptionValue", "[", "\"\<Periodicity\>\"", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Switch", "[", 
        RowBox[{
         RowBox[{"OptionValue", "[", "\"\<InflectionPoint\>\"", "]"}], 
         "\[IndentingNewLine]", ",", "\"\<Automatic\>\"", ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"\[Rho]Inflection", "=", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"size", "-", "1"}], ")"}], "/", "2"}], " ", "0.8"}]}], 
          ";"}], "\[IndentingNewLine]", ",", "_", ",", "\[IndentingNewLine]", 
         RowBox[{"\[Rho]Inflection", "=", 
          RowBox[{"OptionValue", "[", "\"\<InflectionPoint\>\"", "]"}]}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"kMn", "=", 
        RowBox[{"OptionValue", "[", "\"\<MnOrder\>\"", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Switch", "[", 
        RowBox[{
         RowBox[{"OptionValue", "[", "\"\<GaussianWindowSigma\>\"", "]"}], 
         "\[IndentingNewLine]", ",", "\"\<Automatic\>\"", ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"\[Sigma]s", "=", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"size", "-", "1"}], ")"}], "/", "4"}]}], ";"}], 
         "\[IndentingNewLine]", ",", "_", ",", "\[IndentingNewLine]", 
         RowBox[{"\[Sigma]s", "=", 
          RowBox[{
          "OptionValue", "[", "\"\<GaussianWindowSigma\>\"", "]"}]}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"OptionValue", "[", "\"\<CoordinateSystem\>\"", "]"}], 
          "\[Equal]", "\"\<Matrix\>\""}], ",", "\[IndentingNewLine]", 
         RowBox[{"matrixCoordinatesQ", "=", "True"}], "\[IndentingNewLine]", 
         ",", "\[IndentingNewLine]", 
         RowBox[{"matrixCoordinatesQ", "=", "False"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"singleOrDouble", "=", 
        RowBox[{"OptionValue", "[", "\"\<SingleVsDoubleSided\>\"", "]"}]}], 
       ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", "**************************)"}], 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"**", "**", "**", "**", "**", "Construct"}], " ", "Stack"}], 
        "*)"}], "\[IndentingNewLine]", 
       RowBox[{"cakeStack", "=", 
        RowBox[{"CakeWaveletStack", "[", 
         RowBox[{
         "size", ",", "s\[CurlyPhi]", ",", "kSpline", ",", "q", ",", 
          "periodicity", ",", "\[Rho]Inflection", ",", "kMn", ",", 
          "\[Sigma]s", ",", "matrixCoordinatesQ", ",", "singleOrDouble"}], 
         "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "cakeStack", "]"}]}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", "**********************************)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"**", "**", "**", "**", "**", "**", "**", "**"}], "*", 
    "GaborWaveletStack"}], "*)"}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Options", "[", "GaborWaveletStack", "]"}], "=", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\"\<\[Epsilon]\>\"", "\[Rule]", "4"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<KernelSize\>\"", "\[Rule]", "\"\<Automatic\>\""}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<k0\>\"", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "3"}], "}"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"\"\<Periodicity\>\"", "\[Rule]", "\[Pi]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<SingleVsDoubleSided\>\"", "\[Rule]", "\"\<Double\>\""}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{"\"\<CoordinateSystem\>\"", "\[Rule]", "\"\<Matrix\>\""}]}], 
     "\[IndentingNewLine]", "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"GaborWaveletStack", "[", 
     RowBox[{"a_", ",", "s\[CurlyPhi]_", ",", 
      RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
       "\[Epsilon]", ",", "\[IndentingNewLine]", "A", ",", 
        "\[IndentingNewLine]", "k0", ",", "\[IndentingNewLine]", "size", ",", 
        "\[IndentingNewLine]", "periodicity", ",", "\[IndentingNewLine]", 
        "stack", ",", "\[IndentingNewLine]", "singleOrDouble", ",", 
        "\[IndentingNewLine]", "matrixCoordinatesQ"}], "\[IndentingNewLine]", 
       "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"Parameters", ":"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[Epsilon]", "=", 
        RowBox[{"OptionValue", "[", "\"\<\[Epsilon]\>\"", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"A", "=", 
        RowBox[{"(", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"\[Epsilon]", "^", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "/", "2"}], ")"}]}], ",", "0"}], "}"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ")"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"k0", "=", 
        RowBox[{"OptionValue", "[", "\"\<k0\>\"", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Switch", "[", 
        RowBox[{
         RowBox[{"OptionValue", "[", "\"\<KernelSize\>\"", "]"}], 
         "\[IndentingNewLine]", ",", "\"\<Automatic\>\"", ",", 
         "\[IndentingNewLine]", 
         RowBox[{"size", "=", 
          RowBox[{"Floor", "[", 
           RowBox[{"8", "*", 
            RowBox[{"Sqrt", "[", "\[Epsilon]", "]"}], "*", "a"}], "]"}]}], 
         "\[IndentingNewLine]", ",", "_Integer", ",", "\[IndentingNewLine]", 
         RowBox[{"size", "=", 
          RowBox[{"OptionValue", "[", "\"\<KernelSize\>\"", "]"}]}], 
         "\[IndentingNewLine]", ",", "_", ",", "\[IndentingNewLine]", 
         RowBox[{"size", "=", 
          RowBox[{"Floor", "[", 
           RowBox[{"8", "*", 
            RowBox[{"Sqrt", "[", "\[Epsilon]", "]"}], "*", "a"}], "]"}]}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"EvenQ", "[", "size", "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"size", "=", 
          RowBox[{"size", "+", "1"}]}]}], "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"periodicity", "=", 
        RowBox[{"OptionValue", "[", "\"\<Periodicity\>\"", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"singleOrDouble", "=", 
        RowBox[{"OptionValue", "[", "\"\<SingleVsDoubleSided\>\"", "]"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"matrixCoordinatesQ", "=", 
        RowBox[{
         RowBox[{"OptionValue", "[", "\"\<CoordinateSystem\>\"", "]"}], 
         "\[Equal]", "\"\<Matrix\>\""}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"The", " ", 
         RowBox[{"stack", ":"}]}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"stack", "=", 
        RowBox[{"GenerateKernelSetGabor", "[", 
         RowBox[{"A", ",", "k0", ",", "a", ",", 
          RowBox[{"Round", "[", 
           RowBox[{"\[Pi]", "/", "s\[CurlyPhi]"}], "]"}], ",", "size", ",", 
          "matrixCoordinatesQ"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"periodicity", "\[Equal]", 
          RowBox[{"2", " ", "\[Pi]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"stack", "=", 
           RowBox[{"Flatten", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"stack", ",", 
               RowBox[{"Conjugate", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Reverse", "[", 
                   RowBox[{"Reverse", "[", "#", "]"}], "]"}], "&"}], "/@", 
                 "stack"}], "]"}]}], "}"}], ",", "1"}], "]"}]}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"singleOrDouble", "\[Equal]", "\"\<Single\>\""}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"stack", "=", 
           RowBox[{"stack", "*", 
            RowBox[{"ErfSet", "[", 
             RowBox[{"size", ",", 
              RowBox[{"periodicity", "/", "s\[CurlyPhi]"}]}], "]"}]}]}], 
          ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "stack", "]"}]}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"GenerateKernelSetGabor", "=", 
    RowBox[{"Compile", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"A", ",", "_Real", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"k0", ",", "_Real", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"a", ",", "_Real"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"n\[Theta]", ",", "_Real"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"dim", ",", "_Real"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"matQ", ",", 
          RowBox[{"True", "|", "False"}]}], "}"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Module", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
        "{", "\[IndentingNewLine]", "d\[Theta]", "\[IndentingNewLine]", "}"}],
         ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"d\[Theta]", "=", 
          RowBox[{
           RowBox[{"(", "\[Pi]", ")"}], "/", "n\[Theta]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"0.00000000001", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "/", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"4", " ", "a", " ", "\[Pi]"}], ")"}], "/", 
               RowBox[{"E", "^", 
                RowBox[{"(", 
                 RowBox[{"9", "/", "2"}], ")"}]}]}], ")"}]}], ")"}], 
           RowBox[{"(", 
            RowBox[{"1", "/", "a"}], ")"}], "*", 
           RowBox[{"Table", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Table", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"With", "[", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"{", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"xx", "=", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"-", "\[Theta]"}], "+", 
                    RowBox[{"\[Pi]", "/", "2"}]}], "]"}], ",", 
                    RowBox[{"-", 
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"-", "\[Theta]"}], "+", 
                    RowBox[{"\[Pi]", "/", "2"}]}], "]"}]}]}], "}"}], ".", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", "y"}], "}"}]}]}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{"yy", "=", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"-", "\[Theta]"}], "+", 
                    RowBox[{"\[Pi]", "/", "2"}]}], "]"}], ",", 
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"-", "\[Theta]"}], "+", 
                    RowBox[{"\[Pi]", "/", "2"}]}], "]"}]}], "}"}], ".", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", "y"}], "}"}]}]}]}], 
                  "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"Exp", "[", 
                   RowBox[{"I", " ", 
                    RowBox[{"(", 
                    RowBox[{"k0", ".", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"yy", ",", "xx"}], "}"}], "/", "a"}], ")"}]}], 
                    ")"}]}], "]"}], 
                  RowBox[{"Exp", "[", 
                   RowBox[{
                    RowBox[{"-", 
                    RowBox[{"(", 
                    RowBox[{"1", "/", "2"}], ")"}]}], " ", 
                    RowBox[{
                    RowBox[{"Norm", "[", 
                    RowBox[{"(", 
                    RowBox[{"A", ".", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"yy", ",", "xx"}], "}"}], "/", "a"}], ")"}]}], 
                    ")"}], "]"}], "^", "2"}]}], "]"}]}]}], 
                "\[IndentingNewLine]", "]"}], ",", 
               RowBox[{"(*", 
                RowBox[{"End", " ", "of", " ", "With"}], "*)"}], 
               "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"x", ",", 
                 RowBox[{"-", 
                  RowBox[{"Floor", "[", 
                   RowBox[{"dim", "/", "2"}], "]"}]}], ",", 
                 RowBox[{
                  RowBox[{"Floor", "[", 
                   RowBox[{"dim", "/", "2"}], "]"}], "-", 
                  RowBox[{"(", 
                   RowBox[{"1", "-", 
                    RowBox[{"2", "*", 
                    RowBox[{"Mod", "[", 
                    RowBox[{
                    RowBox[{"dim", "/", "2"}], ",", "1"}], "]"}]}]}], 
                   ")"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{"y", ",", 
                 RowBox[{"-", 
                  RowBox[{"Floor", "[", 
                   RowBox[{"dim", "/", "2"}], "]"}]}], ",", 
                 RowBox[{
                  RowBox[{"Floor", "[", 
                   RowBox[{"dim", "/", "2"}], "]"}], "-", 
                  RowBox[{"(", 
                   RowBox[{"1", "-", 
                    RowBox[{"2", "*", 
                    RowBox[{"Mod", "[", 
                    RowBox[{
                    RowBox[{"dim", "/", "2"}], ",", "1"}], "]"}]}]}], 
                   ")"}]}]}], "}"}]}], "\[IndentingNewLine]", "]"}], ",", 
             RowBox[{"(*", 
              RowBox[{
               RowBox[{"End", " ", "of", " ", "Table", " ", "x"}], ",", "y"}],
               "*)"}], "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{"\[Theta]", ",", 
               RowBox[{"If", "[", 
                RowBox[{"matQ", ",", "\[Pi]", ",", 
                 RowBox[{"\[Pi]", "+", 
                  RowBox[{"\[Pi]", "/", "2"}]}]}], "]"}], ",", 
               RowBox[{"If", "[", 
                RowBox[{"matQ", ",", 
                 RowBox[{
                  RowBox[{"2", "*", "\[Pi]"}], "-", "d\[Theta]"}], ",", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"+", "\[Pi]"}], "/", "2"}], "+", "d\[Theta]"}]}], 
                "]"}], ",", 
               RowBox[{"If", "[", 
                RowBox[{"matQ", ",", "d\[Theta]", ",", 
                 RowBox[{"-", "d\[Theta]"}]}], "]"}]}], "}"}]}], 
            "\[IndentingNewLine]", "]"}]}]}]}]}], 
       RowBox[{"(*", 
        RowBox[{"End", " ", "of", " ", "Table", " ", "theta"}], "*)"}], 
       "\[IndentingNewLine]", "]"}]}], 
     RowBox[{"(*", 
      RowBox[{"End", " ", "of", " ", "Module"}], "*)"}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"End", " ", "of", " ", "Compile"}], "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", "**********************************)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"**", "**", "**", "**", "**", "**", "**"}], "*", 
    "WaveletTransform2D"}], "*)"}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"WaveletTransform2DErik", "[", 
     RowBox[{"kernels_", ",", "im_", ",", 
      RowBox[{"fourierQ_", ":", "1"}]}], "]"}], ":=", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
       "imF", ",", "\[IndentingNewLine]", "kernelsF", ",", 
        "\[IndentingNewLine]", "os", ",", "\[IndentingNewLine]", 
        "dimkernelx1", ",", "\[IndentingNewLine]", "dimkernely1", ",", 
        "\[IndentingNewLine]", "dimkernelx2", ",", "\[IndentingNewLine]", 
        "dimkernely2"}], "\[IndentingNewLine]", "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Dimensions", "[", "kernels", "]"}], "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"-", "2"}], ";;", 
              RowBox[{"-", "1"}]}], "]"}], "]"}], "\[Equal]", 
           RowBox[{"Dimensions", "[", "im", "]"}]}], "&&", 
          RowBox[{"fourierQ", "\[Equal]", "1"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{"Using", " ", "the", " ", "Fourier", " ", "transform"}], 
          "*)"}], "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"imF", "=", 
           RowBox[{"Fourier", "[", "im", "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"kernelsF", "=", 
           RowBox[{
            RowBox[{
             RowBox[{"Fourier", "[", 
              RowBox[{"Reverse", "[", 
               RowBox[{"#", ",", 
                RowBox[{"{", 
                 RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}], "&"}], "/@", 
            "kernels"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"os", "=", 
           RowBox[{
            RowBox[{
             RowBox[{"RotateRight", "[", 
              RowBox[{
               RowBox[{"InverseFourier", "[", 
                RowBox[{"#", "*", "imF"}], "]"}], ",", 
               RowBox[{"Ceiling", "[", 
                RowBox[{"0.1", "+", 
                 RowBox[{
                  RowBox[{"Dimensions", "[", "im", "]"}], "/", "2"}]}], 
                "]"}]}], "]"}], "&"}], "/@", "kernelsF"}]}], ";"}], 
         "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{"Using", " ", "Correlation"}], "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"dimkernelx1", ",", "dimkernely1"}], "}"}], "=", 
           RowBox[{
            RowBox[{
             RowBox[{"Dimensions", "[", 
              RowBox[{"kernels", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "]"}], "/", "2"}], "//", 
            "Ceiling"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"dimkernelx2", ",", "dimkernely2"}], "}"}], "=", 
           RowBox[{"Dimensions", "[", 
            RowBox[{"kernels", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"EvenQ", "[", "dimkernelx2", "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"dimkernelx2", "=", 
             RowBox[{
              RowBox[{"dimkernelx2", "/", "2"}], "+", "1"}]}], 
            "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
            RowBox[{"dimkernelx2", "=", 
             RowBox[{
              RowBox[{"dimkernelx2", "/", "2"}], "//", "Ceiling"}]}]}], 
           "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"EvenQ", "[", "dimkernely2", "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"dimkernely2", "=", 
             RowBox[{
              RowBox[{"dimkernely2", "/", "2"}], "+", "1"}]}], 
            "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
            RowBox[{"dimkernely2", "=", 
             RowBox[{
              RowBox[{"dimkernely2", "/", "2"}], "//", "Ceiling"}]}]}], 
           "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"os", "=", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"ListCorrelate", "[", 
              RowBox[{
               RowBox[{"kernels", "[", 
                RowBox[{"[", "i", "]"}], "]"}], ",", "im", ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"-", "dimkernelx1"}], ",", 
                   RowBox[{"-", "dimkernely1"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"dimkernelx2", ",", "dimkernely2"}], "}"}]}], 
                "}"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", 
               RowBox[{"Length", "[", "kernels", "]"}], ",", "1"}], "}"}]}], 
            "]"}]}]}]}], "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "os", "]"}]}]}], "\[IndentingNewLine]", "]"}]}],
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", "\n", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", "**********************************)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"**", "**", "**", "**", "**", "**", "**"}], "*", 
    "WaveletTransform2D"}], "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Options", "[", "OrientationScoreTransform", "]"}], "=", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\"\<WaveletSize\>\"", "\[Rule]", "151"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<SplineOrder\>\"", "\[Rule]", "3"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<AngularSubSampleRate\>\"", "\[Rule]", "1"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<Periodicity\>\"", "\[Rule]", "\[Pi]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<InflectionPoint\>\"", "\[Rule]", "\"\<Automatic\>\""}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{"\"\<MnOrder\>\"", "\[Rule]", "8"}], ",", "\[IndentingNewLine]", 
      RowBox[{"\"\<GaussianWindowSigma\>\"", "\[Rule]", "\"\<Automatic\>\""}],
       ",", "\[IndentingNewLine]", 
      RowBox[{"\"\<InflectionPoint\>\"", "\[Rule]", "\"\<Automatic\>\""}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{"\"\<CoordinateSystem\>\"", "\[Rule]", "\"\<Matrix\>\""}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<SingleVsDoubleSided\>\"", "\[Rule]", "\"\<Double\>\""}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{"\"\<Method\>\"", "\[Rule]", "\"\<SpatialConvolution\>\""}]}], 
     "\[IndentingNewLine]", "}"}]}], ";"}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"OrientationScoreTransform", "::", "dim"}], "=", 
   "\"\<Warning! Method \\\"Fourier\\\" can not be used if the image \
dimensions are not equal. Convolution based method with kernel size `1`x`1` \
used instead.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"OrientationScoreTransform", "::", "size"}], "=", 
    "\"\<Warning! Wavelet size can not be specified with method \\\"Fourier\\\
\", size is set equal to the image size.\>\""}], ";"}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"OrientationScoreTransform", "[", 
     RowBox[{"im_", ",", "s\[CurlyPhi]_", ",", 
      RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
       "dimx", ",", "dimy", ",", "\[IndentingNewLine]", "size", ",", 
        "\[IndentingNewLine]", "kSpline", ",", "\[IndentingNewLine]", "q", 
        ",", "\[IndentingNewLine]", "periodicity", ",", "\[IndentingNewLine]",
         "\[Rho]Inflection", ",", "\[IndentingNewLine]", "kMn", ",", 
        "\[IndentingNewLine]", "\[Sigma]s", ",", "\[IndentingNewLine]", 
        "matrixCoordinatesQ", ",", "\[IndentingNewLine]", "cakeStack", ",", 
        "\[IndentingNewLine]", "os", ",", "\[IndentingNewLine]", 
        "singleOrDouble"}], "\[IndentingNewLine]", "}"}], ",", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", "***************************)"}], "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"**", "**", "**", "**", "**", "Check"}], " ", "Parameters"}], 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"dimx", ",", "dimy"}], "}"}], "=", 
        RowBox[{
         RowBox[{"Dimensions", "[", "im", "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"1", ";;", "2"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"OptionValue", "[", "\"\<Method\>\"", "]"}], "\[Equal]", 
          "\"\<Fourier\>\""}], ",", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"dimx", "\[NotEqual]", "dimy"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Message", "[", 
             RowBox[{
              RowBox[{"OrientationScoreTransform", "::", "dim"}], ",", 
              RowBox[{"OptionValue", "[", "\"\<WaveletSize\>\"", "]"}]}], 
             "]"}], ";", "\[IndentingNewLine]", 
            RowBox[{"size", "=", 
             RowBox[{"OptionValue", "[", "\"\<WaveletSize\>\"", "]"}]}], 
            ";"}], "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"If", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"OptionValue", "[", "\"\<WaveletSize\>\"", "]"}], 
               "\[NotEqual]", 
               RowBox[{
                RowBox[{"Options", "[", 
                 RowBox[{
                 "OrientationScoreTransform", ",", "\"\<WaveletSize\>\""}], 
                 "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "2"}], "]"}], "]"}]}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"Message", "[", 
                RowBox[{"OrientationScoreTransform", "::", "size"}], "]"}], 
               ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"size", "=", "dimx"}], ";"}]}], "\[IndentingNewLine]", 
          "]"}], "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
         RowBox[{"size", "=", 
          RowBox[{"OptionValue", "[", "\"\<WaveletSize\>\"", "]"}]}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"kSpline", "=", 
        RowBox[{"OptionValue", "[", "\"\<SplineOrder\>\"", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"q", "=", 
        RowBox[{"OptionValue", "[", "\"\<AngularSubSampleRate\>\"", "]"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"periodicity", "=", 
        RowBox[{"OptionValue", "[", "\"\<Periodicity\>\"", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Switch", "[", 
        RowBox[{
         RowBox[{"OptionValue", "[", "\"\<InflectionPoint\>\"", "]"}], 
         "\[IndentingNewLine]", ",", "\"\<Automatic\>\"", ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"\[Rho]Inflection", "=", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"size", "-", "1"}], ")"}], "/", "2"}], " ", "0.8"}]}], 
          ";"}], "\[IndentingNewLine]", ",", "_", ",", "\[IndentingNewLine]", 
         RowBox[{"\[Rho]Inflection", "=", 
          RowBox[{"OptionValue", "[", "\"\<InflectionPoint\>\"", "]"}]}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"kMn", "=", 
        RowBox[{"OptionValue", "[", "\"\<MnOrder\>\"", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Switch", "[", 
        RowBox[{
         RowBox[{"OptionValue", "[", "\"\<GaussianWindowSigma\>\"", "]"}], 
         "\[IndentingNewLine]", ",", "\"\<Automatic\>\"", ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"\[Sigma]s", "=", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"size", "-", "1"}], ")"}], "/", "4"}]}], ";"}], 
         "\[IndentingNewLine]", ",", "_", ",", "\[IndentingNewLine]", 
         RowBox[{"\[Sigma]s", "=", 
          RowBox[{
          "OptionValue", "[", "\"\<GaussianWindowSigma\>\"", "]"}]}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"OptionValue", "[", "\"\<CoordinateSystem\>\"", "]"}], 
          "\[Equal]", "\"\<Matrix\>\""}], ",", "\[IndentingNewLine]", 
         RowBox[{"matrixCoordinatesQ", "=", "True"}], "\[IndentingNewLine]", 
         ",", "\[IndentingNewLine]", 
         RowBox[{"matrixCoordinatesQ", "=", "False"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"singleOrDouble", "=", 
        RowBox[{"OptionValue", "[", "\"\<SingleVsDoubleSided\>\"", "]"}]}], 
       ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", "**************************)"}], "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"**", "**", "**", "**", "**", "Construct"}], " ", "Stack"}], 
        "*)"}], "\[IndentingNewLine]", 
       RowBox[{"cakeStack", "=", 
        RowBox[{"CakeWaveletStack", "[", 
         RowBox[{
         "size", ",", "s\[CurlyPhi]", ",", "kSpline", ",", "q", ",", 
          "periodicity", ",", "\[Rho]Inflection", ",", "kMn", ",", 
          "\[Sigma]s", ",", "matrixCoordinatesQ", ",", "singleOrDouble"}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"os", "=", 
        RowBox[{"WaveletTransform2DErik", "[", 
         RowBox[{"cakeStack", ",", "im", ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"OptionValue", "[", "\"\<Method\>\"", "]"}], "\[Equal]", 
             "\"\<Fourier\>\""}], ",", "1", ",", "0"}], "]"}]}], "]"}]}], ";",
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "os", "]"}]}]}], "\[IndentingNewLine]", "]"}]}],
    ";"}], "\n", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", "******************************************************)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
      "**", "**", "**", "**", "**", "**", "**", "**", "End"}], " ", 
    "Private"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.6283308413389482`*^9, 3.6283308429780636`*^9}, {
  3.6361849439838905`*^9, 3.636184981626449*^9}, {3.6361977951105614`*^9, 
  3.636197800991724*^9}, {3.6699500992912636`*^9, 3.6699501307559533`*^9}, {
  3.6699502683595686`*^9, 3.6699504120313597`*^9}, {3.6699505325045457`*^9, 
  3.6699516199709225`*^9}, {3.906097846827426*^9, 3.906097870368034*^9}},
 CellLabel->
  "In[688]:=",ExpressionUUID->"b8b6b901-30e3-44bd-84fc-bb4e11d9c60e"]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Load Images", "Chapter",
 CellChangeTimes->{{3.8713709923185797`*^9, 
  3.8713709944375134`*^9}},ExpressionUUID->"e3d614c7-a321-493e-b9de-\
8c298e25bd2c"],

Cell["\<\
The annotations of the images are not always fully correct (relations between \
parent and child vessels, and directions of vessels may be incorrect for some \
images).\
\>", "Text",
 CellChangeTimes->{{3.871371837217696*^9, 
  3.8713719006621995`*^9}},ExpressionUUID->"16f5e194-3e94-476b-aac1-\
b0be1cad1755"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"directory", "=", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], ",", 
      "\"\<IOSTAR_Shuhe\\\\IOSTAR\\\\Train\\\\images\>\""}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"filesIM", "=", 
   RowBox[{"FileNames", "[", 
    RowBox[{"\"\<*.png\>\"", ",", "directory"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"filesJSON", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"DeleteCases", "[", 
      RowBox[{
       RowBox[{"FileNames", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"FileBaseName", "[", "#", "]"}], "<>", 
          "\"\<_Merged.json\>\""}], ",", "directory"}], "]"}], ",", "#"}], 
      "]"}], "&"}], "/@", "filesIM"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"filesIMor", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"DeleteCases", "[", 
      RowBox[{
       RowBox[{"FileNames", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"FileBaseName", "[", "#", "]"}], "<>", "\"\<.jpg\>\""}], 
         ",", "directory"}], "]"}], ",", "#"}], "]"}], "&"}], "/@", 
    "filesIM"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6321104764003205`*^9, 3.632110714784951*^9}, {
   3.63211959709842*^9, 3.632119600379729*^9}, {3.6321199442302475`*^9, 
   3.6321199468396807`*^9}, {3.632120363524599*^9, 3.632120367509011*^9}, 
   3.63212040377491*^9, 3.6321204502699223`*^9, {3.6321207747376804`*^9, 
   3.6321208270347404`*^9}, {3.6321268055047607`*^9, 3.63212681140135*^9}, {
   3.632139864226648*^9, 3.6321398862226477`*^9}, {3.6321401601742477`*^9, 
   3.6321401616874475`*^9}, {3.632201551756397*^9, 3.632201556538875*^9}, {
   3.634356640149673*^9, 3.6343566794155087`*^9}, {3.6363456535650477`*^9, 
   3.636345684555705*^9}, {3.6363552519235287`*^9, 3.6363552521110687`*^9}, {
   3.63644695266846*^9, 3.636446997559087*^9}, {3.637563983851345*^9, 
   3.637563985865958*^9}, {3.9058393298315797`*^9, 3.905839342800129*^9}, {
   3.9058394246308994`*^9, 3.9058394358312607`*^9}, 3.9058395879304256`*^9, 
   3.905839780445999*^9},
 CellLabel->
  "In[714]:=",ExpressionUUID->"e63c50f6-8c77-494f-8c4c-e5054fd0725b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"directoryMask", "=", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], ",", 
      "\"\<IOSTAR_Shuhe\\\\IOSTAR\\\\Train\\\\mask\>\""}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"filesIMMask", "=", 
   RowBox[{"FileNames", "[", 
    RowBox[{"\"\<*.tif\>\"", ",", "directoryMask"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8733660245703354`*^9, 3.873366068036478*^9}, {
  3.873366195208381*^9, 3.8733662288402967`*^9}, {3.8750679516897593`*^9, 
  3.875067952777704*^9}},
 CellLabel->
  "In[718]:=",ExpressionUUID->"d8a36c1a-bfa1-408d-be05-a9f667281c4b"]
}, Closed]],

Cell[CellGroupData[{

Cell["Select Image and Annotations", "Chapter",
 CellChangeTimes->{{3.871370998987939*^9, 3.871371001628995*^9}, {
  3.871371941307643*^9, 
  3.8713719442895346`*^9}},ExpressionUUID->"453c3ba5-2e53-4b22-ae6a-\
b12e6f12af03"],

Cell[CellGroupData[{

Cell["Load image and annotations", "Section",
 CellChangeTimes->{{3.631418976560703*^9, 
  3.6314189813211336`*^9}},ExpressionUUID->"f5b68bac-f174-4172-8a20-\
b793bc0f73f0"],

Cell["\<\
Vessel trees are not always correctly annotated in the .json-file. Therefore, \
we grouped vessels belonging to the same vessel tree, their start vessels and \
end vessels. In addition to that, we selected the rows that are in the \
considered half of the image (in this case the upper half).\
\>", "Text",
 CellChangeTimes->{{3.8713720042011843`*^9, 
  3.871372130779111*^9}},ExpressionUUID->"516df055-a022-4fe9-bdee-\
2ed5ecd53668"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"VesselTrees", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", 
       "8", ",", "9", ",", "10", ",", "11", ",", "12", ",", "13", ",", "14", 
       ",", "15", ",", "16", ",", "40", ",", "41", ",", "42", ",", "43", ",", 
       "44", ",", "45", ",", "46", ",", "47", ",", "48", ",", "49", ",", "50",
        ",", "51", ",", "52", ",", "53", ",", "54", ",", "55", ",", "56", ",",
        "57", ",", "58", ",", "59"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", "17", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", "18", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "19", ",", "26", ",", "27", ",", "28", ",", "29", ",", "61", ",", "66", 
       ",", "68", ",", "71", ",", "72"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "20", ",", "21", ",", "22", ",", "23", ",", "24", ",", "25", ",", "60", 
       ",", "62", ",", "63", ",", "64", ",", "65", ",", "67", ",", "69", ",", 
       "70"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"30", ",", "31", ",", "32"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", "33", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", "34", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", "35", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", "36", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", "39", "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"rowSelection", "=", 
    RowBox[{"{", 
     RowBox[{"3", ",", "4", ",", "5", ",", "6", ",", "7"}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{"startVesselsNames", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", "1", "}"}], ",", 
     RowBox[{"{", "17", "}"}], ",", 
     RowBox[{"{", "18", "}"}], ",", 
     RowBox[{"{", "19", "}"}], ",", 
     RowBox[{"{", "20", "}"}], ",", 
     RowBox[{"{", "30", "}"}], ",", 
     RowBox[{"{", "33", "}"}], ",", 
     RowBox[{"{", "34", "}"}], ",", 
     RowBox[{"{", "35", "}"}], ",", 
     RowBox[{"{", "36", "}"}], ",", 
     RowBox[{"{", "39", "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"endVesselsNames", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "2", ",", "3", ",", "4", ",", "8", ",", "9", ",", "12", ",", "13", ",", 
       "15", ",", "16", ",", "40", ",", "41", ",", "42", ",", "44", ",", "45",
        ",", "46", ",", "47", ",", "48", ",", "49", ",", "50", ",", "51", ",",
        "52", ",", "53", ",", "54", ",", "55", ",", "56", ",", "57", ",", 
       "58", ",", "59"}], "}"}], ",", 
     RowBox[{"{", "17", "}"}], ",", 
     RowBox[{"{", "18", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "26", ",", "28", ",", "29", ",", "61", ",", "66", ",", "68", ",", "71", 
       ",", "72"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "21", ",", "23", ",", "25", ",", "60", ",", "62", ",", "63", ",", "64", 
       ",", "65", ",", "67", ",", "69", ",", "70"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"31", ",", "32"}], "}"}], ",", 
     RowBox[{"{", "33", "}"}], ",", 
     RowBox[{"{", "34", "}"}], ",", 
     RowBox[{"{", "35", "}"}], ",", 
     RowBox[{"{", "36", "}"}], ",", 
     RowBox[{"{", "39", "}"}]}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8486718343475485`*^9, 3.848671839877495*^9}, {
   3.8489220527358637`*^9, 3.8489220632545977`*^9}, 3.848922563916769*^9, {
   3.848928904309311*^9, 3.8489289178190536`*^9}, {3.8489291478345165`*^9, 
   3.848929157522023*^9}, {3.848929193969455*^9, 3.848929194642145*^9}, {
   3.848929684509836*^9, 3.8489296943473687`*^9}, {3.848930029994684*^9, 
   3.848930030858785*^9}, {3.848930139485019*^9, 3.848930140070019*^9}, {
   3.8489303056182346`*^9, 3.848931067163562*^9}, {3.8489312548594685`*^9, 
   3.8489313143927336`*^9}, {3.8489315942714233`*^9, 3.848931628250991*^9}, {
   3.8489316609690475`*^9, 3.8489317104599566`*^9}, {3.8489318798399715`*^9, 
   3.848932582922557*^9}, {3.8489326426267214`*^9, 3.8489327517786064`*^9}, {
   3.8489328506727247`*^9, 3.8489328509632254`*^9}, {3.8489330076662855`*^9, 
   3.848933017133898*^9}, {3.8489331257842407`*^9, 3.8489331571419954`*^9}, {
   3.8489333054908533`*^9, 3.848933324318695*^9}, {3.8489334538978877`*^9, 
   3.8489334608501844`*^9}},
 CellLabel->
  "In[720]:=",ExpressionUUID->"2fd91371-8666-4a50-8e6a-f0e8dd8efe3b"],

Cell["We select image 18 and import its corresponding annotations.", "Text",
 CellChangeTimes->{{3.8713721360839324`*^9, 
  3.871372157027299*^9}},ExpressionUUID->"2cd5c294-1395-4c05-bf49-\
dedcca015114"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"imNr", "=", "21"}], ";"}], "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"imNr", "=", "1"}], ";"}], "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"File", " ", "names"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fNameImage", "=", 
   RowBox[{
   "filesIM", "\[LeftDoubleBracket]", "imNr", "\[RightDoubleBracket]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fNameAnnotation", "=", 
   RowBox[{"First", "[", 
    RowBox[{
    "filesJSON", "\[LeftDoubleBracket]", "imNr", "\[RightDoubleBracket]"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"fNameMask", "=", 
    RowBox[{
    "filesIMMask", "\[LeftDoubleBracket]", "imNr", 
     "\[RightDoubleBracket]"}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Import", " ", "data"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"im", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"fNameImage", ",", "\"\<Data\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Length", "[", 
      RowBox[{"Dimensions", "[", "im", "]"}], "]"}], ">", "2"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"im", "=", 
      RowBox[{"im", "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", "All", ",", "2"}], "\[RightDoubleBracket]"}]}], 
     ";"}], "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"im", "=", "im"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"im", "=", 
    RowBox[{"Rescale", "[", "im", "]"}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Import", " ", "vessel", " ", "annotations"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"allAnnotations", "=", 
   RowBox[{"Import", "[", "fNameAnnotation", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"vesselAnnotations", "=", 
    RowBox[{"\"\<vessels\>\"", "/.", "allAnnotations"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ToString", "[", 
       RowBox[{"First", "[", "vesselAnnotationsData", "]"}], "]"}], 
      "\[Equal]", "\"\<vessels\>\""}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"vesselAnnotations", "=", "allAnnotations"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", "\n", 
  RowBox[{"(*", 
   RowBox[{"Show", " ", "data"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ImageAdjust", "[", 
    RowBox[{"Image", "[", "im", "]"}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{",", "\[IndentingNewLine]", 
     RowBox[{"Graphics", "[", 
      RowBox[{"Flatten", "@", 
       RowBox[{"{", 
        RowBox[{"Green", ",", 
         RowBox[{"Arrowheads", "[", "Medium", "]"}], ",", 
         RowBox[{"Arrow", "/@", 
          RowBox[{"Transpose", "/@", 
           RowBox[{"(", 
            RowBox[{"\"\<firstWall\>\"", "/.", "vesselAnnotations"}], 
            ")"}]}]}]}], "}"}]}], "]"}], "\[IndentingNewLine]", ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Graphics", "[", 
      RowBox[{"Flatten", "@", 
       RowBox[{"{", 
        RowBox[{"Green", ",", 
         RowBox[{"Arrowheads", "[", "Medium", "]"}], ",", 
         RowBox[{"Arrow", "/@", 
          RowBox[{"Transpose", "/@", 
           RowBox[{"(", 
            RowBox[{"\"\<secondWall\>\"", "/.", "vesselAnnotations"}], 
            ")"}]}]}]}], "}"}]}], "]"}]}], "*)"}], "\[IndentingNewLine]", ",", 
   RowBox[{"ImageSize", "\[Rule]", "400"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.6321107202386723`*^9, 3.6321107400492725`*^9}, {
   3.6321110363934007`*^9, 3.6321110527020636`*^9}, {3.632119697993126*^9, 
   3.632119721838453*^9}, {3.632119752464096*^9, 3.6321197531360035`*^9}, 
   3.6321199625431676`*^9, {3.632120062138629*^9, 3.632120080993882*^9}, {
   3.6321201879330893`*^9, 3.6321202088239717`*^9}, {3.6321202388557425`*^9, 
   3.632120272992379*^9}, {3.632120305883421*^9, 3.6321203101021757`*^9}, {
   3.632120346352559*^9, 3.6321203466650057`*^9}, {3.632120434332717*^9, 
   3.6321204436450577`*^9}, {3.6363579481806107`*^9, 3.6363579547361045`*^9}, 
   3.636365196435877*^9, {3.6363676748027787`*^9, 3.6363677069765224`*^9}, {
   3.63636800334501*^9, 3.63636800954123*^9}, {3.636430382291294*^9, 
   3.636430428592563*^9}, {3.637666477872963*^9, 3.6376664792986507`*^9}, 
   3.6379004059015694`*^9, {3.665125608863834*^9, 3.665125609066967*^9}, {
   3.665125662627514*^9, 3.665125682076186*^9}, {3.665125772847412*^9, 
   3.6651257965531583`*^9}, 3.845537672127635*^9, {3.8455377176182575`*^9, 
   3.8455377572339897`*^9}, {3.845713000561839*^9, 3.845713000691499*^9}, 
   3.8457157274657288`*^9, 3.845719485329923*^9, {3.845955767473254*^9, 
   3.845955767808876*^9}, {3.845958907334997*^9, 3.845958907513612*^9}, 
   3.845961890953102*^9, {3.8459688693668933`*^9, 3.8459688702286186`*^9}, 
   3.846558985239467*^9, {3.84779140436685*^9, 3.847791418672674*^9}, {
   3.847791461200805*^9, 3.8477914814151506`*^9}, {3.848054492960129*^9, 
   3.848054513703916*^9}, {3.8480546092236004`*^9, 3.848054656456555*^9}, 
   3.8480547293085775`*^9, {3.852218653563259*^9, 3.85221865389946*^9}, {
   3.905588088824956*^9, 3.9055880991846247`*^9}, {3.905839630430546*^9, 
   3.905839630580475*^9}, 3.90583973799671*^9, {3.905842087591161*^9, 
   3.9058420903530273`*^9}, 3.928828778925831*^9},
 CellLabel->
  "In[724]:=",ExpressionUUID->"93a570aa-ccbf-4d7d-a124-4f2ad8658084"],

Cell[CellGroupData[{

Cell["Mask", "Subsection",
 CellChangeTimes->{{3.6376471349422803`*^9, 
  3.637647136271988*^9}},ExpressionUUID->"6a89fb72-7f3c-465e-b676-\
ef05e5a602c7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Import", " ", "data"}], "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"mask", "=", 
     RowBox[{"Import", "[", 
      RowBox[{"fNameMask", ",", "\"\<Data\>\""}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Length", "[", 
        RowBox[{"Dimensions", "[", "mask", "]"}], "]"}], ">", "2"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"mask", "=", 
        RowBox[{"mask", "\[LeftDoubleBracket]", 
         RowBox[{"All", ",", "All", ",", "2"}], "\[RightDoubleBracket]"}]}], 
       ";"}], "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"mask", "=", "mask"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
    ";"}], "\n", 
   RowBox[{
    RowBox[{"mask", "=", 
     RowBox[{"Rescale", "[", "mask", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"GraphicsRow", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"HighlightImage", "[", 
       RowBox[{
        RowBox[{"ImageAdjust", "[", 
         RowBox[{"Image", "[", "im", "]"}], "]"}], ",", 
        RowBox[{"Image", "[", "mask", "]"}]}], "]"}], ",", 
      RowBox[{"Image", "[", "mask", "]"}]}], "}"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8733661214506407`*^9, 3.873366143694336*^9}},
 CellLabel->
  "In[735]:=",ExpressionUUID->"4032094c-a6f1-4ada-b5d6-54959890ba8d"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Downsample image and annotated data
\t(Warning: this overwrites im and vesselAnnotations defined in previous cell)\
\>", "Section",
 CellChangeTimes->{{3.6363552990972195`*^9, 3.6363553092971845`*^9}, {
  3.6364304594823036`*^9, 
  3.6364304877818336`*^9}},ExpressionUUID->"3735de6c-fb93-4c4c-8242-\
a512849ff2a4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Downsample", " ", "by", " ", "factor", " ", "ds"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"ds", "=", "2"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"ds", "=", "2"}], ";"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"im", "=", 
     RowBox[{"ImageData", "[", 
      RowBox[{"ImageResize", "[", 
       RowBox[{
        RowBox[{"Image", "[", "im", "]"}], ",", 
        RowBox[{"Round", "[", 
         RowBox[{
          RowBox[{"Reverse", "[", 
           RowBox[{"Dimensions", "[", "im", "]"}], "]"}], "/", "ds"}], 
         "]"}]}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"mask", "=", 
     RowBox[{"ImageData", "[", 
      RowBox[{"ImageResize", "[", 
       RowBox[{
        RowBox[{"Image", "[", "mask", "]"}], ",", 
        RowBox[{"Round", "[", 
         RowBox[{
          RowBox[{"Reverse", "[", 
           RowBox[{"Dimensions", "[", "mask", "]"}], "]"}], "/", "ds"}], 
         "]"}]}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"vesselAnnotations", "=", 
     RowBox[{"vesselAnnotations", "/.", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"\"\<secondWall\>\"", "\[Rule]", "x_"}], ")"}], "->", 
       RowBox[{"(", 
        RowBox[{"\"\<secondWall\>\"", "\[Rule]", 
         RowBox[{"x", "/", "ds"}]}], ")"}]}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"vesselAnnotations", "=", 
     RowBox[{"vesselAnnotations", "/.", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"\"\<firstWall\>\"", "\[Rule]", "x_"}], ")"}], "->", 
       RowBox[{"(", 
        RowBox[{"\"\<firstWall\>\"", "\[Rule]", 
         RowBox[{"x", "/", "ds"}]}], ")"}]}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"vesselAnnotationsData", "=", 
     RowBox[{"vesselAnnotations", "/.", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"\"\<firstWall\>\"", "\[Rule]", "x_"}], ")"}], "->", 
       RowBox[{"(", 
        RowBox[{"\"\<firstWall\>\"", "\[Rule]", 
         RowBox[{"Hold", "[", 
          RowBox[{"Transpose", "@", 
           RowBox[{"graphicsToImageCoordinates", "[", 
            RowBox[{
             RowBox[{"Dimensions", "[", "im", "]"}], ",", 
             RowBox[{"Transpose", "@", "x"}]}], "]"}]}], "]"}]}], ")"}]}]}]}],
     ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"vesselAnnotationsData", "=", 
     RowBox[{"vesselAnnotationsData", "/.", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"\"\<secondWall\>\"", "\[Rule]", "x_"}], ")"}], "->", 
       RowBox[{"(", 
        RowBox[{"\"\<secondWall\>\"", "\[Rule]", 
         RowBox[{"Hold", "[", 
          RowBox[{"Transpose", "@", 
           RowBox[{"graphicsToImageCoordinates", "[", 
            RowBox[{
             RowBox[{"Dimensions", "[", "im", "]"}], ",", 
             RowBox[{"Transpose", "@", "x"}]}], "]"}]}], "]"}]}], ")"}]}]}]}],
     ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"vesselAnnotationsData", "=", 
     RowBox[{"vesselAnnotationsData", "//", "ReleaseHold"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"Show", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ImageAdjust", "[", 
      RowBox[{"Image", "[", "im", "]"}], "]"}], "\[IndentingNewLine]", ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Graphics", "[", 
      RowBox[{"Flatten", "@", 
       RowBox[{"{", 
        RowBox[{"Green", ",", 
         RowBox[{"Line", "/@", 
          RowBox[{"Transpose", "/@", 
           RowBox[{"(", 
            RowBox[{"\"\<firstWall\>\"", "/.", 
             RowBox[{"Select", "[", 
              RowBox[{"vesselAnnotations", ",", 
               RowBox[{
                RowBox[{"MemberQ", "[", 
                 RowBox[{
                  RowBox[{"Flatten", "@", 
                   RowBox[{"Part", "[", 
                    RowBox[{"VesselTrees", ",", "rowSelection"}], "]"}]}], 
                  ",", 
                  RowBox[{"\"\<name\>\"", "/.", "#"}]}], "]"}], "&"}]}], 
              "]"}]}], ")"}]}]}]}], "}"}]}], "]"}], "\[IndentingNewLine]", 
     ",", "\[IndentingNewLine]", 
     RowBox[{"Graphics", "[", 
      RowBox[{"Flatten", "@", 
       RowBox[{"{", 
        RowBox[{"Green", ",", 
         RowBox[{"Line", "/@", 
          RowBox[{"Transpose", "/@", 
           RowBox[{"(", 
            RowBox[{"\"\<secondWall\>\"", "/.", 
             RowBox[{"Select", "[", 
              RowBox[{"vesselAnnotations", ",", 
               RowBox[{
                RowBox[{"MemberQ", "[", 
                 RowBox[{
                  RowBox[{"Flatten", "@", 
                   RowBox[{"Part", "[", 
                    RowBox[{"VesselTrees", ",", "rowSelection"}], "]"}]}], 
                  ",", 
                  RowBox[{"\"\<name\>\"", "/.", "#"}]}], "]"}], "&"}]}], 
              "]"}]}], ")"}]}]}]}], "}"}]}], "]"}], "\[IndentingNewLine]", 
     ",", 
     RowBox[{"ImageSize", "\[Rule]", "400"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.636355318406521*^9, 3.636355349164131*^9}, {
   3.6363554698248262`*^9, 3.636355491654749*^9}, {3.6363725867583313`*^9, 
   3.6363726013208914`*^9}, 3.6363774643521256`*^9, 3.6363780216915283`*^9, {
   3.6364304439847364`*^9, 3.6364304502977943`*^9}, {3.6375745760000887`*^9, 
   3.6375745860450387`*^9}, {3.637647626108798*^9, 3.637647641443409*^9}, {
   3.6376478227745934`*^9, 3.637647823036603*^9}, {3.6376478694577856`*^9, 
   3.637647870273777*^9}, {3.6376480592724824`*^9, 3.6376480767178745`*^9}, 
   3.6376664943201127`*^9, {3.637667931920068*^9, 3.6376679342667074`*^9}, {
   3.6651249892361064`*^9, 3.6651250572696037`*^9}, {3.665125103245185*^9, 
   3.6651251126906586`*^9}, {3.665125153075572*^9, 3.6651252078403435`*^9}, {
   3.6651252614910035`*^9, 3.66512528849964*^9}, {3.665125349421134*^9, 
   3.66512535355113*^9}, 3.665125460411048*^9, {3.665125723368497*^9, 
   3.6651257564741354`*^9}, {3.665127657212329*^9, 3.6651276574623733`*^9}, {
   3.665127695633624*^9, 3.6651277135252595`*^9}, 3.8281522099635496`*^9, 
   3.828156900410407*^9, {3.846042026166813*^9, 3.8460420857957773`*^9}, 
   3.8460422202388754`*^9, {3.8460423315986958`*^9, 3.8460423542523303`*^9}, {
   3.846559037393387*^9, 3.8465590400093875`*^9}, {3.8465591897861156`*^9, 
   3.8465591927254877`*^9}},
 CellLabel->
  "In[739]:=",ExpressionUUID->"efa9673d-f94d-4fde-8f99-a5a90711c788"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"endVessels", "=", 
   RowBox[{"Select", "[", 
    RowBox[{"vesselAnnotationsData", ",", 
     RowBox[{
      RowBox[{"MemberQ", "[", 
       RowBox[{
        RowBox[{"Flatten", "@", 
         RowBox[{"Flatten", "@", 
          RowBox[{"Part", "[", 
           RowBox[{"endVesselsNames", ",", "rowSelection"}], "]"}]}]}], ",", 
        RowBox[{"\"\<name\>\"", "/.", "#"}]}], "]"}], "&"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ends", "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{".5", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Last", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"\"\<firstWall\>\"", "/.", "#"}], ")"}], "\[Transpose]"}],
           "]"}], "+", 
         RowBox[{"Last", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"\"\<secondWall\>\"", "/.", "#"}], ")"}], 
           "\[Transpose]"}], "]"}]}], ")"}]}], "&"}], ",", "endVessels"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"startVessels", "=", 
   RowBox[{"Select", "[", 
    RowBox[{"vesselAnnotationsData", ",", 
     RowBox[{
      RowBox[{"MemberQ", "[", 
       RowBox[{
        RowBox[{"Flatten", "@", 
         RowBox[{"Flatten", "@", 
          RowBox[{"Part", "[", 
           RowBox[{"startVesselsNames", ",", "rowSelection"}], "]"}]}]}], ",", 
        RowBox[{"\"\<name\>\"", "/.", "#"}]}], "]"}], "&"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"starts", "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{".5", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"First", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"\"\<firstWall\>\"", "/.", "#"}], ")"}], "\[Transpose]"}],
           "]"}], "+", 
         RowBox[{"First", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"\"\<secondWall\>\"", "/.", "#"}], ")"}], 
           "\[Transpose]"}], "]"}]}], ")"}]}], "&"}], ",", "startVessels"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"seedVessels", "=", 
   RowBox[{"Select", "[", 
    RowBox[{"vesselAnnotationsData", ",", 
     RowBox[{
      RowBox[{"MemberQ", "[", 
       RowBox[{
        RowBox[{"Flatten", "@", 
         RowBox[{"Part", "[", 
          RowBox[{"VesselTrees", ",", "rowSelection"}], "]"}]}], ",", 
        RowBox[{"\"\<name\>\"", "/.", "#"}]}], "]"}], "&"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"seeds", "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{".5", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"First", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"\"\<firstWall\>\"", "/.", "#"}], ")"}], "\[Transpose]"}],
           "]"}], "+", 
         RowBox[{"First", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"\"\<secondWall\>\"", "/.", "#"}], ")"}], 
           "\[Transpose]"}], "]"}]}], ")"}]}], "&"}], ",", "seedVessels"}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.846041410933591*^9, 3.846041419446633*^9}, {
  3.846041468015699*^9, 3.8460414802706733`*^9}, {3.846041929513918*^9, 
  3.8460419801719055`*^9}, {3.846042050661799*^9, 3.8460420516035166`*^9}, {
  3.8460425382399797`*^9, 3.8460426436073947`*^9}, {3.846060321716936*^9, 
  3.8460603307009325`*^9}, {3.846559175066594*^9, 3.8465591819578776`*^9}},
 CellLabel->
  "In[748]:=",ExpressionUUID->"a2a642aa-096e-47f0-a317-7358e4fc44a2"],

Cell[BoxData[
 RowBox[{"GraphicsRow", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Show", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ImageAdjust", "[", 
       RowBox[{"Image", "[", "im", "]"}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"PointSize", "[", ".012", "]"}], ",", "Green", ",", 
         RowBox[{"PointImageCoordinates", "[", 
          RowBox[{"im", ",", "seeds"}], "]"}], ",", "Red", ",", 
         RowBox[{"PointImageCoordinates", "[", 
          RowBox[{"im", ",", "ends"}], "]"}]}], "}"}], "]"}], 
      "\[IndentingNewLine]", ",", 
      RowBox[{"ImageSize", "\[Rule]", "Full"}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Show", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ImageAdjust", "[", 
       RowBox[{"Image", "[", "im", "]"}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"PointSize", "[", ".012", "]"}], ",", "Green", ",", 
         RowBox[{"PointImageCoordinates", "[", 
          RowBox[{"im", ",", "starts"}], "]"}], ",", "Red", ",", 
         RowBox[{"PointImageCoordinates", "[", 
          RowBox[{"im", ",", "ends"}], "]"}]}], "}"}], "]"}], 
      "\[IndentingNewLine]", ",", 
      RowBox[{"ImageSize", "\[Rule]", "Full"}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Show", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ImageAdjust", "[", 
       RowBox[{"Image", "[", "im", "]"}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"PointSize", "[", ".012", "]"}], ",", "Green", ",", 
         RowBox[{"PointImageCoordinates", "[", 
          RowBox[{"im", ",", "starts"}], "]"}], ",", "Red", ",", 
         RowBox[{"PointImageCoordinates", "[", 
          RowBox[{"im", ",", "ends"}], "]"}]}], "}"}], "]"}], ",", 
      RowBox[{"Graphics", "[", 
       RowBox[{"Flatten", "@", 
        RowBox[{"{", 
         RowBox[{"Green", ",", 
          RowBox[{"Line", "/@", 
           RowBox[{"Transpose", "/@", 
            RowBox[{"(", 
             RowBox[{"\"\<firstWall\>\"", "/.", "vesselAnnotations"}], 
             ")"}]}]}]}], "}"}]}], "]"}], "\[IndentingNewLine]", ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Graphics", "[", 
       RowBox[{"Flatten", "@", 
        RowBox[{"{", 
         RowBox[{"Green", ",", 
          RowBox[{"Line", "/@", 
           RowBox[{"Transpose", "/@", 
            RowBox[{"(", 
             RowBox[{"\"\<secondWall\>\"", "/.", "vesselAnnotations"}], 
             ")"}]}]}]}], "}"}]}], "]"}], "\[IndentingNewLine]", ",", 
      RowBox[{"ImageSize", "\[Rule]", "Full"}]}], "]"}]}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6375643210909867`*^9, 3.637564372086564*^9}, {
   3.6375645399144735`*^9, 3.637564553910674*^9}, {3.6375646188390436`*^9, 
   3.6375647266739073`*^9}, 3.637662434206366*^9, {3.637662488296561*^9, 
   3.637662518494814*^9}, {3.6651254054734664`*^9, 3.665125417760874*^9}, {
   3.6651274454681606`*^9, 3.665127462490714*^9}, {3.665132246173501*^9, 
   3.6651322753192806`*^9}, {3.8456379275593476`*^9, 3.845637942309226*^9}, {
   3.8456382551096888`*^9, 3.8456383502265387`*^9}, 3.8457109531281986`*^9},
 CellLabel->
  "In[754]:=",ExpressionUUID->"92847ee9-84ec-45e4-8786-b61aea887986"],

Cell[BoxData[
 RowBox[{"Image", "[", 
  RowBox[{"Show", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ImageAdjust", "[", 
     RowBox[{"Image", "[", "im", "]"}], "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Graphics", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"PointSize", "[", ".012", "]"}], ",", "Green", ",", 
       RowBox[{"PointImageCoordinates", "[", 
        RowBox[{"im", ",", "seeds"}], "]"}], ",", "Red", ",", 
       RowBox[{"PointImageCoordinates", "[", 
        RowBox[{"im", ",", "ends"}], "]"}]}], "}"}], "]"}], 
    "\[IndentingNewLine]", ",", 
    RowBox[{"ImageSize", "\[Rule]", "512"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.845630378823061*^9, 3.845630380282443*^9}, {
  3.8456304887522087`*^9, 3.8456304902662606`*^9}, {3.845631347269568*^9, 
  3.8456313487907457`*^9}},
 CellLabel->
  "In[755]:=",ExpressionUUID->"19916438-e529-484b-a336-0da868ff7988"],

Cell[CellGroupData[{

Cell["Determine centerline and orientation", "Subsection",
 CellChangeTimes->{{3.637662589973176*^9, 
  3.6376625969929295`*^9}},ExpressionUUID->"790a77c5-0dba-4a30-8761-\
212df252c596"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"nrOfAveragePoints", "=", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"startAndBifurcationPoints", "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Select", " ", "first", " ", "and", " ", "second", " ", "wall"}], 
        "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"trackFirstWall", "=", 
         RowBox[{"Transpose", "[", 
          RowBox[{"\"\<firstWall\>\"", "/.", "#"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"trackSecondWall", "=", 
         RowBox[{"Transpose", "[", 
          RowBox[{"\"\<secondWall\>\"", "/.", "#"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
         "Average", " ", "both", " ", "walls", " ", "to", " ", "obtain", " ", 
          "center", " ", "points"}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
         "Make", " ", "a", " ", "list", " ", "of", " ", "the", " ", "first", 
          " ", "nrOfAveragePoints", " ", "center", " ", 
          RowBox[{"points", ":"}]}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"centerPointList", "=", 
         RowBox[{"Table", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"Mean", "[", 
              RowBox[{"{", 
               RowBox[{"#", ",", 
                RowBox[{"First", "[", 
                 RowBox[{"Nearest", "[", 
                  RowBox[{"trackSecondWall", ",", "#"}], "]"}], "]"}]}], 
               "}"}], "]"}], "&"}], "@", 
            RowBox[{
            "trackFirstWall", "\[LeftDoubleBracket]", "pointNr", 
             "\[RightDoubleBracket]"}]}], "\[IndentingNewLine]", ",", 
           RowBox[{"{", 
            RowBox[{"pointNr", ",", "1", ",", 
             RowBox[{"Min", "[", 
              RowBox[{
               RowBox[{"Length", "[", "trackFirstWall", "]"}], ",", 
               "nrOfAveragePoints"}], "]"}], ",", "1"}], "}"}]}], "]"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{
          "From", " ", "this", " ", "list", " ", "compute", " ", "the", " ", 
           "average", " ", "direction", " ", "vector"}], ",", " ", 
          RowBox[{"and", " ", "corresponding", " ", "angle"}]}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"averageVector", "=", 
         RowBox[{"Normalize", "@", 
          RowBox[{"Mean", "[", 
           RowBox[{
            RowBox[{"centerPointList", "\[LeftDoubleBracket]", 
             RowBox[{"2", ";;", 
              RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}], "-", 
            RowBox[{"centerPointList", "\[LeftDoubleBracket]", 
             RowBox[{"1", ";;", 
              RowBox[{"-", "2"}]}], "\[RightDoubleBracket]"}]}], "]"}]}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"averageAngle", "=", 
         RowBox[{"ArcTan", "[", 
          RowBox[{
           RowBox[{
           "averageVector", "\[LeftDoubleBracket]", "1", 
            "\[RightDoubleBracket]"}], ",", 
           RowBox[{
           "averageVector", "\[LeftDoubleBracket]", "2", 
            "\[RightDoubleBracket]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Output", " ", "start", " ", "point"}], ",", " ", 
          RowBox[{"direction", " ", "vector", " ", "and", " ", "angle"}]}], 
         "*)"}], "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
          "centerPointList", "\[LeftDoubleBracket]", "1", 
           "\[RightDoubleBracket]"}], ",", "averageVector", ",", 
          "averageAngle"}], "}"}]}], ")"}], "&"}], ",", 
     "vesselAnnotationsData"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.637571376722161*^9, 3.6375714391064887`*^9}, {
   3.637572083999985*^9, 3.637572088769514*^9}, {3.637662151448311*^9, 
   3.637662153882971*^9}, 3.6651257693629274`*^9, {3.665133482924532*^9, 
   3.6651334839216113`*^9}, {3.8465592371607714`*^9, 3.846559238811222*^9}},
 CellLabel->
  "In[756]:=",ExpressionUUID->"24910327-fd9b-4064-80c8-d7684dd8cc2d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"nrOfAveragePoints", "=", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"endPoints", "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Select", " ", "first", " ", "and", " ", "second", " ", "wall"}], 
        "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"trackFirstWall", "=", 
         RowBox[{"Transpose", "[", 
          RowBox[{"\"\<firstWall\>\"", "/.", "#"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"trackSecondWall", "=", 
         RowBox[{"Transpose", "[", 
          RowBox[{"\"\<secondWall\>\"", "/.", "#"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
         "Average", " ", "both", " ", "walls", " ", "to", " ", "obtain", " ", 
          "center", " ", "points"}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
         "Make", " ", "a", " ", "list", " ", "of", " ", "the", " ", "first", 
          " ", "nrOfAveragePoints", " ", "center", " ", 
          RowBox[{"points", ":"}]}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"centerPointList", "=", 
         RowBox[{"Table", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"Mean", "[", 
              RowBox[{"{", 
               RowBox[{"#", ",", 
                RowBox[{"First", "[", 
                 RowBox[{"Nearest", "[", 
                  RowBox[{"trackSecondWall", ",", "#"}], "]"}], "]"}]}], 
               "}"}], "]"}], "&"}], "@", 
            RowBox[{
            "trackFirstWall", "\[LeftDoubleBracket]", "pointNr", 
             "\[RightDoubleBracket]"}]}], "\[IndentingNewLine]", ",", 
           RowBox[{"{", 
            RowBox[{"pointNr", ",", 
             RowBox[{"Max", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Length", "[", "trackFirstWall", "]"}], "-", 
                "nrOfAveragePoints", "+", "1"}], ",", "1"}], "]"}], ",", 
             RowBox[{"Length", "[", "trackFirstWall", "]"}], ",", "1"}], 
            "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{
          "From", " ", "this", " ", "list", " ", "compute", " ", "the", " ", 
           "average", " ", "direction", " ", "vector"}], ",", " ", 
          RowBox[{"and", " ", "corresponding", " ", "angle"}]}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"averageVector", "=", 
         RowBox[{"Normalize", "@", 
          RowBox[{"Mean", "[", 
           RowBox[{
            RowBox[{"centerPointList", "\[LeftDoubleBracket]", 
             RowBox[{"2", ";;", 
              RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}], "-", 
            RowBox[{"centerPointList", "\[LeftDoubleBracket]", 
             RowBox[{"1", ";;", 
              RowBox[{"-", "2"}]}], "\[RightDoubleBracket]"}]}], "]"}]}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"averageAngle", "=", 
         RowBox[{"ArcTan", "[", 
          RowBox[{
           RowBox[{
           "averageVector", "\[LeftDoubleBracket]", "1", 
            "\[RightDoubleBracket]"}], ",", 
           RowBox[{
           "averageVector", "\[LeftDoubleBracket]", "2", 
            "\[RightDoubleBracket]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Output", " ", "start", " ", "point"}], ",", " ", 
          RowBox[{"direction", " ", "vector", " ", "and", " ", "angle"}]}], 
         "*)"}], "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"centerPointList", "\[LeftDoubleBracket]", 
           RowBox[{"-", "1"}], "\[RightDoubleBracket]"}], ",", 
          "averageVector", ",", "averageAngle"}], "}"}]}], ")"}], "&"}], ",", 
     "endVessels"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.637571376722161*^9, 3.6375714391064887`*^9}, {
   3.6375714970443068`*^9, 3.637571510733118*^9}, 3.6375715541069317`*^9, 
   3.637571869331643*^9, {3.637571904850258*^9, 3.6375719098608217`*^9}, {
   3.637572073906564*^9, 3.6375720788098755`*^9}, {3.665133479661851*^9, 
   3.6651334810574455`*^9}},
 CellLabel->
  "In[758]:=",ExpressionUUID->"e93cd8d6-977f-4869-b461-cf169e9e5158"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"nrOfAveragePoints", "=", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"startPoints", "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Select", " ", "first", " ", "and", " ", "second", " ", "wall"}], 
        "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"trackFirstWall", "=", 
         RowBox[{"Transpose", "[", 
          RowBox[{"\"\<firstWall\>\"", "/.", "#"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"trackSecondWall", "=", 
         RowBox[{"Transpose", "[", 
          RowBox[{"\"\<secondWall\>\"", "/.", "#"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
         "Average", " ", "both", " ", "walls", " ", "to", " ", "obtain", " ", 
          "center", " ", "points"}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
         "Make", " ", "a", " ", "list", " ", "of", " ", "the", " ", "first", 
          " ", "nrOfAveragePoints", " ", "center", " ", 
          RowBox[{"points", ":"}]}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"centerPointList", "=", 
         RowBox[{"Table", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"Mean", "[", 
              RowBox[{"{", 
               RowBox[{"#", ",", 
                RowBox[{"First", "[", 
                 RowBox[{"Nearest", "[", 
                  RowBox[{"trackSecondWall", ",", "#"}], "]"}], "]"}]}], 
               "}"}], "]"}], "&"}], "@", 
            RowBox[{
            "trackFirstWall", "\[LeftDoubleBracket]", "pointNr", 
             "\[RightDoubleBracket]"}]}], "\[IndentingNewLine]", ",", 
           RowBox[{"{", 
            RowBox[{"pointNr", ",", "1", ",", 
             RowBox[{"Min", "[", 
              RowBox[{
               RowBox[{"Length", "[", "trackFirstWall", "]"}], ",", 
               "nrOfAveragePoints"}], "]"}], ",", "1"}], "}"}]}], "]"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{
          "From", " ", "this", " ", "list", " ", "compute", " ", "the", " ", 
           "average", " ", "direction", " ", "vector"}], ",", " ", 
          RowBox[{"and", " ", "corresponding", " ", "angle"}]}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"averageVector", "=", 
         RowBox[{"Normalize", "@", 
          RowBox[{"Mean", "[", 
           RowBox[{
            RowBox[{"centerPointList", "\[LeftDoubleBracket]", 
             RowBox[{"2", ";;", 
              RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}], "-", 
            RowBox[{"centerPointList", "\[LeftDoubleBracket]", 
             RowBox[{"1", ";;", 
              RowBox[{"-", "2"}]}], "\[RightDoubleBracket]"}]}], "]"}]}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"averageAngle", "=", 
         RowBox[{"ArcTan", "[", 
          RowBox[{
           RowBox[{
           "averageVector", "\[LeftDoubleBracket]", "1", 
            "\[RightDoubleBracket]"}], ",", 
           RowBox[{
           "averageVector", "\[LeftDoubleBracket]", "2", 
            "\[RightDoubleBracket]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Output", " ", "start", " ", "point"}], ",", " ", 
          RowBox[{"direction", " ", "vector", " ", "and", " ", "angle"}]}], 
         "*)"}], "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
          "centerPointList", "\[LeftDoubleBracket]", "1", 
           "\[RightDoubleBracket]"}], ",", "averageVector", ",", 
          "averageAngle"}], "}"}]}], ")"}], "&"}], ",", "startVessels"}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.637571376722161*^9, 3.6375714391064887`*^9}, {
  3.637572083999985*^9, 3.637572088769514*^9}, {3.637576301651916*^9, 
  3.637576303482267*^9}, {3.6651334758047094`*^9, 3.665133476842558*^9}},
 CellLabel->
  "In[760]:=",ExpressionUUID->"240eeb6f-7f2e-4d41-91d0-45cb7c9e2a09"],

Cell[BoxData[
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ImageAdjust", "[", 
    RowBox[{"Image", "[", "im", "]"}], "]"}], "\[IndentingNewLine]", ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"Flatten", "@", 
     RowBox[{"{", 
      RowBox[{"Green", ",", 
       RowBox[{"Arrowheads", "[", "Medium", "]"}], ",", 
       RowBox[{"Arrow", "/@", 
        RowBox[{"Transpose", "/@", 
         RowBox[{"(", 
          RowBox[{"\"\<firstWall\>\"", "/.", "vesselAnnotations"}], 
          ")"}]}]}]}], "}"}]}], "]"}], "\[IndentingNewLine]", ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"Flatten", "@", 
     RowBox[{"{", 
      RowBox[{"Green", ",", 
       RowBox[{"Arrowheads", "[", "Medium", "]"}], ",", 
       RowBox[{"Arrow", "/@", 
        RowBox[{"Transpose", "/@", 
         RowBox[{"(", 
          RowBox[{"\"\<secondWall\>\"", "/.", "vesselAnnotations"}], 
          ")"}]}]}]}], "}"}]}], "]"}], "\[IndentingNewLine]", ",", 
   RowBox[{"ImageSize", "\[Rule]", "400"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.845635891540373*^9, 3.845635898255678*^9}},
 CellLabel->
  "In[762]:=",ExpressionUUID->"6cb53c12-6799-497d-8286-8cdfadc79b6a"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Select upper half", "Section",
 CellChangeTimes->{{3.631418976560703*^9, 3.6314189813211336`*^9}, {
  3.665124670482873*^9, 3.665124677875822*^9}, {3.84597013150245*^9, 
  3.8459701320488524`*^9}, {3.846731501374965*^9, 3.8467315019407263`*^9}, {
  3.847791613317197*^9, 3.8477916136896114`*^9}, {3.871372119059407*^9, 
  3.8713721195452366`*^9}},ExpressionUUID->"942f5a5e-1754-422d-b548-\
57b081bfa039"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ySelect", "=", 
   RowBox[{"480", "/", "ds"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"imhalf", "=", 
   RowBox[{"im", "\[LeftDoubleBracket]", 
    RowBox[{";;", "ySelect"}], "\[RightDoubleBracket]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"maskhalf", "=", 
    RowBox[{"mask", "\[LeftDoubleBracket]", 
     RowBox[{";;", "ySelect"}], "\[RightDoubleBracket]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ImageAdjust", "[", 
    RowBox[{"Image", "[", "imhalf", "]"}], "]"}], "\[IndentingNewLine]", ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"Flatten", "@", 
     RowBox[{"{", 
      RowBox[{"Green", ",", 
       RowBox[{
        RowBox[{
         RowBox[{"PlotVessel", "[", 
          RowBox[{"imhalf", ",", "#"}], "]"}], "&"}], "/@", 
        RowBox[{"Select", "[", 
         RowBox[{"vesselAnnotationsData", ",", 
          RowBox[{
           RowBox[{"MemberQ", "[", 
            RowBox[{
             RowBox[{"Flatten", "@", 
              RowBox[{"Part", "[", 
               RowBox[{"VesselTrees", ",", "rowSelection"}], "]"}]}], ",", 
             RowBox[{"\"\<name\>\"", "/.", "#"}]}], "]"}], "&"}]}], "]"}]}]}],
       "}"}]}], "]"}], "\[IndentingNewLine]", "\[IndentingNewLine]", ",", 
   RowBox[{"ImageSize", "\[Rule]", "400"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.636355318406521*^9, 3.636355349164131*^9}, {
   3.6363554698248262`*^9, 3.636355491654749*^9}, {3.6363725867583313`*^9, 
   3.6363726013208914`*^9}, 3.6363774643521256`*^9, 3.6363780216915283`*^9, {
   3.6364304439847364`*^9, 3.6364304502977943`*^9}, {3.6375745760000887`*^9, 
   3.6375745860450387`*^9}, {3.637647626108798*^9, 3.637647641443409*^9}, {
   3.6376478227745934`*^9, 3.637647823036603*^9}, {3.6376478694577856`*^9, 
   3.637647870273777*^9}, {3.6376480592724824`*^9, 3.6376480767178745`*^9}, 
   3.6376664943201127`*^9, {3.637667931920068*^9, 3.6376679342667074`*^9}, {
   3.6651247418473225`*^9, 3.665124864065896*^9}, {3.665125769941083*^9, 
   3.665125770112968*^9}, {3.665133034537816*^9, 3.6651330749348125`*^9}, {
   3.828152243678896*^9, 3.828152243860917*^9}, {3.828152292828909*^9, 
   3.8281522953188434`*^9}, {3.828152340859226*^9, 3.8281523836736603`*^9}, {
   3.8281569299595327`*^9, 3.828156938150872*^9}, {3.8459696976236677`*^9, 
   3.8459697151597433`*^9}, {3.845969897680904*^9, 3.8459699048373733`*^9}, {
   3.845970140509101*^9, 3.845970149439086*^9}, {3.845970305003894*^9, 
   3.8459703339559317`*^9}, {3.8459708182524786`*^9, 3.845970845738792*^9}, {
   3.8459712287023745`*^9, 3.8459712542850013`*^9}, {3.8459716336025505`*^9, 
   3.8459716365321894`*^9}, {3.8459716727853374`*^9, 3.845971686331584*^9}, {
   3.8459841480134172`*^9, 3.8459841485300927`*^9}, {3.8459842623788676`*^9, 
   3.8459842749509273`*^9}, {3.846559310298853*^9, 3.846559348059552*^9}, {
   3.8465593916919117`*^9, 3.8465594233018193`*^9}, {3.847791609214791*^9, 
   3.847791630838023*^9}, {3.8477916801439595`*^9, 3.847791703399186*^9}, {
   3.8477922619918194`*^9, 3.8477922848453164`*^9}, {3.8522188158830657`*^9, 
   3.8522188335242834`*^9}},
 CellLabel->
  "In[763]:=",ExpressionUUID->"67d94281-ed8f-4e2c-abeb-6cdadf1294d0"],

Cell[CellGroupData[{

Cell["Select seeds and end points", "Subsubsection",
 CellChangeTimes->{{3.6364354641650286`*^9, 3.636435466540027*^9}, {
  3.66513312005836*^9, 
  3.665133124464814*^9}},ExpressionUUID->"3b09db15-73bd-4f9c-b6dc-\
bee5c741d4fa"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"startAndBifurcationPoints", "=", 
   RowBox[{"Select", "[", 
    RowBox[{"startAndBifurcationPoints", ",", 
     RowBox[{
      RowBox[{
       RowBox[{"#", "\[LeftDoubleBracket]", 
        RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], "<=", "ySelect"}],
       "&"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"startPoints", "=", 
   RowBox[{"Select", "[", 
    RowBox[{"startPoints", ",", 
     RowBox[{
      RowBox[{
       RowBox[{"#", "\[LeftDoubleBracket]", 
        RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], "<=", "ySelect"}],
       "&"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"endPoints", "=", 
   RowBox[{"Select", "[", 
    RowBox[{"endPoints", ",", 
     RowBox[{
      RowBox[{
       RowBox[{"#", "\[LeftDoubleBracket]", 
        RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], "<=", "ySelect"}],
       "&"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6651331639992104`*^9, 3.6651332051617856`*^9}, {
  3.665133271614626*^9, 3.6651332727709093`*^9}, {3.6651333039379983`*^9, 
  3.6651333293099594`*^9}, {3.665133384391384*^9, 3.665133397285434*^9}, {
  3.6651334423014145`*^9, 3.6651334523676195`*^9}, {3.665133606935688*^9, 
  3.6651336143043256`*^9}, {3.845971700456517*^9, 3.845971709038146*^9}, {
  3.846559690045394*^9, 3.846559699067399*^9}, {3.847791712870341*^9, 
  3.847791719158642*^9}, {3.852218846881046*^9, 3.852218859067288*^9}},
 CellLabel->
  "In[767]:=",ExpressionUUID->"d201e261-6747-42b9-bf19-a0a591f664f7"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Show seeds", "Subsubsection",
 CellChangeTimes->{{3.6364354641650286`*^9, 
  3.636435466540027*^9}},ExpressionUUID->"d794eb85-9445-42f2-871d-\
e3804b665244"],

Cell[BoxData[
 RowBox[{
  RowBox[{"PlotVessel", "[", 
   RowBox[{"im_", ",", "vessel_"}], "]"}], ":=", "\n", 
  RowBox[{"{", "\n", 
   RowBox[{
    RowBox[{"LineImageCoordinates", "[", 
     RowBox[{"im", ",", 
      RowBox[{"Transpose", "[", 
       RowBox[{"\"\<firstWall\>\"", "/.", "vessel"}], "]"}]}], "]"}], ",", 
    "\n", 
    RowBox[{"LineImageCoordinates", "[", 
     RowBox[{"im", ",", 
      RowBox[{"Transpose", "[", 
       RowBox[{"\"\<secondWall\>\"", "/.", "vessel"}], "]"}]}], "]"}]}], "\n",
    "}"}]}]], "Code",
 CellChangeTimes->{{3.665132626752398*^9, 3.665132638564038*^9}, {
  3.6651326952949867`*^9, 3.665132752191538*^9}, {3.6651328334133463`*^9, 
  3.665132843059987*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"15c2e4b1-98ff-4ef8-8ce8-de8399bcc584"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"seedsPointFig1", "=", 
   RowBox[{"{", 
    RowBox[{"Green", ",", 
     RowBox[{"PointSize", "[", "0.01", "]"}], ",", 
     RowBox[{"PointImageCoordinates", "[", 
      RowBox[{"imhalf", ",", 
       RowBox[{"startAndBifurcationPoints", "\[LeftDoubleBracket]", 
        RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}], "]"}]}], 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"seedsArrowFig1", "=", 
   RowBox[{"{", 
    RowBox[{"Green", ",", 
     RowBox[{"Arrowheads", "[", "Small", "]"}], ",", 
     RowBox[{"ArrowImageCoordinates", "[", 
      RowBox[{"imhalf", ",", 
       RowBox[{"Transpose", "@", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"startAndBifurcationPoints", "\[LeftDoubleBracket]", 
           RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
          RowBox[{
           RowBox[{"startAndBifurcationPoints", "\[LeftDoubleBracket]", 
            RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], "+", 
           RowBox[{"10", "*", 
            RowBox[{"startAndBifurcationPoints", "\[LeftDoubleBracket]", 
             RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}]}]}]}], 
         "}"}]}]}], "]"}]}], "\[IndentingNewLine]", "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"seedsPointFig2", "=", 
   RowBox[{"{", 
    RowBox[{"Green", ",", 
     RowBox[{"PointSize", "[", "0.01", "]"}], ",", 
     RowBox[{"PointImageCoordinates", "[", 
      RowBox[{"imhalf", ",", 
       RowBox[{"startPoints", "\[LeftDoubleBracket]", 
        RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}], "]"}]}], 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"seedsArrowFig2", "=", 
   RowBox[{"{", 
    RowBox[{"Green", ",", 
     RowBox[{"Arrowheads", "[", "Small", "]"}], ",", 
     RowBox[{"ArrowImageCoordinates", "[", 
      RowBox[{"imhalf", ",", 
       RowBox[{"Transpose", "@", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"startPoints", "\[LeftDoubleBracket]", 
           RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
          RowBox[{
           RowBox[{"startPoints", "\[LeftDoubleBracket]", 
            RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], "+", 
           RowBox[{"10", "*", 
            RowBox[{"startPoints", "\[LeftDoubleBracket]", 
             RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}]}]}]}], 
         "}"}]}]}], "]"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"endsPointFig", "=", 
   RowBox[{"{", 
    RowBox[{"Red", ",", 
     RowBox[{"PointSize", "[", "0.01", "]"}], ",", 
     RowBox[{"PointImageCoordinates", "[", 
      RowBox[{"imhalf", ",", 
       RowBox[{"endPoints", "\[LeftDoubleBracket]", 
        RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}], "]"}]}], 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"endsArrowFig", "=", 
    RowBox[{"{", 
     RowBox[{"Red", ",", 
      RowBox[{"Arrowheads", "[", "Small", "]"}], ",", 
      RowBox[{"ArrowImageCoordinates", "[", 
       RowBox[{"imhalf", ",", 
        RowBox[{"Transpose", "@", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"endPoints", "\[LeftDoubleBracket]", 
            RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
           RowBox[{
            RowBox[{"endPoints", "\[LeftDoubleBracket]", 
             RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], "+", 
            RowBox[{"10", "*", 
             RowBox[{"endPoints", "\[LeftDoubleBracket]", 
              RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}]}]}]}], 
          "}"}]}]}], "]"}]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"endVesselsFig", "=", 
   RowBox[{"{", 
    RowBox[{"Flatten", "@", 
     RowBox[{"{", 
      RowBox[{"Green", ",", 
       RowBox[{
        RowBox[{
         RowBox[{"PlotVessel", "[", 
          RowBox[{"imhalf", ",", "#"}], "]"}], "&"}], "/@", "endVessels"}]}], 
      "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vesselTreeFig", "=", 
   RowBox[{"{", 
    RowBox[{"Flatten", "@", 
     RowBox[{"{", 
      RowBox[{"Green", ",", 
       RowBox[{
        RowBox[{
         RowBox[{"PlotVessel", "[", 
          RowBox[{"imhalf", ",", "#"}], "]"}], "&"}], "/@", 
        "vesselAnnotationsData"}]}], "}"}]}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6375733776930532`*^9, 3.6375733990538235`*^9}, {
   3.637573438748947*^9, 3.637573513384824*^9}, {3.6375739127589364`*^9, 
   3.6375739367832603`*^9}, {3.6375741156089892`*^9, 3.637574117987109*^9}, {
   3.637577757838523*^9, 3.6375777592760987`*^9}, 3.637647069102641*^9, {
   3.6376622145779233`*^9, 3.637662226233616*^9}, {3.637662688118195*^9, 
   3.6376627319202833`*^9}, {3.6376632397342668`*^9, 
   3.6376632409254665`*^9}, {3.665125769566063*^9, 3.6651257697535744`*^9}, {
   3.6651277884740453`*^9, 3.6651278594471617`*^9}, {3.665128055585786*^9, 
   3.665128059679647*^9}, {3.665128262043105*^9, 3.6651282835605736`*^9}, {
   3.665128350634693*^9, 3.6651284269356985`*^9}, {3.665128525495489*^9, 
   3.6651285713734837`*^9}, {3.6651323517010307`*^9, 3.665132508457713*^9}, {
   3.665132576212057*^9, 3.66513258850613*^9}, {3.6651326653865037`*^9, 
   3.6651326712932367`*^9}, {3.665132761758466*^9, 3.665132804195445*^9}, {
   3.665133635754176*^9, 3.665133710251813*^9}, {3.665133740869279*^9, 
   3.665133746311638*^9}, {3.8459717180748453`*^9, 3.845971734611884*^9}, {
   3.84597181069174*^9, 3.8459718399438057`*^9}, {3.8465594550559206`*^9, 
   3.8465594953194714`*^9}, {3.8477917551028943`*^9, 
   3.8477917661352243`*^9}, {3.8522188704621296`*^9, 3.852218883961944*^9}, {
   3.852221866919012*^9, 3.852221867563288*^9}},
 CellLabel->
  "In[771]:=",ExpressionUUID->"adc7ab47-dc60-4e91-b247-624b83d20aa7"],

Cell[BoxData[
 RowBox[{"GraphicsRow", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"Image", "@", "imhalf"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{
        "seedsPointFig1", ",", "seedsArrowFig1", ",", "endsPointFig", ",", 
         "endsArrowFig"}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"ImageSize", "\[Rule]", "800"}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"Image", "@", "imhalf"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{
        "seedsPointFig2", ",", "seedsArrowFig2", ",", "endsPointFig", ",", 
         "endsArrowFig"}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"ImageSize", "\[Rule]", "800"}]}], "]"}]}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.637662696832557*^9, 3.6376626989471416`*^9}, {
  3.6376627426761923`*^9, 3.6376627565291605`*^9}, {3.6376632464549217`*^9, 
  3.6376632614114428`*^9}, {3.6651337260462713`*^9, 3.665133732119521*^9}, {
  3.8477917691905913`*^9, 3.8477917704455757`*^9}},
 CellLabel->
  "In[779]:=",ExpressionUUID->"66f1bc5b-7568-4819-b647-7f037447da0b"],

Cell[BoxData[
 RowBox[{"GraphicsRow", "[", 
  RowBox[{"{", 
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"Image", "@", "imhalf"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Graphics", "[", 
      RowBox[{"{", 
       RowBox[{"seedsPointFig1", ",", "seedsArrowFig1", ",", 
        RowBox[{"{", 
         RowBox[{"Cyan", ",", 
          RowBox[{"Arrowheads", "[", "Small", "]"}], ",", 
          RowBox[{"Flatten", "[", 
           RowBox[{"Complement", "[", 
            RowBox[{
             RowBox[{
             "seedsArrowFig1", "\[LeftDoubleBracket]", "3", 
              "\[RightDoubleBracket]"}], ",", 
             RowBox[{
             "seedsArrowFig2", "\[LeftDoubleBracket]", "3", 
              "\[RightDoubleBracket]"}]}], "]"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Cyan", ",", 
          RowBox[{"PointSize", "[", "0.01", "]"}], ",", 
          RowBox[{"Point", "[", 
           RowBox[{"Complement", "[", 
            RowBox[{
             RowBox[{"seedsPointFig1", "\[LeftDoubleBracket]", 
              RowBox[{"3", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
             RowBox[{"seedsPointFig2", "\[LeftDoubleBracket]", 
              RowBox[{"3", ",", "1"}], "\[RightDoubleBracket]"}]}], "]"}], 
           "]"}]}], "}"}], ",", "endsPointFig", ",", "endsArrowFig"}], "}"}], 
      "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"ImageSize", "\[Rule]", "800"}]}], "]"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.8273953187454414`*^9, 3.8273953192966185`*^9}, {
  3.827395450367279*^9, 3.8273954505091033`*^9}, {3.827395561342625*^9, 
  3.827395569712604*^9}, {3.8273956184391727`*^9, 3.8273956844167695`*^9}, {
  3.827395725555234*^9, 3.827395794105155*^9}},
 CellLabel->
  "In[780]:=",ExpressionUUID->"a0f05e28-3db4-46a8-a302-903cf794a3a6"],

Cell[BoxData[
 GraphicsBox[{{}, InsetBox[
    GraphicsBox[{RasterBox[CompressedData["
1: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
R1OM2TlHjNr1Jd5lhJMkccYzwSOlRtjaLUI60mKaePjdV/FEWraY+NtW+Hbn
rzDy7QlsD3mAvbOUObHzZ5jc/QzT9WZ0C+vAO8dtuN5Hj/UP/mGcbP5rl7jS
dIOUcns9uShTmfeHOnGNzG+aT1lQbuEEdlTsTfcL9Zjj2wirXFv+k+mKa7QW
TXrLc4usf/c66XBVlRpn26oyvW898vspMybQlgprzRk2txIvjNMR5lGOqvAy
qPa6goILIqbeHQ4lxx5CH4NiYeuoLUh4vw0llQVCSufp0sl698XqNRvFyrmX
At5HBUqXmAwRfjjnSgdadpFu3z5FKHeuk07mjdg718PiOzX1ENecjxJ9toSL
GT0LxR9+uWKGz0vxwdlksZvnXrHmxhTx8QN7caNFStzRlw8kD293Ed7G5All
mY7C/u4vBKOZelCK9xFMr78VBilqQqjeLfybdF4YbJcmbdhoIZR8myB9+emN
+EFRKSEuMk1MM4kUl/ecLaruD4lPtG6T1LRdkRpUiHES5Q7SISmvpLWhdUJ4
5QuhxWC61OVWaEBxSJFYuH2IcEvzIPZ3SsTENaWIOZOF5KnFeHtBhfvmfMTx
xivYIVWkm60+p7jbMl30oNtLaw6N1uHZ1AicGPwNr/u24WKyA0/2nsLNf1T5
+1MeHm2w5LXsGvhus+SePAOqjSvB11o9lq03YbeLCdB6cQFh9jHQKsuH69os
DD+iQ51kJe64HwdTWQ6JvuxJjTAv/tr3Ahb3k+FpLMfhhVV41/oZT/94cbCC
O8POadJmsjEfe8kef2pR7fMUDTcTUKSoxdRJltTVU+LcCfWIfpaPRyfMOGKG
Ccu0arC0VZ4WK1S4Zt5VLL76EhsttHjtojq3vruDr1fyUW1gwfTl7vR2HME8
jT5st8yMT/S9qWyUD9XIIHDUU/x9b8stucvoONiL87vp8sLZjiy+48G/HilQ
rFNkZawiu60wZpamJrtkl2Jbjjz7ZJ6H9aoS5ErfINAkCmrDEjA09ivqj2py
mNZfBJ9RYohZNNwe5eHsqyEc2L87T2zuyLPT7Zhe0Qjjzr/RvuIdyje/hM7s
x+jUNwPD9d6i8tpvVE2vwNAHX/FyrBkX9f2Cu8uf4vtTTd7oJMe1zsMhVZgV
/2XIcTH45FCJZMZhP5OMjvGrBOWAj94m6Jj9Fw9a6zC9Uxmq+7ZntuNIDpzi
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
1tyTjn3/Uvz6ox0uN71Eqp8Wt+Z50c7SmD5hicLtkxeEL0GO6OSoKhzT0UPz
+2xsCK1DWf+nOKuaAxOFNunVR/r+FwNcJbsN9kqSSjT8t11aFJucP8X3vz3+
zK689P3v8d/zFP/VMf/56P+0l/9/NZ7e2ulnp3rg0ceXZQFpGh0lxdWHJFNv
escvT58j7CnWFNTsdmPIoEd4tr8FW3uaceoGV/54a8Ta6f8wMcaR/Z3sWHrF
h1ZVjVAbZslNW4ypc9eI7f3G0m+QlIZ3LdgaacTkfX+wwWoyS8RtPPmZXJVl
y2MT3Th4TQBvdm5Prbea3OThyEOpUu4P7sCmKmPOkfFGwZYSaAfW4e/n11hj
kgf1ICPadLFienAlxjq34OGtYjx60Z7dbHSp3leNGtPM6HrGmEnDtVn5T4cf
u2pyjWMijj25iCcxA+BxOBH72pw4arAWlz61Zfv39uwxLx3j+xRg/P1v6LKt
FkPO6LLfWxmrZtxErE86bIJi4X57EuTO26B5UjkWFijTUcYZMWfuoMdVX5aH
mXCqXzAW7pdH6awN4u/oi2LjsEfxwUcNxIWRw4Vl07pC/+EboW6BnbDjVah0
SM1FaWv1Z+n+fYXCl48mQmg7p4Q9SoOlPW7+EYz9J8As6QK+LY3C8ohihOU3
YtqjWBzoWIcRMt3Q33QGY+Nkmr2xFfWFyRCbs3H5TA4WtqViV70mj3c2Yc7T
Plz9ty9fvPqCXvOb0PWmDTP7m9Gr0ZTRim+wy0CO2ZGg7qdOPPK6G/MqdNh5
QBziLYoRfUCTzRnyHP1Tk916mfHpRDPOk7FYwNSOnHjpG3bsUWd5zStYmt9C
s3skVozMxbXxylz60Jr/MeR09c/o6PUNCvPLcPVFPDqe0MSkm1bYMrweYZM/
Qn2fBT+EjmNLjgElV7R5vn83nhECKF73YHdPLQrZ8txbV4b+y7KhExYPx5UH
cGPEBsT5zcVAlb9CaG684JX4Syj37oP5dorIspWDFa2wK9sDRwIPYN+bIzIW
nIOYlxvRJzYfRUPV6aGizbqVhszOtGZSkg4n7/+A65EfcVXGKyO3/0HoAhNW
rjXlm3nvkL3hLm47pyAi+z66e77BJQcV6lxTp02eKp+8L8I1zd+oHa/FpulG
VFlswQsRN5GyzAQh4itJ+b7N4tkxy8SVBTMlYg8LYbZkmCA/qUJqHKAvnVO4
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
m9uRNq0gxye/IRr7BqcshOht0Xd0Ta1A8ZtihCiEQFHnIjo8smF8sB8Fj7Rp
at90KhA4teWFD8h6/getO3VpDZTptrYWrddSoztyejRL2IV6TkynYUd7Sj8p
cGi2Dt8XyNMyDXPa3eNC6tcm0YvJajTpty0l54+hnVcisGDZL/aJZiiiVh9F
WvREns37QJ6mzlSY50Th/ctSvPjVCct6aYK/GI1p6QBzRZ54FoaUKzuM0gwb
Gn/XipbO68GIkEa4bx+CcfhYCvIeQWtXlCDE7xWG4j5jlbQM/XnRhOXSRVj+
VpkmOhnSvH8KpNBYgFJtOQpo0KbhYhEKjlGl+QMGJB86jtQ/G9BeHW0ammNO
Jz5PJhVXojJ3C5L5pkurJTWoU/cTPtxWRO/082zcuFi2f/sd/qaYNSyf743h
uQwqLl2A7wlh8lihRvYvrKjDYz7RXWdSKK2A1LbFrOyOWN407TA26lVG0hSZ
g2yWtB6RzG4qrdhMU6bsx9Ggw6lbfzxhIi6M5enlSbsGWu9KahvlkcxtkU86
Ifd9nGnFzf/K5/z+V4otj3TW/lyVfOv0dN6LgUl8fTl75lVsCG9pnC5v7igZ
/o7n1tzdhLO4Pv8LfNNuYp7LXCi+0kazqQn2jwnG5rozMHbWwwh/VdR37cVj
w7esW9hORmNADKYuOrh53Q0rM8Zi6Kk9JH5PQ/KbVVAPnwP53jEovjEbx2VS
2Euj29gXN+bgc6sFhk5oI3toMnSzZuHh5Qqc+leAdG179IdowCHCE8LWahiY
rY7HLi7QzN+JjoenUTk6EBpHL+Lyv/vYJ30Ty1WCYOdzFfsc+Eh6eQOdZ05j
rlEn7lRq0Tw5DSrNn0qRRzxITZAh3w1+Q0m5FNn/7qFLfD32H81kUxa6MYtu
3WZmTLfnil86cr1H93DmVzWSh7WLmfDjd5jKid941+bY8coM93I2J/icpn0U
d1VUnfNzeMoGfnNA67Iz0Df+Da9PgiyuzYGNZypqT3F4vLMVyULG5FSrSbn9
I0nujTlVTppCQjqO5PlRiNrniFAAHiNr+D18zYVI4s4/XL/SgGbfBAwrEybc
f4l9rSUQ3fcRe3cJU5hxARYf6cH8wX6If5cgdeU/OG0qSYshyLW5zViirUTd
u6bSHCNjWj5qCE2eGiSQO9rSNJdSdITINMkB2o0itGr7CHJTKEa6gza9QiuG
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
9o0BSIiOxk+P67iSdwSFnrGQiB7CarNenBqtQ80LralUT4rCxmXD+fdrxN39
iaVbRInX9gvXdv3GD7NPONoaAUu5H3g0Row2eluQnEIiotwe4NHGYhT65kNZ
6Sz02TDW1WMCE59dwLdTjueGW25wSr/u8N0mNvPrdqkwX7JHslPfWbCBy66y
Nz2+srun5LD2vYHsB6m5bMatG+zrExnM32/5jG/McdbHOor9c/gWGyvaxoa4
3GP2pcziYiMymQ2KlvirWIH63fU4KHDfuSES9HejBM1+o0qRA30YfawQAWNM
aSxPjzLVVChohBrlKw1g2iHBb234DY1J5vS3WZxWzzelgwdrYVz6Ci0jVSlq
iRbN1mpDh5gYOa5rxJ7+Bix9ko+lf6MQFZ2MtZ5CJNHtSKue6FGiowx1L6vD
3gnK1JJuQllTJ9KIp9uovGEnNdYaksdSRRLSkabqejFyvqRMNmqT6Kq/JkV4
SNK7R65kHDeBIt7dxXmPFvZB9g18VXHD++AoZudGTXaBiRcM73Tgbd4ISjvy
F3t0WvErTZJGfLOgqPyxdPhPLmp+lsDxpRxZTxehvr9/0DChFeGjFem8niON
XG9Fo7/L0ZV0ZTp+rRkuD9Rpg+Iwft4UpTdfZ9LxloX0bliORHu7BPO6ENYu
5WBVszFlZicqtipSzD1xqjr8HbEfOmGd1IdtJR1Q9Nai17oWNKdAjt6u1yD/
ZEHPtNLFyOCd7BuHi+y8oQS+uMht9t6FKxipWYgZByTpbbY6XZ8IervSlOLz
rejj8tkk+XUetW60o12rruP8p9m8MfGBLALVmBI1Ze7g+Tzk2BmQ86vxpKK9
AukPJ6bGbpJkjxz8zJPqL0pZLTzf5b12QlKeiYrr98xVPK8Lx10SXlz7H5//
/49SHOOy5Hd+yqPjmsxP++88OVcwW+Rcacr4MXR+nTiVWbZh9vp8qDU0o0Cn
EYUCb6ycpkVH7zrQITFV8vLSpN+HBLyoOYZWvJWhK8W6tEVdl3ZvcCM7zoWy
ZBTo3h4tanwgcK0KAS/Lu5Dv73FksEmVto8ZxHb9cCxduB4Fu8ygpHWTfZx7
lX29ewubR/PZYxovmC3DdpyfnjSXfusa/0jZE/7mMyc4869buZTbCpyv4Vn+
A3sPZsigidl/aDTb8TWMXbVOGB2fSliFESaAkBF+9CqwXk8msIFPF/K2uMfz
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
839imJQ+Z1004oPaZtyUk+Ww90WQjq0We3w/PNsXAuvN7bg/sABHBz6EXGEb
zB6KM8i8CrR+7ID8+zZ0qibi2tlmaOSFYnrFVRg6p0IrKQqG6p/xpeajKGGk
dPwRaXkMQzb6x6bAMKkKuq9l2ZJ/Gppdb3FS2YHXLYrRWaJPRW9dDl8gxXor
ZQqvHcDUm1VovGlNy0YHmmzoy/kL9VmbpsfMxBsQ/Q3C4BW3UXX9IFZJ9sK5
7xVI+GfO9cV7MfBPLyjPDYDW+nBUj0rHYOsIyGyOwnfnC3h8MBLPvF5AuHss
lOquweBGNvodeo6gr0Go9QjApL7arNqvzLE3z6PHDCXaBRlRo/oS7kWfh1d0
vOhw7Ev0Unbn/TALlqUK+Ua8tt239iNN8B0N1T1p5aXI4MflcD7VhboZ+vTw
9KHMOx/eFP3G/cdXYZVswGdfk3DhynlscUvAtWYZQuo9/M89gWJvSa6PlqHK
aSsmm3hQpluWgku1uCWTANUCM+r37sPVEXp0LvXkzR9PYZvTji+d+TjYYsKh
2+VY9e05SgZq0/9hK/4aPoH8eFmu2lIE9TnJcM435IDHIRi5eRs29vyDRzVu
lFOSoHpEAGL+isfW04Wj/V3YOMOaGgID9tG25xvvX5h/+CNKJktQ+u0LuC0T
Z111dS63UmfQsXx4PfmDy2vN6VMpxZkOt1HTJwybwxLx420+Sj5GIzMyBtn2
F+H4/QMm6alwRpss69fZs0rFgZt2arI4Vov74iyZPsmIvrs0WfN7CL33edMj
Q5L/pihwyC5JPt/QiKmp35CYXI8Pcy1o7jWS6U2mVBqdjL7/fqKzph3yWwyY
5OTNPqfd6WWqyaydbmL2nUq53mIv1/2A1hNKrNU3ZkGoJhNnKnLDCTX6DNVn
U64GlZUVOTXrPfpq3cXq0ZFoaK+F+iMzzvtdBAXbI3Ctyse4emPavbfjYYMe
XJp3Aq23SnH5hgLzNJ+j167NgO07XDxpzL2X9uBSwAvs+d6TjpdXcJulkCmx
DtyTLkWLEeF4HL0US/J3I+vjGzg73MSe+xsh0/UPfSwbsMUvA9V/pekl+xMK
K+046/4kyomvJ9NXhUs9/8KlXppJrxT449lFuF3Kh2yZPief16bpdTm2ZIq1
x6wWtUcrIC+nzhJtNdb0zkTAmWhR7RctkcmZNMh6zYBO0beYB40euPCtC9We
ipwwsxUJd7vxprAJdmI2fBugz6n/vDlOWcBhiY4cJJBm6uBKqCfL0nq4FmfI
afHsSEf2P6tHg8NxmLCuCfNuSLD4niEjmjdwt8EMPtzRl5JP+3AqZrCmZhqH
KpLzrOSoL+abwz7iceakIFXQA8/2BIgurxkgWr74iHDWyrtxM9Yr4VjFHbTk
hePM4A6sf+XIqR7gpywLDp9rztPPpXgiqhudw/owaMlg3uzTl9mPpTh7myR3
fvuKcUr1qBknT/M3Ugx4rssSLR8eXe/FIwqSnF9nis3zMkAjT5iNc4kP9O0S
9smCUOm6rWC3Vlz/lzuLI39mbvX0cTsr+PVMxcvdVDdaojryf/7/X1ak+W+3
jo1D3Vb/mh118JxAcGLmPsGrSa89K3++8BxX2BhxJn2l54H2b56Lv0CY+SYo
1vTlCQhyhvDLTW0uaijBN7cb0JVrwL+b8py1XoFp1ua0jLHlS3N3ZhuM4pU+
d6CaI0f5hmm8Zu1Fw7t2nLZanpqzOzF98lcEPvkC1/JvMNysw8YFlrzia81h
8trsLSjCsNtS1JhTAjfrRsiERCPQNQ136xrQEl2K2zOzUXN6DzY9OYwFmiU4
KvyJo9YVuFgjxYmF6nxRV43IvZPQvS1dlNa7VnR2STCCjivx7DMZXlrehpGe
3gz+Y8gZ8grssSkJj56cgkTPQkhqmzNtrRV7h9vS1Pw3HlzNxByraPiN3YgJ
O2fjo1cOyu/eROyYk6jaJs3ErdJMn/EMx5VfYvTIBGxdXo+lPYU0shWyrLc9
s8IcOHRnC6rkfuKkRj3qHZMgF+vNMd87xJr7Gimd0dgfH4H0VE1eLh7GcMf+
NFB0ZdVCD76/sYRLDpCia53YITmYE3IHM2mMN1MW5+GtrzKUxNojfbw/6511
uEwxHjeFU2C0MB7qP1NR1Oc5IpYkY9eMxwhKmgqnj9UoFbOH/9abuPV9BfbZ
F8D3ZhGerjHn9rHazNHR5OQGbXFOfQ/R5jXoUTs+el/+VOGfg+cwM1ybYQuE
7Cn7CHrKhvy53YxKNXo8+NGJ17JewnWtPCt6m9Nmejs8ixQZPmcyk+668uHC
H7iTcR6vzqfCe74ut+74g1dn3kN5WxnGydRDZVoV6pue4F3bOcwOzEDVu3co
7VkGmy+nMaX9JOoWhUNLMhWWs6pxz0TMipv/QLbVgLvsi2HXkgWVO69wX+Eb
5naIGK+nzhuHatGRfAjXnPKg80yHx0Z9w8thKmK+6sQrazc0forGxZem/NxP
gjvWy/L3NEWeWd6fyTUDuN9BwPxEBS7fGgJb/91ojH2DLRp6XP9Lhnd1D+Po
1CM4O0yWjUu1WDs+Hsc/diNkjzbffDmEgTuzcHZ7GnQDUxA9UJdXJFVo+bkB
H69uR8qGK0gXRiHtnRw11D5hwmcVJvX+gGVFAYgtLMJio7eY7L4Ge8KuIudE
DnLl7kP3aTGsWk3ouqIZZ0XtKH/pyZw3nxE3Yi++dklx27iBPDowDqurR8Om
Tp4GfVwZJqvMjzp1iLUsgU9zJ1KK1Cjzqx3Fa8YybKMPw062Y0tOMaYV/IDu
lgqkd/5B8SNZao98ieNPG6F8V461D9IROld8b/JNWDu1DDfjjmN2xD0cqOrA
hDeSPH9Xiv5NOvSYJEPj/flIv1+PMeLXNypToDRAjr0+KdNxzU0MWzae4Zlg
90lp+o9V5/YEGW5wsuB+seddFFTC/6osn3lKc1tlJ6xQhadHa+CnaErtj5bU
7CdmrPQ5NLUexdb/fB8lQYGpltZ8ccaGSUkynNsgR/MT9rQ81Jev96lw6uUW
jNFoxuQOVUqL5/5vpCnHv3agdn02ihKzITn+H9Sm2VP98jgWXmjElNgixJ6q
RXB6MOxTT6LANwWNQ/Ig9JRjo3of3t8i7qfsKSx9ZsVx9b/gcrEM2WH5eHUl
Cb9ztmCZRxh2dnQiRtAIDv0DQydtNon7cMMEeXr/8+Cqb3vot2w+rzxV4Lil
SnxaqkXNBFkm/u7Cs6RcyE014EjJEfz+XI/DKuqQvjQVikEfIT36M2JP6/Dn
JmVmet/Dsb5lwpU75SG7ezNm970tepUfIEzqdxOrmiVYo9CK2yf/wTNOh8Uz
OmF3ogW9xBrQMH4w1eZpsXKMInUum9B0fS/+uTaSQfeGUWG3Fd/2lOXoce14
0m7MzYnifdP1AV+0PqOizoAPy/swtNmJO04L2HBnCSdKDeOk0y4cMNaVrUP0
2dMhAXsPuWKf5ChRnNZakWhkuTC2z7G4mKIC0cXsdyjaEYMV3V/QsbELBkOk
OVdWnZeKdTjvmyWH1rtzzv1ejLVzpkL/sQzdNYMX8rRYt0WHZ999Qcm4NNyZ
JMHlM9QpNK7F2rO2rEsdR5eN+Vg8W4imHidRe7UwTk5ZRpg30MhrpFydYLLP
W0HUppfRmXUZHk27/KJVDLK8Rj/47vl9VUPU7Lxx//P//7JMLmx118++HHXz
+CFPxw0rBde6ZAVLAi3cb+ooRx/vWeNWMWGve05hoKCwf0Sc5GMT2NtMEmkl
PoKTmQIFb5PgczEUUU763CFtz7bFWfiXmQj7Ld9QVmBD/xnK3PDhKISqqtz3
yIQZHU70++JARxctTk3sTe0aR1o2OfGTiQqHvO3JhQGOvLQeFH3Sp/k4CcZv
q0XK+1+wP5YByy2G7LfKhscC6mEr1iv58DDMnX8Cb11DcXR5DtTiY7DI/TrW
n4/ArKUJ2GIRiB3HLkJfLVn05Yo0Io4Hw/D8V5hukqGpix6/ZjUhYdIPbNtr
RdoY8uthSUpsL8KPggp4TM8G3mtS8aARl8tL8prDRTy//w7yo24jbM1jTB0T
i9qyVIQr58IpNxM7t9VgS80dhNeFYscUY77W68mi3804+iIbh/5KcIauHMvM
6/E3Tpdjl4Xga24LApysKF1QhF2X92PFq/f4dUCD7xZpM/GrOddoqfGV+mD2
mT6H9ZvtmNUoQ/8QTw4UGjFshSVlG5uxoI8fPmm3IrulC12LsnBK+itujw0G
bT/hYOh+3PozDzM83uFIxlvsaCvFg5VqVBmkx96BdVi+ex82hX/BKEVl3jnp
RXlXD2bHeFMlcBgXpmhQuCNTpCYvI6xva0LcuQlcYe3DY1meXGBBFnwbxWuj
BWy29aXZvoE8fT0X/YPD8dFdldWW/ei9zpPJAYs5aJAtR3c34L68LKOK9Jg4
VoqKog8w/NaDPlm96H0tC2f+5MKgTymMykpRtKwKqddbsXKmBOdE/MbItN+Q
XSDHaLHHWGnsw+P3WSj3uw8ESPCSeK7kT35C47TPYq3QZc5EKSrti8a28Aro
ZVUgUawhKnFNMDgaANGtVOicUqPZuEa0RhRid28pLgtqhN6py7jq24rVb1Yz
ds14jpjlyOTyz3DwawMv/cHu2dIMXVKGyW2H8XD0GbxtzUeMy2U8+RGP0zbN
iN36EkWHXZjoNoYblS3Yz+UKpjiMxYPzMTh+X4YBN7vQEHwazktTUPq6GEXV
Vqw2/Y24zFSMKitCdlsIkvrIckTOc6xrGoxZN0Jh5puKvT8kqJkq4O/HLhw3
qhqpkSnYE9GMYXOikFRejNh5X9GrRUrMY8ewTlEPfu6a1Anrw7cwY0d5E/y1
JBj2RJ7h6a0o8tfkBfmBzFvjxQPH/0JiUygyVqejJF+LA6zKsDf3KOpjfKEV
sQHaqRXwys/Byi0XkHegDj5STbiY8gJC00L0a1bnTH1Fbh7RgZwoJx58b0OH
ESVwbG9BXO/XsLY8gX/dSXgjG4BWle34UfQDryNb8dRP7H8DbThtijirW1bj
4tpw9P1eAmFhDl5MjYfduzQc8ZWkYUMjlo2uweg8WZqIM73/sP/839xgmu0h
l75yp/bOEbxc2YONJoNo2jmJ+98sYsGGGXTOcKGZiwU1D8tyqlQVpgT9wjQ3
BQ5p0ebxM59wb8FtHBuajqA+ppwf6M2/u/RZOV6RJfak6Rol7rhagZkVYUg6
FoyDSWBJ23C6Rljw7TNpnpKR5Km0TyjoSIBnVT2qdeX5XdwzR06+Rkk/JV5J
0KZ7yRMcTfiI/dYtcEj25qS9Axl2z5e/0hW44Jkc32nnYpDcAJw3XQ15Symu
C/DiIVtF3g7Upc7MSoiiA4C2XASLkhCqko+9g3PhZ/QJf9ZeREDVZcGwIi/U
nr8Fs8prQq3ma6I8zWxM3mdA9706vDVYh7M39uFhV2u29tXn5ZXm1BQa0+2M
GWe/FNDnlitD/gyil/IyNkvMpVepFQPmKXCksAddNuizTioNiUfrkDqvP3/l
SPPckGZIGNlxouJMTvs1mbVXPJiiO5RdYrYsbpfhyI1nILt8EYY5fRIF3DgZ
t6juseiq4TIIR0bBsUier75+Rn20POPkpKizrgXjJSTYr9KWd4P0qKHnylEe
NgzprcOqbWRS4nq6r7LmlLjPMF6TgEt3jyJ3/0HcWdqISzIOnBdowAWDreka
/AL5z3+Jxp2MFD6TUhCuxQ6BU66vwNfnhGBArUPU0hnnPah/zU2n/kxk1sjP
Hq8/9/TYsrxX5Li9J/73nb//siYvk++vNHBIRP+jw9wlnKQ9r/v7R//b6Re5
RP+Je+ImpfB/aW/cpjzvG3MLgwVtG8/HzY9eIcwYGhm/fbQ/NgmlaGzyAke2
l0LudB6CDuzFC8WFGHf0FMpKNcS5ugmtDy9gqV2dOAx0I2G9IzX+gmtSDDij
Xp7uRxX4+aEel2cr8MA/BWp6KjOrcxh3iix51fQL9txJQaaYGT1/zua5Jbvo
e9yHzge+wtO8CUeXhOPIiSjs7aHN8rcS1BgciL1nQ7A56gO8BjZgx4NcZBU9
w825Xjg06o0o5dlGzGwpx84CecqEq/Hwk1g4GkswdIMOr34yolW+LZ0/10Oj
7yNcOXoZwwxv4PK+CPzyjcQ4yYu4BSnODZFm78IrePf0LX6YK5OCIPTfl45e
nzW5eNQFuGfGYH+2OdN8pWhpvgWyi2KR4t6J8Vcf4cVaNS6Qd+Ga203YJb73
icF92T1bit+ssiBQ3IrmnXNxersPRs+Mwyi5GiysboAffkJGx4J2tU7c4ujE
c++8OWXVOE494sufmUqcb6BFj3RNhv9NQ1ZrGgqD5Hlwr9hT1j1G/KDj8DLd
j8CSvbCOkeY3fw/+2m3AjFWm/GQpyUX7yrFt+UBIivX9jK0J7+ZLckieKrWM
7mOt9di4znhFpBiL6LjLj/lf/aibZU97icHsF+vO7RfqcNvJie4O4p7eJUm/
pc78e8Cb5s+mcECvwez6pk6FX5ocOK0Gt889xXFvTZ6EDaf756BmQyHWq1Vi
T+ldaI04gT9zunH9mC6L5R1okeTK0GxNigxk2CNQvCZp/Th0Uj2eXwhEXv5F
bDhsiVK1m5ihpUf9UEnmO2XAZ4gs54nZ4KpPBsycdFk+3pjFtuXQqszFuguT
MTpCghWu/Wi/IQrxamo8PsuF77IM6GYlKb7mLkz8XYC5xQpcFafJsUa5+HC8
E4XPDXh0qDQDLpxCkW8o2s0dWHneliuGSnLU01uIH/UDdqPCETFAgUf3buDe
HV4cnnwBY2uSUbLtD7oO52BvdSm2TEzD45li3a9VorlIl6WhGjS00OC9w6+x
67kMF0UYcfajLvzYJea0RAVaV2XAobUKw4Vge78etBhXAG/JLkjpG3FdvBTH
f7LnRnU5dmpXQ2fWGczumolfU4oRsMmczi+MWe0lTU8DKabON6e+tCYzGvsx
eLMptTQMKK1sz2HRuYh9U4v/w95ZRmXVtd+e7u7uDgERyXtOATtQ7MTu7k7U
x25REQxEsRWDRgUERQSlQUJABQVFkFJAOPfz/37G+H96zxhnvNfne4y9x9rr
mvM317322i6lCpxWXoOLlRkwXXMLn90CUH5gDGTf7Idm8jWY2mvR3UOSRTIN
WKykwG4HGXYLVBgYKEYnHWsGfLdgtewXHOkQ4WirDPS+nIDVUrJ0GK9Mjf6X
cHDyI2y88Qwhd4uwzluSjg5twGpxRhjKsnagKDWCcnF/XzEmWXxEmnY1aq83
YX2xNM+ZG/LRflP+maHH8SZeXL8RdDQdys3v9eh8QIHSE8ZQV3MMkwNNqP+j
Dzfc82SWhATFLmdDZ94bnL0YB+4QYY0we8qcug/TSWF4oNaB1sOuLNNSpvvR
ZnTt06Llt/6cukSZsauKMCy7ARkRthzWz56zhkoxe2saRjyuQuQrEQ7YLErt
K58hWVKMxBcPIBVQim0PunHinQT3TRKljdZPhOq3QCtYhjWOA/ix1JrTBbVo
e9CIZjspSliGYeq6zTgU34l3F5wYHevM9Y++IiM+DUGJydh04QNmF4nw0fwq
jFyWjae+1QgwkGFuxwEsbU/zEujbYnTf/aiofpQ4bZ8UPl57jdoSbd5L9OTa
7x4cqTiYvn2nsm1cP65ZNYqFc+y5eE9/5igu55omZ+H42PHHGTfanQR3Lu3D
eS59OWiWBTuWtGPgiCJE/FbmCzFHDre149Ar7ZCylGa0iBuV9ltTRMyaCxpn
86CkBee+2Y1j6kRVjy5C8zp9svNuC66lXYfn8kr83C1OxUklmO6XisQ17Uh8
2gt3AwkuXPIL8w5K8/lDSdatF+GriBZMydJgtooPByhMZJ6Qh0Pm/8GGP/mY
VnwJkbrPMcXzAb49U+F7uyZENPXlx/HhWH4sLaltyTZPudo+PqL5uzy1vzjE
FxcYxW/1EItvM5R2H6j25+mKCc/6R7y/FXvKVic2W0e7/3/P9//f179jdWxL
ktuslrgY3ZThcZN6dnkof37Xf3dwydN/9wZuX9Tj9mqLsmfnLtGEhPIj3guN
Dng3qSh6L1S877Pvfi/mfX8L5VGi/Mx6zLT7jji3FBSvPYdQ6QLciIzCd9cw
2OpacFEWKLHUi5r1vjw235Er/tiwbvUXqB2W5fVtc6i+14YPZ2rycfI0Ri+3
YFZRPmoGSDBCbjg9du3l6j/j6HmsDR+9X+CEvwHXrxXqSkw1PrsM57qXk2ho
JcV/z+c6K/Rt3VtFGL1dj6EBOvSOvIvsGWcFA3avwQbV73j7zpvR8f3467gk
I7uU2XykBCu9axEkr8URGsX4MuI5gprCMWnWehxym4y1b/xxfaQLFLfm4nGv
JM10WyDI/4iXwuzt5KnPW5tdedK4DSsP3EWVcg+mSOegIGU8JimfRsHIGNg2
qPPT1TxEtjyGUaAZXxfqsnZ+E9BpyORvqkx30aOUWwbGZ53A6JChSAuxwrCD
XVi66SFe3t+GJBsF7jWz5skzHZC8OpoZJ1ezeVoAXx1KRerZ/VC3tOWbbC8O
niTUmLp8fNlszLU1Rtx4vgXyU+sgZnMUGYFGsFB5hQdJ3zFMagBPT57HzYvN
yJy72HHtMvIUdbgk9w2idRQYu/4wfI/IJQ/9rY0Dw2S5vuEWQgLzsbFJgxuq
RTnrQAy2TIyGU1ADzvu60OnFematXUDtZAeuWyTJHV72nP+PKf/RVubDwgOY
MXoNLkj+RKG2A63Uq+H1dxd+Gz+Ejc9C3Mr3xviCZFwp+oK4W6JCtpHlIs3v
UK2QpOWMBkTP+YyOdQXQMZHj86QMtHguRP77HcjfKst5PSK8npoJ7Qu50Nn4
AOevlGHm+1po/f6EveXSdLAxpd/kIkxYOoW3yty4Mr4Gvnad+JX/C0USGXh2
VZtDF7SiXuw66h43ws9F6D01GgwLN+TxZnk+OHkTI81Wwss2BWt/f0C+/mt0
PGtFQ2oVymwGMMuyP2/Py0L4h254LZzAG68qUNbkxmh/D1rNluVs1wiIx1Tg
T70Ck6bXYoj5EaQfsGDYEzemH3sEw2sf4fwzDVuvXoTgYgXctfy484k2Zb4W
IqquA4onexH7+h0uj1Oj8VEdKhTF4cpvMVYqqrPavgJXd29FqMs/SBd9hXeP
XkL9RA+u2EjwzqZnWFLUnw5WfbhQawx3uw6gqbItl13Up/FbUQ5LUuTJB0Lv
D8hH0x4Z9r8rypTnbcjjQWgn3kB/eUt6RM7jHSNpytZI8u9Cc747J87bbkJ+
6GPGXUIevaqixCCFbmR8lyJWfcXpvL1ITWqFS5ciL70/j9mLD2GnjJC7tDLx
zTkTK5p+YaC6Kt2eKrLfiBwYZ1VghaANV9KlWLD4KywFNXD9LUGf/Sqc/NCR
hsVBnDB1Bqe/dufInvEsbNFkkECerQ87ofawAqezmjEpRJ65D39jXdFV5G1s
RMpXGy6cWYYV/T5h1dkmTN/3AK9MK3C5uAtdlaW4tzMJs66l4r1zMfqM/ojv
HVqs3CLJ5nA1Hmgz5JJDWrw8RonN9VWoO1wKT9kKnFhQhrhOaT7ZpsiscZIc
W9iKeV1ibJnejzZu6hzip8qlRgOoctuEGw9ac7+zGhNcsrBriQFdVX5h1vhj
mOWpQ5kl/Ti+qR+tbFQZXJCOK8ev4dqJAry8aksJSR9+vq/NyTeb0S2izB/T
RTm8wx5TDbQFrZX78VvdHn9DNgtWFSRiVMgvXAtRZLmePq/uHUTb6QPZcsSX
i/oMp9gVH5bZgXvcRzHyvRsTw0w55JQxR8OMnk5GFBn9G7eaVWiZ24uLXV+h
pNEj5BkZhn2U5glHI/pNMuDes9Z8YWrKrzFq3Flkxmnr3ang+gkBkTGCD00i
sPIYKihMU8Gs/CycX67DMq9yrI+qxfnCG7gX3o4kl89QG/sHgzaL083GlyG6
6gxxkObHZbIcrC/KpU8k6Bc9ldd3zGTASgNytgnNp4lyxeRv2LXMmtH3gnHC
5QBGqCVDJ8WDww9uR22Pb/Jr+aM+YXMjE17XJ3uWFdfFhoxy8jixS8Kj5eCQ
mDO7xNzi1q/7n2/Z6x0X7/9ERuLpf9/5+9/Xv2P17xkJ/7dvJGgtaXgyMEzP
4+uoAfG6R5d6zRv/yEt37k3vhGeuSU96tAVrr8Ti4s4u3MwV58PMGrQrXsIW
mTjcn23Bx8aN0HwoQtPPgXxxZxjjM00YUqfJyNvqbH9uyZQIO+qZLmJhvSM3
XBLmuflDKBW/jOEt/dhXXYmqJerc8cCLg+wdqG6QhSn7CtBJfS6Y+Bl7NXrx
+agFh973oMLaAD7ebsLlQo+MFDzHiLgnKBloSTPv2awtk6HYt+uCPGlzROR+
gu24kVz/fgUPu7lT+rgVp/f5hFnjJFi4yI4FZhr84SfFgc5RQo7ZC/NL1/Hg
awZC2osQI2tCG+NhvN41gYZdxhxhJMIdr425qtOCK+49w5O3GnSNVeT08A6B
13ovKO46Dx/72zDW/gXNxe3Qik2EmWQj6h20WB1fDsV5xvzzuR+7rrgzI6sT
VS8S4K74EBa7T+N1wTO47m2EqV4vpLeKMmqOLr+EirBzqgilkj5jzZdMqP/Y
h5mq86Fa9RUiZjJ8succ5vsPgeIqWf45YkEzF01KKzeiOv4Wwt2vo2flUixp
2421OpI8/U2e9hcFXNFgxIA9GYgQdxHymCxHlqtxWtx1OMi3CG5ZG6FDOgTj
h+yHUkI6pAe0Y5bVZww4U4CuqxI0VZXii6HujKgaRNHpUiz3bsYyVzFeLrWg
p7E8N+1/g1zDDJQN7IS2Rw8aC5yofuENdvZcxfI75qxfbsWaZ3cQu+IOfts8
wYmDZ3FZ4zfKXITaGS3LiG5limyS5Y1t7fD78A0Jazdh6+fd+DE6DMfmrMAA
++sYdLAI09Ju4u7fMKwYoUmfLfKUWXQHP05FYaxRLua6xcG/NRGXr0lznbkD
z3k1o8WyHN8FqTC2s+CNofp8t+EsRh7qxp7wvnwTL0f//kq8vKUapd+OYYGg
GHL+ksxKfIfUlfeh5HMCQ8I6sOD7UDLxEQ6PGgeHI6sRG9mBgMRIiBsLc/4C
eW57akLdWYmoHL0Vc369w+TZP7BDcB52WgqceUqDTk/e4OKRCsyO247+5tdQ
/UWCs5v12FzaAfl99zB30wOsHyLFayYaPHtQgVeXdmH86K8Ici6BvLYuT5l0
4unzq6iefRfNLvdwaOYr7Nax4gNhP4gINJgy8i9yemUoGmZHKxjz9UlTLq0X
Zf3RFKhVCRlhrQ+1EnRY/0OR633a8f7DJVjIpmLgzlyMe21C3xdy7B2jwCIT
fU6wsGGrthYTzxrwcqY1tf2leORVOMbMO4P7xq+RM8mS8/upc0WJKI/469Jx
jywPPEzGtoZeVGhqUrPiPu6PVKDvrx9YlroTrRf3YM6Ap6hyFuGJBCHbHOtB
8js1jlo0hNKDxHnO/AfU4lax7007qsdm41O+Ie8816fzHDMurv4Eq2PfgP7C
a0zQpeJrCcqNDsHiveJcIWSczMRErPiahtcHHqM0Mhxam6txPV2TX9YqMuF+
KR5vPYPzex/gzObf0BL4coK4I/29+jJc7LOQR8pxMc+My2Yo8VdaEu4ZXMDN
0DBc/9af/VcPYYCxA7W81DkzXZ2XrMHMQiuW+VtRYr4EZQ0ceey7LQukXKly
TZPJQr4wFq8XZtcy3PhVjeK37YhULYBdcC9GWP3FuHnxsHmWj/pdlnSsGMK+
P/qxpMqQa+o+YLljKKC+X2DT/6vAdOtDuC5VQr/p/ZERJMtZU8RpUtMOvlFl
yIwAyg0y48IbElw93pJKsxS5IVuZ7ke8+euxCb922/K6hxOjJxjyo408JVa8
Rr3Bv9/xVGe0oRxtB3YgIbQB+1c3YE2UBqcdN6XheyNWRIIhuUP46rMFo++/
wtjzXnh0Uh9rGq/67BYfgZfXsnByUx0iryhR7FMirjhtwK+Gr7gm9Qe598SI
InlWxMvQbMAsPts4nAN9rPkmWJuXAhpgG7gfbULNtO3vzszDdlxbpUn77YW4
bFmGyabfcKjpO7zz5iF+jB+HbMuA7KGxyUnPwnz8qBH/vlou3mrG7Vi59P3u
w9aKuMstTvuffPr/2j//f69/OSBqn5n7XRe9uKiMEZ6bjk7zSl/Y5dUxxM7H
drlnsrSFDW4Gv4N3zlnYrKjHq+XtcOlpwa4Z3aj2SoeaiAQnzBvMsB5r/h2k
ys1WnVjwS5TivV58pEBW5s/menFtYY7owAQhe/aq96WjsSV/6Y9jYktfTgvt
xqJyPX6LroTreGnaCudUTJA+Z7hK8Jq7Lwu7PZhww4+St0SY6uPAgs7+NNkj
Tfdj/alVNZ3BX2RpKJiJXBt7zPieiqQJWnypF8h0bwnm6xbCwy0K79zbIG0o
wZfherQfoM3N/V9gdd+K/zkjNdSvL0VlzZgp7P3GGUYsDfJl9To5Vo3MQe9W
cWZPc2BKtQqv2bpwR/YfSM47iao5ibjX04qP8l1I6GNKQZw73aQaEba2DB9v
iHLd/lRMCGzCTx1FbnTrRkNEDny6RSg4/QP3nsQIs/oLLJkgziFLy2HnnQGJ
5XJUiG3FhL7JmK32HE2yv9GwvxermYU5iz4jVL0C5s5jMaBjF+bmdsHlqgiP
NhZhZVoMhgcnoW3wZXiZ3YX1zBCs7b8CCqbx0M+y4/sz2px2vxszrYby8ExX
vttYjwk23wTfDlsjangpzIVMJxYUhtvno9AVUIKFEx7j1HMxiqzRYfhaZe4Q
V+Pi3Cws6pOACYa9qDE04uleay4t7cV8o6dIu1yGE5JfMMxX6IMyCQiQOomc
0Dw8tNXhvBhnfjGz4pVUZR7YJkX9y7koUpJn3kgl1t424IV2LWZeU+Y4oZ9F
muTCNbgGChlZKEx9jW8iaYj3fIkja1ORGVyHOXn5ELWWpXydPsdqvUWo5w0Y
tu6C+5SzqLIMhV5+A1yWirJW6xnib0jyl0wL5HLk2HO+ClsefcDmV96c16bH
PtdKsCC4HD2B/6Dr40y8kv+J4pl/MHuEBr/aK1NW5QF6LdSZtncOj8Vk4E/f
C5iv9RhjItrha1qAD/9E4kiRFpVKAjlOvxh5w5zgHh+JBSMbsel4IXxmh2Hq
6P34srcI90zEGRiTgGftufBJ0WMt1LnVWp8vnorx1tsUaO/R5defbnSMMGeg
Sjn237+Ba+9mQOlvPN5c1+Za2w5cqzwLIyFHfBnen0mJNjSYaclMm8E8+FiB
t0vlmLNciwWN0uxIk6ff20fYl52LOSr+NHCZxRm6dpTqzcbfykdI2S1ChY0m
XD+kATHTqnHlnz9wC5rJk3sncNtMWV7c58B9F8jY9WbcL61A66W3IWqSAbe7
pSgLdKa7gQ11vtSjz5TvqA16j3UfHgKdz2HepUSRkBJMbS5Cx+1qiAS1Qs1P
gx6rS6DvKUejKXIc7ZuHdYcUmC7mxzELFKm7WYTbPzlxUL44nw79jJhBOjRa
FMhBDcN4+lYrvlsasz1Qlq7C3pF31Odcr2K0Cudx8iV1rpxxAUMyPuGlVgVG
t5Xi76JW7DqpwLFbJjLKdTKrknS4uUqL2kGOjArX4o59stx134F2p15Ban0J
InI0eM1JnnOzH2B2UAyMilQZFC7M2B527HztwB53Cw4f0o9HS53ZVWTI2Q6D
+EbIkFqPtOi3UYd5j/R4ri0LRXpyrG434sS1v3HfU5xSAx9A/fhFHNAU9us6
DeqvUaHKCyOunmTEyG0mbJlrybtxRryx4wUKlXZj78kwwVRnJQgqDZCwV0lw
1uAkjqmYcbZCAwylhdq0sB8HJ4yg4B8F5oUUo9yqFBEBSvzwXpjdJQdy4SRf
js6w57GxzlyfJiP04N8Y3NKEgQckObw5GwMfVSPUxYr2SkLGklWh5GcRZgh7
aKuTKDtO9+HshOn8HEQa9z+Kh45HBJW1cwX3tqcKZn8W55GJNvwaXI/7Wwox
JOs6JmT/QGKpCQPtVPnhrQsdZutx6XlTrtTvz8G1Vpzbo8uIXRLUWFWM9asa
UPpJlXf+fsIB4XgOFDL55j+qXBOmxp0lGdCuasGl44pUNtBienG6t3lYro/7
LPr8WCCZ+Pv1Hc+F3avdnQ29YsJ5/7++/x+qfxlLbcmVmD1+v90z627FjSx6
4uE0ttxrwlnHhOHBE3wKX5kmT3OrwFbKsXtfKY64ubDnqguvz27GjFnJCJna
h9WDNDh1TBcK/CW4Rl+KW2/pc9RCNy7uduJbmwZkjJbgQhsZPnppxGXBCjQV
DENkaRkUnnqze6wmC7ZpsjbBmAGBMizTMeAV4zHsPGnAGDEjFms5c0GBKaN6
lKn/RcBhU4O45vx4vt3Zj29TJWm0uRZnMh/j3N++CNJ/hO1PtJjyV5+5G7Jw
ZlMxpCcU4qvmG7Qm5uHKs0Zs6yfB+hkpyBoqzub12jysa88Lo8SpKdUCPBDq
XPoQiv/U5gmnHuzZpirMjOZcfcWAWkpt0H7WgiTlNDg7xcFAzoQ7Epw5XUWZ
p/7px/McQTVXRT7c24BK2RKsnvcRe2V+YG3aLaws6sLMuh/4sSwMFMRil7QB
p59S4fBByTjR/Qq5OyqRadMCI3MxfgttR/MedW7TkeGksnSY1BZDcYEUj1lI
carMS5g5azDqUTN2LotHY2czzvnJ0HP3CzyY/xNvppmwzvgzao1f4m+LIvW2
fcYv6VYkhY/n8qBh/G0Uh9YDrkkyiwKgXKrIxTO1ObOnDgN8d6E99g5ujm9G
grwWo/fb0FPo1cM1Jdg9IhGhfxvg1STJNTG5eDVMjk92dqNO5DZGTYxE09yX
OKD9Alse3MSUsWXYLdSQyCdNcL7Ti0vagzlhkQdXbLdgZag5Vx4x5cJDDkxX
8eQS3b7sJ+vExQ+0uc85GVJb3iApKQ1f5zRBdGIPXg67iN8q1zFOqhBnjzRh
/TJDOqxS5bDlMgyoNWT6P9UILlXgrnOO/LXdgAM31CPSNBwnfI5g49xYRPiG
YKt2F0Bx3vZX5fShmqxfrEkRFQth7jwLhx9HkRMkRqMbIoySbINuUxNWenTB
OjEH91uVqWHQBM0nlXDrFXqRxGCG1Ijw5XJbzIiV5qEuc+q9Kca79g60iD+G
Socwi57UxLhx47AmLAyOr25h/4kCLC4oB1eLcOEIPW6vl2LYvrksHDOH54Z0
I/JwLtIUe7FG04aTvkqzrSMMC86ewc7cPDzb9BNV3kWQ2HsF53q0uGTpFB6x
UOS1padwZFQlRH9o80G7FVsUm3GrR5N7Nrmymra81lSHoD/KLHsaA2nrUZAe
lIituW/Rx70/Xwl7Yp67CMONJOkxxJA+2ov45p0XpetFGGIaQJ03gVRz68uE
5xpcHdGIxTt+ImZnM8a1WPKJrCjbFZ9gp8pzjAn6iFEFibj6ux0J9xohOqIU
52QKsSEyG6ssZejTYML2inYU5klx40AVXnSuxHaxBhjrxWFxXi3iJsvwgWYH
dgi9F0fFKRIuyuUGboxV82HQ8S7MetiOSQHShL8pyx6ocWF1Gs5YdGKR6r/r
Y234+tSEFPpacV91HlJth0SUPgtrvDkjuD/vPRdwj6YxVwn5vdvyKYKGF+KX
11/c9MuE3sk76Ox3E6IfM7Ci9RHGihtwfNQqetuNY6yQ36XvjqG4+wS2zxxP
0U2GnIlkyNjbMqLVkWIPpLlivxxjdr7Co0uX0XVYiXX5qlw7Q4JbD9ZDpKsU
w258wvTkO3iw3ZQKq+0ov8maSds1+aBvNzw/G/BWvhP/fOzLDymHER2wSPBi
nR+2V3wQrNvf7rPpZwYqS3W5TEeM+mM0eDBVQClfKxpOc6fKektOTc9B0SQF
Xngr4PsJU1m8ZjQHL5HhTEcxvhVy15HHSZAKr8cnu2rcmpGLvg0p4Etz6m5y
ZklMB77d/I53m9/B/4MUPT30Wd9gS5deEU6wV0bY7seJT5YcFDTnvkCGhRmj
W1xp4a9L0YnSPLb3OyyjzCm+bhDXTfRn/ZOx1PFwouMr8rYwT8Q3KVA6XozP
asxYFleCFR+NWSjrwo/p8uw5NoUGDVMpstqB9VNlWeadD5uKP9hwxJ1r6ryx
dJ9Ucr3JVJ9Rhw0SnmR2eQZsXhfXsuxjjOHEif/9f/8/WP+usxh3+bsHGQyO
W3dgSvyBtUfjAk6oehb0Pelx72WId7+d85L0Au8IDoUrcm5sJT5FCTj14lCO
Pyecq5/TEDzLnwuvWjE4zZ6xax35kVrMfqDKok3qHDzWhysipFk19w/+jBfq
xREJhpbb0et7GRqiPyHztDNfVJBW3W6ce9+M1gayPH1Xian/uPP9SF2mrbDl
UzkvWtV2IueFIrVq9Lk6y4KXMxewSVafDdsl6J7xC4P0rmNx4S9BoKMf0u3K
ILu7G4d/pCLhSzPU7URZ3P4IaVZNmGgh9PhbCbDwrIWHaiwUd/RgzTJlbveo
gSBUlCu2GjFvhCLf7ohFl5kFJ59V515xod5HG/DN/SJ4GksIOfYlJk5sxMm8
Ppwfb0mtzdJ0j2jDEEV9HuibgSvaVfi13pxb7orzTEshllYXwMFdgqMVtNg/
RZHntxnwiNYMis8YyUWm0nSxbMfuQ/VQ3i3ByceGceRWcX6RuYHCtlxcHrcX
o71OY339X3Ro3cK3FdfwQlKOZrck+fmKNU9VfoX4lmyMu/4SMsd+ojPfjW7Z
Rhwzuhq/LbKQHJkI53/CcCmyFa/Om3DA3xF42m9X4tYRc1DSuBW5r03xK+EJ
GoyfYJ1oJr7tl+CYWgcuLrGnqYEKs58q8+6BSqBvDvYNyUSFVCyOR4myZPox
zC2egN/3viBRW6jVp38hzq0B3yoaoG/VgY6L7VDcVoK6xlhU7ozCuLZCaOcp
8U6XFdc+C6C2uT+nawaw3mY3U95qs+b+HhxZMAkml+8hf2ANhqu/R7X3ehjm
PhQkSV7BGEhzwV472mwwZtRcFQZKedF8jvC6LjXojtXg6/PtuC6Rhefld1DU
5wAKmuphF34e+bV38GxqDPzCOqD8XZzm5s7cdUmFL0uWwkrnCLZKSXB4dB0s
s0MwsUSFsh6dyNgXg8wZSvyn8iK07X0RfPU5Lic60cBEhDXG+7Cm6y3+UbqH
dTox0Nj5AeEXM2He0oyRwauRaB+FOWfewPaSFZeK2/LISRO+GKjL0fLSnFdU
jeW2bow+rEntARW4WVKHg0I2sJHqRpq/FK8v6sTxu6L8dEiRv2bVYd6+P3h4
KRpyfg2Q+fITL2eI0d9LgkNVkuCQV47m5wZ8f1iF3lkqHDbIkTtaBUyQ/IpJ
sr24/jERu7cdgM5tS3Y01CDl7kmkOp9EuUEyXlp9R8SsNoTKSbHSUpWPdJV5
tlOeMeISvFQkxVmROVDs+o6K/i+xWzQehVs0uGe0GvskSbL7uCxnXu6E75Ib
6FugTKniXMituQP9/aUYu/0HoiruI//uH6QsUKFley7GVwp547Mi28e+wRZH
Ub6bo8qBjzth9jsNFnOUOP2dkBGuncEX8ecY/s6EgpeSvB2ag9vVpdjTrsoN
iyrg2LkJQ8RLMdCvAm9TqrFnixHdHW04RpgrH9XqMMhcj8l5thw5SZff1ipy
++5inFVaiY2jYqCQpsZ2207USD5GztJ1yJ60EsGhKbAw/YkuQ3se/TCMynFL
eOH6cAomadKmsw8j5vbhqo0xeLLsLSwOuTBYqDntqn9xOFOFWy+bcdorAyqY
aFPndRMsbD5CTPkiNm/7gj763ZAa0wy100Ys/2vEhx7dMBzvTFuzAdT8JM7z
zaZ0UAmktPcVXJsSITj6aTRcjV4JMlzE0XNeilYt3gxosmF1myn1ZCVp3ibJ
KcLfv1SexFBpax58Ycn5qn5kxmLma0/j4CA57lrZjBit31jk9A3zhVlGK3cq
Dy61Y9zeGnxs/QkxhXZIBT/Hw7Bc6G6owOphvXB8o0u/zaX4U3BNoLroiE/6
zTeJui+bBetz3sLFVpTjFlbgroIU75g7cm2gE/c/8eeFn8bUXirgORFJPpoq
7M9x9pTK8eFoXz3uXfAUybpGzNpaDR8xaZ4steIJgQfz/m6mVsdSLnnvwj6j
XkLRMwSODYH8XFiDQzlRyX+9lQWZ43sStibGeZnYRcd7LTsfF5q+zMPp0rTY
ghrf/+7v/w/Vah9F93HfT8btjj7uKRCP9HqwYXbc8Vl3Y/c30jP31XEvMzr5
TAqqStyoUJEQGqLG9UGDecpgA4879eX73TVQ9TTmrMoFtIpxos/xFjTOl+PC
GGUq3ZdlwD0nDhsozQTcQM+5aMSaC+frEAdW5g7n2PEz+XzCQNZ8CqK9/kTO
7jBmt+4fLHjvx8e1U7jhozZf1IhzyBpNbna15DeNNpg+MaHmyTHsPeHB3Ifm
VKg356Y30vzy8gn8i1QQHJAnKBcJxuMdwvsaJc9ohwZ4uz/H1cpqyC1owwYv
OWbmdaPNvREKe5uwvxGcdHsEn6lr0TyrB5tzhH4QUI4F1QsRdf8OGsQteUxG
lDeXyrHu0HD2j9DjMhkfxrctZPyDEdRUE2HTxU/oVTLkB1FJik2JgN7IDCRd
6MLC6p9wjGzEtrh86JUVwLOkEhMNLRgf5cGijaqUk57ENeOtufK2CBs3NkOy
V4ajwoxo0/IE2QrFuP9cl1fvXcBZmzMw6p2IpRXjEGFRClutF5h39C08KNSE
aUo0uFaLVat1KH9Mibu25OKo/y/YHPXjTzs9LpS7grNbc1C6QIS2jgnwqp8s
kN5ug7zw+8ju2AHXxhuCj7sm49WlWLjsNOH++ebsV6zGOY3DaSjU++wx4Rhj
eBWmr47CX+s6Xqx7hJKg8zjYmQ3zK11YatMFU3cp6sY8h2dqO5wcNFhwVYU6
wrzfskiG+8anYPmQ21hrnori7wVYV3AVFy50YvH0b1h6U4M3b9mxaLwV+7TE
Is04EaPq5DgoV4OL5sQgsNwbr5V+COJyD6L/mR9YuXYXtpiEoywxC4vfSPKA
QiuGnfqA5Y8c+fZtM/Q+BuPYg7dw/vodpqXlqBTqXfZKYd5Mq0aSjCGzDovS
N6MUG1PfY+HZc/jzeCrmGt3F7peH8B52WDS3CZMHSzJyjDx155VAr6cdy/+8
w6K2PWhVjcY+4f1ZnLwLi2dbId2ZjNdTriDqbasgM3MHJl6U5o0aFfqqluFa
SQpcRb3Yt0GZQeNisGPiUvwOv4ugAYZMDtDjiwM3MCNqHfT3FsCyQ4JDzoeh
cXIEUlJSsWuSFH8+fApb0bswFi/E8twLCBz1FWkWjnwWYEb/cGk+nC3KhucN
UJ7aissKanw3So/j6qU55EQc0nalwWOYKFsXyDH6YCI2iIiwd+l9XLIdgdrP
8di6LAeF18+jwjQW4U3fUezXjd7NZbjz6Ax6Eh5BPLACih7PUf32MoY+7IKE
mQqVA3uQeKov4zcI+OqwBoeuuonDc9egp7IWGkYVuH7mJxKV2uA24y4mphzB
4LZ87HUVYcXMAqyybcZiH22m/7Gg0l8pSj+Spb+DPretVOdmewf6XbDiFHkN
Dq+U4aa1Why8TZThb/KxO/I1ovdXYK6ZIs+dNGfvQxEmR5txR6wzW8utaXpa
hWar2yFmH4+U1W8Rm2pHf6EebDrWh1/8zTjpeBt+TlSmm6c2Vx9qwMD5v6AT
VInP2c/hJ5xrGtbVmHdRnUqNZtRrdGatpDrFB3RiuGE9xLt6cOz8K+j3sWP6
O2fmTPyMbe238eChFJ9d8GLJNAXmtOZjUU4BVl69hUlrz6C7/RtW2utzquEg
9pxy5PT36hzW5MQcJwumrtfhNWtp6pR9wcHMHDTPnYO4BldoLVuLp27fBVrP
5mD6LD3ePxTE5Tt1mduYB8Xn8rQs6cCtftpMynJn4wpPBtS6cPQEbV6bbMGu
EB+2z3Sm5V5n6rUr81B9McorVTluyFD2ixT6v4OA+5XtOEvHnenxmrT69hrx
z/JxZ5M0e2Ta0aA9GmNuffDZNdZYUDPwpyB01TXIn5bj4hwl3j9SiaolymS0
EVdXOTDs3lJavQVHj3Zk1Il23DYR5iqzNlQE5SA2RYExv+qg/Dwct9NvY9mG
TtxYrMTALWZUn+3BKVF+XDp8I9+MdmZIvhJV46rw4nixT/Sv7YIDCw75tM7c
lfig5JBnftItz/q1bt4rCh95Do17Ebd/0eL/vt//H6p//f9E2cS4XfXDPAe2
N3hVJ73zqNhcH7dv+g3P5uXjvV3DTLzm6of6XPvtlrypjwWK0jVZfcue+UW5
aK1MRlyoCie91OfZ7dX4UxqLgEmt6H+9HhErnuHC506UvRZmqhcf0Gioy6UJ
dnwQpsu3UQPYO203z7g4clmYLetumDP5qxqLZSx4elgp+mjdwPhxtfjc7xXW
+r3Fh66/WJ42gK2x06l2bDLPKijxpjAnXdL+g3qjbryaK8YdzhnIDaoXTA5Y
JmhvHwzrt8UQCWmHSnwPbMaI806PDWMjrGhz8Sc+BPUi/rY2K595MWdHP9on
63LhDXdm7HHmisE9mP6wAmJPqmCR1o6vspVwOe/LaXobaDPCkNvXewg1cD2N
x45gzn5DrpD5gt1dUux7yJozzOUYaVsp1L/dUH/QgT4eSlxa/xZa5QqsHtSK
Fj9pmv8qwun1EzFXV4W1p3/DtCUCdyRvYPTrbwg/LPTpYZWQ/jmbaanb+EG6
E1VPV0Lp8VrYPn2Dy2uz0W+CFUs0JtD1bQHGZV1D7Cd9zvozhgVawoxz8zEk
HXQ4UOgzGpc16Xe5FXf3dmFrP1EahqUKVjgdFoQkxuHqqGhsDHyIzJN5WOaf
ho6PyRh4WIz6t0ogKR4NP01zTjTT5c3QVLiK5WJx/Q047UjEOjQgdrciY7dK
M+iwDCcNy8aD9mIs0i9A87GRjLQby11FTkyXcqHi4DroFpbBdmsrvO7U4vHA
DIws6cGYjbLcW/Ia95coMSi6C4klipRTa0S87x18c+9B1ambaFRcjsNninE6
OAZHFn6AR/FBzP86U/BWdw1ufmyCwc4mlFuZ8uZqXb5+voZKHYG8HqlMlXpZ
rujzE6K60kwJUaAkPsNykDjHh/pT7rgtk53iMcvwBrRXxSGj8zx8396ESdU5
mOdFwka7Ar9nO3CPiwyPJrlAZm8LriU5M7T7D85lPsSSog3YGR2CxoFRMNpZ
gcXf4tBr2gdH/0oIn7FQ34b248UZ8bh17R5WyZvyxrp8tJd54Pow4MXEFOyU
0eOQ0RqsKDkIEc9aweIPpYiOqcS7hlMI29GCMWEOvCVhysN3LbBOrRA1P6ow
YlMIulZI0DtRg3dc7Lm1qgwD8iRpl6HAh8drMDfbhfvWdUD1bTwk1J4hSLME
T0orIBOgyXyBJtUlN2NSzwSc2LkJUfrH0TywEtUV2Qjor8vSgP5c0bcVl5Ra
4N4tw4ePq+E8KQZt1s1IzJfip/ga7PVU4qLzEtz+SZQTfRdycK0Po2QeYm1a
OmS3lGLxngZMetwBh62ivPIrF1+UIvFo/200H9qF+k25iP8lyx2StbhZIsNr
0rKUzxKhZ1wLDhxvRIGGLZ2DLdhxz47taWIc3fQNQW3qfCDkg+APEuwO+Y6x
zQ5MnDmDoR+8+KehH5NG29O5TJx/U3Iwwa4OpQoF2PXvGaMn7Wj6Soqj6r2p
FzORwaXTmBhiwaYFOhzjqMJXV6ZTO3w1HfoNpbmlCCU9iiCV0o3hi1V5fr0u
5x1So/ZzLfbXEPKCQxu+r3qLYVNL8XbKVUwoacbM98Lc0KDK+I8uvFOlwvex
tzDk3By4iozDpuMleD6hBS8DvBn5JZiXjyxllUwboo3qcDkkCuHnE9F4sxLO
cfEoeRYG9UEKmJrQK6hNscTOkYmCwrTXuO7gypYFXry8WIfBn5R5a5ka1whZ
+toaN4pWmzIiXZbx9ZUYk9OBN6GWVHbyoutwS0oZBND1hCpxpgDTg1T500SM
ca5SdFIbzs8b1Jl91pDBH9WZJvcJj8dJcNVURc7V/46kxfLYxH98bOJmCyRf
LIDN9Ao0XNUQZh0lvvipzx7PaVyc50nprRIMC9Kmqbc1dQ/14T41ZcbEvsaE
4jeY+fIgXl79gHK/CpwPkOSGVBGOmxWF8e/fYWqBKM939KCwZRhHvd9DvUcB
XFmnSv/2vsnHqvQTPR5aCgr+rvCa9b40/tWK/e4iztO8iqIGeIv+DfO8Oyz2
v/7/H6x/1/936Bq7v/XTjhPsuxCfslglNms7YmYN8HEfGZDi/mnhPK98v4GJ
Lese+Azy2ZO88dRryD3ry98/5Wgm487f3+zoO1SRn39rcGCqOQcb5yHJrAK9
Km+R3ZSFfiqOFJ0loNtRO276NYqyooFUXS3KuYqO/Czw5Vih/xdZaDGlLQde
NndgF0Nsvn4IcqkV2Dv1OZ4qy/KclQkHOLqy08eCuqsHsaxKg9JbjDl9pzzP
d6ryqIcuT/ZY8/HUNKjenyhocLvoE79nB1SFLDtNvw1PlzZicOgAzlpozHBh
/jxObxps9OTOeHehr5tz8WuhF71T5r6ncpyQ+Bu4+Q5DG9pw9VETlETsWDDZ
l2PCbDjA8CtGhFxCi/RPdB5SooqPJR+fNaObmQa3jlCmt7sGvf5UQ8VoI7YZ
f0DQMkvmJsvTuGIwh9iI88nfaAxrkON3wVUElctyp5MR59jfRpTeOXxLeYwz
794AXSJUT9PmE0MN7izOB+Ydx6Lm35jobEyzTQ+xZ5c6XQQjGNjaiWtb/HCs
UJ36VkM4IPgS7tmlI22rPN3ks5Cop8BLESIUfarBEU+/wD6rXNDvrRc0ra9h
8dgk7OpTAAOJS9jTEIpz5vnYd8mG7cPEuK8pGhHhouygBHdki/GRVj4mOC5D
VPZu3NerxPyxyly8PhOzivZha9J7rLfPROG2bOTl2PCAnj67/fU5BuYsqJPl
y1Arzt4wmsdMZegzvASGOio0DIhHZVgJgs4lY5PeFUjH3YBX2HVkfbuJ8BHa
VIw4hE0ZmTg4XZ2uoyR460EMPLvOQnTGedilJ+HkaSk2PBVwW1YQs001GFyj
yz9axrz10IaDvqnztYkhTdx8OPKoJePVK3HHpxchm6fxhJwBsyu/4mZUK0we
hEPEcA8OXm/C7LLXqAqNwo9eBx5wDuCfyy/wxugchmd8w4ovUdBsOI1tZ1Jx
K+U0/mm6At1+8QjxfoLyJa+xatwT1C74iJ5yZZacl2NXUA267GciYcUjPL6e
C51xXegf1gzrzY/Rea4Q9t51OPLgFl5ffImF/vH4G7EagJBxsgtQKWXGEbXD
6PXGmhFbPeg6SZW/Rh7H7bpfKDdIRKt1HF6kfoC+lCQVFVx5SFyM+bvFeDxa
mTv2WHOskAX2HvwFpdgCTFKR4Ni/CrSfG4XDY6WYcEqED6su4MTa93Bd8glj
tuvw29U+7JchwQB3aS6KGM4R4XL8WrwE6TNeYdl94TNep8pXgZrsmmRA90oN
TgoexaHHtDni/Q9cfN8Klz9/IVJgySXf+vJZjDhXucvzh1QmwkefwPPujZB9
9ReXPKU47+grNIyKx7lQWeZaCOf0Wz2KHfiDRbl2fLTf7n/Oj8/8LcWnv1yo
Hu7HG5p92GKsxk1eIozMVObW36ZcEOLHsNMG7Ln6E4c/KzEjRJRlDxRZl2rA
xrcS/PhGkvM9PVn8qg9Nf2jSaOJImilMpPGpkXQpbcb29kAuH7eXZlXzqXf6
M6LdonExIhRq3Xug9PkxrmSKML9vI+4m5WLAqlhYD06HVVIkBvbpgtsqZ8qZ
DWRIsj5jtrVBtY84D87pwMifbeg704l/zxqwKcCZyaNncl7OZH7K06PPnJUY
XXoE9V0ncXVaKy4ukKXNXzGmebXD4boUJn83QsDlZsGhqC2CcfdScMC1r9Dz
nZn9xYJB5XZUN+rF6jI5SlUKmPrThe+zvGgzW5/b9IRjVDyO2fsE3JUxiHs3
D+SAMHk2f+rHRXHW3PrhJ+yO/EXgcFOaLlRigLccA0Y3IviyBn0bOxFbIMuF
h5LxoV0Sc+sdBbPrFVDx6CWcPWNR+lOXjXpyNLR+ip0LDXi4R4Wh8z5B5bk4
H6+T4H3HQG71dmO/aT3oW1YLE98SyLkqcsnRLFSfKMWeh+JcoS7sL+8ipE+q
RvIzMZ4+P4jpRdvZ8noxo1smCKRH7E5orTvubVzZlDjIXz6hTNLH8+dd+/4n
1AbEH+0vFt+7dLeH16G5/13//w/Wv/v/NpuWPDX0eNM/w3GTx7WZvv3fn7/p
lhb1OCbPNy5Wz08sdpFDusfxWdFeksM3CmJW/fLxvW2A571mXFo+i0VDJDjV
yICYbs8DGib8qa3AaUNdGTawFPNypXiwaiFTNxvzpqwspze2wm6xOoP9nPm0
W4f1k3w52346E/MsuHfWCWQcXYMe41i0J7bBPeEzTi1+DiUlDeY7GnB4syzf
D2tBj5MLN6aZ00bPhwv2OXPnbBl2ivzAhBs2jPwdwLeHU5DTOVkwWc5d4JWi
AgenFXhmdgZmB7/i0f3fKPrjzFX5C1kVaM+j0134ps2d6ySVOXPuPayc/Bs2
dySFWfkN3DzuYfybWNw5loDRRxIhht9wPqFCle9fkH3qPlxGvYDFLVXe2OXL
yCXiPGqix89GYvzSR+iFRV2w/vQFc2d/gsHqXnjRmZOKbYlHDfCx1GLkTEk2
l/flzwkyFPSqsnlHD3oejYf85Ns4vucjjgtzUJ6zCeX9byEwbidOqQp9eJsY
/fWr0WItSqfoP7DJH0fJeeL0DS7AVGlznl3UBdVVf9D1ToQeqqmQK+/PR27W
DFT24kP/RmxZ8VQQk7AWYw/FYLPWJRSHd8Ltqyz/CsdPafttLKv5jAHBmuy8
I8olIR9QZ9WLmhGSzJysyO2L9VmVKMoz23x5vtqS08XlqZ10HY/u3sOzy8LM
9CQGpjnXEKRwE7ukU/B8TioWzOjFMSey7+Jl7FimzsTAX9iYUocH7mfg7/MC
XorHYVi5A19iH0NUIIroxokYGvsbff/W4FrHe6zNPIzQv5I0qxdjSLw8B/Sx
5bg5xWg3eYPkQEvG/hjMYUsceNdpIFc2GtJvpThRrsSIUHlObFWh+apmLJYS
MtzcUjTuVaTdLWeWJBlz31UpBnRdRtY6b+ycfR/ppul4uXwKNo6T5ukP3lwU
rk3ZWBOeWTOavUUOPDz+BiTznmPQ2+OYEn8CU3VFKRGYifFf7uJEzxJku5QL
1i14IWg5LGSFlU1oKH+CfNlkhLok4ETRMyjc/YiIbeq0ynyNv5UnoNPaBN1b
qdBwE8eqJhG8mvIM7wP0uT5NntXRQp5eu4W2c00ZEPcDRu+3wDQmARKiD9E8
/RJeT1fl3dRfiNX8AHkfCQbNEPpyeT+KB/vQ1d+ep2f+wDS793iypRIV7VFI
MS3D7Wn9GD2wD3Of29In3JNTE17jRrYs13jL0/6NHN8HFWDYv+P53oKhjzOw
M7cDd5z0uX+zFftsVOBdk0aMWqdPHWkLGmirMGBJHbyEme+6jTnNutfw4qzV
zK3rwYwDnRisFge7nZfgYlKH/UHlMFjwBP5h79Cz7RlkFFTYPNaPtkqjufCJ
NHduNOSej3JM0HqBI74OjInZRv3caUx+IE7xCmXazvqLoS7anN3yFbe+lMDE
rwYfxboQ5iBLwalKtD9QYvwtOVZXZuDpxwLU/6PH4j/eFNcUZZVZNwRdQeQe
cLliN5xzbXnqz1DObnTlxC2v8FfyJ5JHVUPUbQFeSv2Dgsc3MO/cNtxPnIWD
O65g6oET+P48HgW/JrF70kpWL7JlsrwUDcSVWFMjy+1vlVm70Y0T3y0no1wZ
cKUvjY+acKGpJF8vaMAvxwxo/63Dt6gy/JRUZMMWEw6SteWL32Jc8EMJlrGT
cNLbDzf/3BbU9DzHCTpwfpUJjyZIcYOTBiPOqvK0twb93xhyxOY+vNo+jqk1
3rz5aDRFRjny0wEHbolcw+iPy7mqxJGle9V5cLwDX5eZcaK+8P6GW1OrxJZz
3NT42EWBPXlKzHmcBcW7jRh4zwdP1bYK9IwzBbcHb8PZDhkW6PxF8FdF+p/v
gcvfu3imW4PaYy8wzasUPYalKNKw57oHA1l9oA//EeamMCszcl82Fow2ZJKa
Kl1/V2GGXCYgzIQrbmdj/rbXkDglzh1fvCiydCx9HwORw7MT214o+oipro9/
PuGal79PsPvST0qxcV7bYtbL23oUvl7mXl+6NXbszNn/3f/3/7D+fR8wPTXn
yYvAK24RLYbuXemiHuPm/PTM03JJvFF83ydFdKqPhqxScsSxZhhq/0WO7Fih
n/zA4olSnJCuRrMiF7b6CrX2pSQ/HHGjXdoU/qz9hNX987DizAtcLlThwFcb
mJc7hk07hZnTyY6+V5qgUf8D85JfQi5UhqdnKLE8PAlzfhbj6vkizFn5HQez
zFi1zoBX62zYJtSuT+/FWN1txAsvDXlFXYy/Q8VZqC3UQjFd1q14Ak/jHoHX
biOBaHCO97i9oYI1/ttwWSYKVYtqMUFTnU6TJbl5vgHLg6W4zrwMy++8RsuT
FtxY9xIX3lXg8Xg53ropSvvRe2FuUADZLnEObNKmQpAXZwtZWaomH5lWSgxv
MRIygQhDh/ei37QUpFyYD1PdLvTEVyLhizDbP21Fzjl5Wv4D3t0/l4OuqzEx
XJ51722YNDMWZ00sGSlkp9TbV6BfLEHr979xf+JwBgYJOMK8HVqXb+LdpFtQ
D+hCnNobHCj/iWVDtNldN4aWD4VcsacMKiqlyJBvx+0nWXAZXIu42Yq0cZNm
y0Jpxu01YY3vBXQvUE1KPJolGD4gEoEDG3E0x4fKV/xpcUao7Rr/ICspARdP
afDVpl9QPV8A+T+elFWZzO9nvPgyzI0bA6x5eeEuPlk8gEcX1OFyrS/CWy2R
frkQvXdDUHT5PQYsqoLfDWmOna5Mk7ktwtwnQzkh4+yolWSwfR5UnQqRflGE
vuzBhQOXUB9igjS/a/Aw+oSBUncx92IutIb8RaVeBbJeeWDOlggM+5OJBZ02
PKKnzxTnRIy8mIh5ou44F/kML8c6UjnBg1rfzdm/uAXLe524eO9vbHYR5+h0
BZ5seYPU/i+xLPE5NKYWo+533P9h7y2jsojbd226u7sbBEGl7/NUUcHubsXu
7k5sFLEDUEHFLjpEUBSkJFQEQQREaWmQ937eL/vr/rb3f6/nWuv+NmvWzD2/
6zqPY82aGVRunYZMx2CcFsvDgps34PkiBy7h0YhcmY4WNKIi9Q+iXxcjcbon
dVIWUWy8AttjfuKu6Ct0XDqHwrGSPFvzHp08jil+QXjYvQyN46dD4JwOOXdF
xttac1OrLF3dfyD/fRgEjaHw22nBzysVuWD0VdQ2pMLcpgqnCgswU1GdDwoN
eW+WC2PU+wmz3Z0dKZqUFPrnpL1qXF1Sh/tH3qJ8UDTqlgXhvlEDRhi24GNa
BdqvCa+TZBcKH2vycZsrrzSAmpLGTDk/kVWRlXBMEHLFgVT0WZyK4bF2nHhM
lVffy9C/NA8f77qzXUSRBTtvYMzTZRh5U4QxtwWM/9mPX21NOTVMihJzRInZ
rTAWE/ZFqSIl8lrgrijPpL/StO/5hcU9/dl35lpubvDm/BumDIyQYsI1EbY4
NuDtFVUuvvgX60T/wHV4CayjdNjHQ4VXilToKq/J06fSMc/vEabVZGNnmBF1
Sn04eqaQtawUmDNfh+eKZHk8WYYXzYx5br8ZIz6IUsf/LWTkvmDahXRceGsP
fdlPkJHQo69VOmKya6E0RYYpa5V5XVedxySbsNnImelbx3Fk5AhGJ7nQ5Z0d
LeIcOfOSOHXUtRhR1gFDv3qsrpCi4FQxnmQ/hOH6Euj5iVEi8jvm2vZgopcH
xVPIibNqkDQ8HaPPtmLUhE+wmpSKILs8WHeY8ViRA1U+piBvcxbixfOxcLU0
zfrY8HFpO5p1P2PBbylWvdWixGtNFpUcxO957YKgWzfw+NlhFI4Xx40ld+Dj
osrEeQpc9qoB+weIc+RrdS6ykuTVUiHrin/HFOF/8D7FgErGdhSkafP6aGP2
t3ak+cJB/LN6GNX6OXJY6kDGx1sJWVidgXsHM17Nlzd3KHFZpzx37PyF4uNC
Jg1/j5z6BMG4RyMFNQ0fBduunYHNqhasLevCrL4VmLhEiv7HR7Jh9AqePGrL
gfejMVxvK+50SXNUiRTl2mUpEfsX5v/KEKH5DA6e+ajtbkftxDYE/3uP6Zff
I1i7Dl2QZsdcJe455Eq9nZ+wIxbxgz+KC+JKG2PkFj73iOv9X9/vaytb1v+x
/77/vt/n/9LyzR7vPsQyL7pGp8VTVibBy398uveWpeLxF2x18Pi+JrMiWhEr
osHz+vnYNl2Gv15OokNMGTK/WbF53gSOuCzNSRXhCP6ejOPRjRh8WZ8VxjYc
OU/oHw81yHQtpjg+QL54BeRmvkdLkCrTPA05fdhPaO7rQviNBkw4VIE6F3Gu
ahV68U47que78miAIxUeuNDZzoGF94x57aQ5Yxp06FSiz+ybQna+LEe/OVEY
KDEB/U2jBckuBoKpSccEpgHHBb1nNeAStAUzVO+ho+IcSkfewpTHxWgpeI2x
g2/h4rZ8aC9tAV3taLlTj7dzZKjxwZFem4xoONCdN2xn8e9tLQ7ODwXHROLe
7gd451iB+BnPseJAMsyH2fCOo6hw2yj4mv/DvbYeDJ2kxyEX9bhyTjKeDJWk
vIXw3LKV6b0nE6YrQ6B69yaCmnJgUPgO+8reYrLWb2g3/UOoRAQqRtcj+oUI
W5u6sfOTC6OeW3ORhTIlwxS4/rAkR/y8gj5b85C3VYYzMky46F4F1l64ikuz
jVixTei8ksMw4GlIXO2FEMGC91dhnvEJf2dlYP2dv3h5VJw7qoRzbVUvdtWK
U3SGopBL9Gnb0If1qT7MmD6EXdNUuVOxC+fL+zOswJwmttnoe/E+7FRuobgk
B69nZyJJeO27F1gw/OQvTO6W59Arj9EqnGl5le1Qtn+EWOvXSFjwBHpuF2G7
+gCczm9An8AVyGwV5/q/npT8KEGHLDGm/WmG3lJt2o54h8faj5Ee34ql62qR
e+wMju1ah6tXrqB5cQC2BedhdZJwe0E0Cm8psSizAK3C/FktZJMzq8UZpdWG
3501eBKVhgVPniM+YhmstdoEjLHHjsD3GHO+DGvV6gQanWFQLtRm6Ml8zDov
SZ+P6nx4fQSWD1gB9UkhMFvyGYO+NCNhkTnrlqjz5PAAnNIIQe+W7yhfnouk
tCwcUU1BwMHVOBL1D7tl1BikKs647YP56bc6j5TuxKbLZQgo6UPVfznAtjuY
MteCRY9VWTjUiF0pdmxzFaWIcN5HHZXikMXNUL30FR5vHTm2qhHKrgm401qA
rvFPcWzSH3hP+IEuNyku3foVmXOfYrWZ8Nodk2DT/iS8P2dLCacJDF6gxTOl
A6gVl4x6zXuwHlAHvxeFmDbtIXq/vsJjCSWmFlchKK0A3V+eoL92KRbvUOAo
eVma2PyAwsM8jLlbhtWHlFk/W4XP3bT5Kl2WI2JkueCZLTc+lGO5hDWjmubw
jKMdOzeM5/0AMjFKiS8Da1D/VoTrb2qzNVPl/79H11MtRW1hXl5Qz8OW2Ex0
zRehr3IMbrzqwMYlrlw91onRDa688VyByYsdeNJJl06DzRi6VY1/Jxiwte0v
PtfVQnyoO89I6nD/v+twfKLFFXk2HLM8H8/HViPoSx1KXyjT74slnbIsqX/B
hg+nzKXmqOX8Gd6X/WzdeOuvLTVDNDn7vCfNukz48UUfPvPrz5PbWrHQ5iP+
nBTlqbwG5Aj5uv8odQ6TNqbDCuExpLci4/ILdPTcRMWUJJxe9RELC99C+5ws
V9hoUndQIa4sjYWk6AX8TLmEt380mHakEhfdnuP5KHGaVqny+ktJyv0+DYPr
IlBc+Qi/gp9jk8obwesxbYI9829ioPp7jJR7D4PASmyaYsjRr/Xo9usX8n7n
oVFNmPkq5oyzE2GXaS86Z/Zl4/a+HCRpwwtOsvw6R4ODVjsw6JQsY04qUH+e
M50+azFNUoylU2uwK/sVLqYUY09iJuL3/hCUr4gRPDI/KHhy7AJS+pVju6kY
DaLFaDezDNF2Omz748yHGeasTW5Ee34kFv16i+XDsxAXqMrkCDWWaxhxh8ZP
GJkcRuWhNLSc0OS1ai/u3KHFxIfa1DUVMEFuF3cMD8IAp4PxIlpTvTf493ra
eB1zaxgheJn1/ZLr/+lc+2/971X4/mw30xvvo5aH7/Qo92nxenb+Z4yX8R3v
WOWvcd82H8GcF6Mp8tWANXtV6XRGmuLqFkwKvY3mb3Kcf8GI904r8tp6XXo/
M2fXe0Wm3LVjo7gBDbbcxOlwTQbdNuOSgT8wcaEhX/+Q5fKZOjwbaMcEE1Wa
CT1WIqMeO1YK3XpOHZQO/kNOhS3jh6yk7t9RnL9Lk2FeIlzyoxbRGzpgFazM
e0UmdFjTjqRjzdDtluaFQ52I3pgNvXk3kWg8CstU/wq6brsKugKmCkpTnXHk
0SpsS12MjHk5qLr9BkElQmY3rofY3gaUyX7HpGRp6oa3omRUGT7UeFMzdxU9
SudTvY8JT8x6gndGqXj75jEO2/Rg2uhmjF9UDB5Qod+RMCxGPhZEi7DBWZS9
X77CTcgbB9dKEBtl2FIudJ9NGZhm9ApVLe9ww96U4qNb0DNL6OoFEXCMi0Lj
xYPYc20pZkvVIllPnCOeWfLiUz0G6zjQc605yyf/QtZSaY7Lq4OrijVn9QXL
3tizRP0X3i99C6s+/ajaLMvRj54LBhUUeG/cfQWKks9hteMKrM7dwpqgCGjU
VeJCn04smf4EJ+3rMei5ASNG2XHtZjfefanFuPX9eeq9GVdlKDHujzyTx/3C
pUkN2JVbCPmLYjQvKMLLa+fRgXoYBEgRq55i7Y1mRPc2Ykrde3RMLMHviysR
pzwVFmu6MLE7GixwQe3BQIxoi8QFx3JMyS+Dz2BZvuzfhGFVbyG7sgjT5dOh
NzUDybaFeB91Ca3DbqMxcSY6zgDfpROwwl6cMa/lmW/1FBeN5RgyvgsOl8rQ
nmDDBGVvbjzdg4VChrIquI0jKcGYFXQbgrQPODtW6JLP0mBtswX7lksgwX49
nA9nQ//9TRSXG3B4xkzeOJ2BL8/0cTI5TnDXuRhXxuYjaqYGXw+W5iqoovyO
ODfq/sP9lbnQc7qHvuEHMXHxdvQTupGNogI/HXKi2cqJfCRkwCDjI3ja/Q8i
z005QTkDEeuqUDDUhlrXxtJeTZwTk0RZ1CxOvRXHoVLegjUe+qy17MDKU3LU
2XgZ269NRcYZ4bFPPoiFw0QYXN8AxYhSHJujR8/ZX8HVpZDIVeDLfcugcXos
Ty3awOOtFrxfLEEP85fY5JuK1uc9UIycxDHCbNFtvobQ4O9wHpOPIc26PLNM
gUeNf+FJchtKPndi+kZJpizypfYhXfKeCo/mOnPzZyc++6lHiX+2tDAbwvD3
Azm/xp79HPozK1SXvXvUaD7cnKHj5fnSvg0TmqR4ab4l05RU+O2YHo+v1+Za
kV+Y/lCF/t/seM9+EL+88aFogS3f+RVBI7wLfp0GhMCYd1eZ84CmC3+bObPB
3oQx4hac9acc3v7FqCvUYOxETQ58as6JQsct0bCk7CZtFmRUwK3zNc64SdDy
lxzntuhx3kAzvvHpzyWrLRk7wZgeG8GwSd4UHezKCzMmsC1iA7OfDOblCEOW
sxsT3lYg19aFyct0GB31ENIZbZh9y5InxglnTl4eks4V4W/lH5yeIUVHeSH7
33flzhIlCq5+hcneQ1jeJxSf5klScZw+UzpV2b5Ih9kLmpBlKsOZg2z4S78Y
JQJlWDk1CrQND8M9YBSUl2nBNSdN8EVGH9o526D+Og1XJ7egfJU0a30k+SP4
F/qPqsLgL4ZM7xIykXU3VP+q8MUVb94rceEd9eGsnCLCnV3xeHKvAbUHJLio
jyjfqvZl/CZvDugwZWR1C/525WPlVWnuV7yFnUu7BEMrkgQX3O8I4jsrUXVv
KEMMDWnyvg2HH4vRy+oLuud+wXd3Vc4OlGJh/0NYteI8qjYtQm7NQqw8Uo3j
sgac0CzPtv4hOGgVgplp0dj2Ahx+ZBLXJ43jhlArBhVZUmKMTPxZsQXeJ1Z+
8tRRfOJ56PbN6LW3L7g3Zsm+/D+da/+t/71a8kfGNXH86ldOL865D3L75DHX
Kj66cZCCZ/WcVu9cmzXxGaVHUSTSDGzOwvzzdchbFYnll5fBTmIrDogFI3+X
Fm07yeQJrqxfMpyr+zpw6wp9vt73Ee8SfuN4kTYXflShspIDz6gqcbOSDL8s
M2OXjR0FfVRoNOshLgr723GPDeOfWLNa3osBS+x5pI86f1Y2o3qvsBfnGFAr
pRelTq14+1SBv2Y68vctKZq9+4tgZSXuSzPlmHQF9twoxdGrOTCdbwRxn02C
64YDMdsxDyed6+AfXCx07EcwPvgYdRJ/EDG4BUZxXRgqLs2EHnGurn6NFbOc
eN58Lm3FZDi80p6Dk/SpdbkTHlGy7DL5i4Fh3XinLk+zjmqoJD5F/xIpeixQ
5YoOa/bJbIT8ASnKj9PkyUeHcTXhEr6ninC2rBKfU5Wfh+px2eF36LoWiQrX
JIw9H4zLG29AxPkYFu4TYY+eO9uTDDhoXCbSfDTZ69GfAjM9/i2V5ttHNpRW
WMxD/qa8K9OLB3e9OXa8Fg+M7UTz9ilIfC0Xf609FPO+mlFyw2f0TCqFwZZf
WDchEFnTfmFAhjh3ybfhj7I4E6KjkXFIln0OebNv+lCqO46mdOpwPp0jw4uu
8lTO0WSeqyHb5r1FxzMRLjZW4eCZr/D15mnMGxiAEK1U3Jj6FiPbC6F/9Bqe
OdzB79VvsT7yLNKOlKP/qWpMjohBvUYmVAdOxBYxHRQEpONoQH9OOGPIQeuc
ealKhLn3g+C0/wqSj92D1+IyLH4hRckXseia5oL9YdfhcqcQ6ala3NQegZfS
tYj1VWbk+BeYdrUBMXnSbEn5iRP2RbgjdQ9jczPwfUsz9ELFqKrYgOGXHuDP
greoe/kAz6P64ZX0NWh/yMSYoE58uOBIu93WXFB4E9ad4XA4o0LZ0X9gVp2J
2iHPBd8T/grmiSSjJfUDOoIU6PirAr9cw7FZay4ODHyOy0fzkfpZmotW6/Cz
iRI11jTBcO5PXBwai+yck9hoWYXRO6xYUj2EX8OMWDDagscOl2G2ZQy0S9SZ
+dObMSWFOJcSiQjBLSweEyZI3ukDR/U72HI9FlInf6FgtxHFdUx5yekdRL5J
Mz6ZTAnOg46cHV8mzqdjlBpz3F9jW1gIRmSWIH6pCA0ne3NqgCa/DngFy2JL
YT6oMndwFbYs6sCSeTW4+rUcL5ykqWhpwKmSLnTqMWDFUWUm6VrzzzoBf4+R
od97CRqFeTInegSPK/Sh6Fgbmj1xYC4taPfBiHHlumyOd+fvDW5crG/OllPG
fOwsw+Z/elxl1oHuN8ocFm3BrrPOvHzNm/mXrTh+Wx3cg8TonSrP5V/UqHVT
l7UHxnPThSVMODiN1X18OWlPX+4Sa8FSow+of2vMLZa69G3SY9I3LR56JU0R
Vwm+GNqCKeE/4PlUjPOLjXj//iDKxNpw2DJ1uv7RZdkha+7fM5D3j9oySK4v
31lPYGacF9XfDWCaqS6XRLQjvsGNLWIOXD7nIcI6OnD6mCjdfB6iekITHuUq
sc1ThyryMgxdI8YZEVZ88VaMoi4f8HXkKjgcjMPsjAa4e47kx3g7qs5UZPNu
HfqW29H1spCd+43FPOfFAtcOd2wQzscRK+4KTp5cDNXcJTi4ewS+KunhlbMW
pvy+jB+LctHnvgJLFv7DEEEdNukaULNAh9Z3ZHjc1Yryh1xZeEeHV0+acICN
Kg+u6cXakY24eEuUbaoqvN01mktzt/Ox1khaadnTJ1+OzxZ1o9DuAOoPPRcs
2xQrMEzfjfO/lPhw9hBa3ha6zJxenHYx4jQ3SyZtt2LYXEsmq8hwUOptaCYX
IUg1H56xwzBX/Bgymjyh/+MY7gy9g+5XqVikmY4doTqMMXZmyzsvfrttwUpX
ScEYJYF3gP9Kb0nox34eVem5c8YQj4ehI6IGSHf+1///h5Rr05/n09Y5u86f
IXhVqv4uao72Ig+JfV4x11pEvJZrXvE+mr8zPsl/ACZ8fgLXzT+gaitJzliI
fnvv4eXAUtRbP4S92xtEjpfmnXO6/GvXCqemvjQ/NIFbZ/TlyHuK3CGtx0HT
vJlhJeSAo+JcMUef1RZajJhbhAEBN2Hk04xvnEzXHWO49bebkNtluGlqDdaF
NEOpswU7PFvw+4o8jzWL0qLfVxSftmOAhA4zqUuVa4MY3DCehy414klrForf
KDFhQjpyd7qh0bNFsNEpFNrfZPg4vBnLJzzEQd8ijJI04jDxYcL5ZUP8NmPp
Ok8mv+nHsCGa7L7WjNQaLaZUmXKhpDzV6uoQcFWfYj+aEH22Ggq2ppwUUo/u
U/VwGufKWVWKTNMQZnJnHUadtKZupS43fHqNxFIl9kYqsjBdOIdtzZh0QZWj
+zUhz60dr/xkGFevRrtnYvywbh+Ghd7GLX0THlVR4oXAEjy+KsK7Y1yoE+zF
fjXOnHrDmm8lbVjuI8dAQ2EerdJi6Fd1tqYexL8drt4Xr66IW7zmI3Tn96XC
r++YuSoZbyRfw1nIAuzWZ3G0Kc3l+/LEHlF+H5+Kl0lizAg2ZCBmc7T+Rh4/
MIk1Qr57sagIw4cq8881R1qtluP7FE1+Mh7H40UuhJ8WH30pw0V7Mfa8k6S7
6hXsKC3Gz6G6zGwows0Gf5S+2Yaxq0PQd0cZBrQrMHJ7GIz6KmPd3eeIF/0J
14VuLC7z59qEFiQpBWNdYiFc5h7FN9GjuDxZlCWaCkwcdRcxO1Igd6ke3knK
3DxSnbof3RjtZs0dWfKcbtqGEzVHkD5+Gl7ei0HJm79Q8dXk3KFvhXM1G8pD
6zD11UuU6Ybg44QpqPt2AiuOtmH6uncwnvANPnY18Bj8HfucVCh5QZynjgnz
X7EWov3iMGW3IRqjlmBxRhgqV0rybp680JE+YfrERwiXUkSYpgFmmOzFgpAE
fOknzrcx+qwJFuGIMzbs2Z0Fk7oI2DpHwFeqC8adI+jQMZCWO1w4uFGB/eJm
8I2iM5fm/8F/3jkR0CDJj7M+Y5NlIBoe3sG6Na+Rc/Aejpo2wuX+I4zQjMWJ
BbkQqVfnnfn9aGiaj3e7SzFpvSTXyafhcEEqxn8UMtJ4WdoZNeL4AlFeWGfK
ysrpfL1iGr8HCNjR0olXx3+gcEsXZJVUWWAjwY7aFsjbV6CxKhcDRjVgYacR
j/eX5qj7P7HaTY5bGvoyssGGuRdkqKmsxSmnBzBx0RB6PCK/6ZDifcdzW6gP
/5ra80zpYE4Vcu3v23LUcy/BBJdKXD6hwPs3tWn7RpWWemK8IMzQ13XqvN2q
R6NUISe3DKNmmg3FZ4/g8uNelHmpznf9hzL7xDguXqXL1UlyLO5qwXA3bQ4c
r8yi2jKon1djo50a3Q/YcnyVHV+s1+FJwyFMEJ/DJ2t96CtrzTg5Sbom/8HP
BDm6GWnSOVXoFubWjP3ozpALThQb48CmbRaUPFsK7y/irE6Lw9OAT3hk58TS
0EV0Oj2ZZ5cYc7GBG5vb3DnHaBgXO8lwRudppJ3pgLnaN6yJ2w+j2114dNud
T8SV+DjBmApGtqzJCoH74kBBfZwikk+KwatWDs+f3cAv9Q54Hj2G+oNG+OQ0
Dcm6/rg4YBIe7xkHm9Oi3OkpdPvSr8hsNuX7Kkea2Cvw8Yke7BLOmrQgVdZK
S7HfF13mRZpSMUiZ3Q/7099nNiXVfLnunDYjJlpywm8Thhn1YlxJHjTuHsXo
SYqYf+qFIGLEYzy6r83D5mbs8VGn2sEO6Nyvw1hVZa408uBKsVE8udier0dK
02iXBN8rmTPmWRsufryNoboy1JBLgOFxMVraatMjzJpXPqhRHj1QmZGI1WO+
CTKKvOIkzEZ76/lbxl5NWeDZmX/E61jYXg832/NRVlaH/vt83/+QCvD82W+l
ifqLQ9GSrs4/Ctxv+4RHr97/y9P/Q7OXaN4ML4s9+70HRc2MLwhZhoKPh/Fx
zlPkWf6AZVEqSsNl6d/+FEaZd/Bz8ze47wvHZ7P32Bk9kPfy9gt9fygPV5px
4yY9vv4uw4m9xpwbrs8/H7U42rEIrutykTOjBybbO7E9Up/JesI5oSHNs6PI
DjEnBi+U46/R0nTPb0PM6GZo/VHhubwsjM4pwsYSSZ552IHzB6X4QcGNFypU
uOSlIt9o1CB5jyxvP+7FmS0HsW9muiBk7wmolyQiLrYJUyaqM+mXFCu2eTGw
3pT295VZ+bofF03tQzXRXmT6/sYpKVH2mSPG7qO/cH1jMWztmjGW73Bz8z84
iJpTRlaUDc4V+L7Vhoui+1BJrAF39kpSwcODV1zlaFb7E0smCvd7LB2NEpn4
46LOA1cMOSpdn+mjS7DrahpeWEpz4LleTG2Nw/eD1yA2JQMK+60Z6OoqdLlP
2FPcCc+fDnwU6sk37Sq0mmvEdS8ETB9owbfn5PjXbzr8w3JiJbVjYo5OCcKV
3d3QataghqQOdxaUIsfsCRZJ/8L4JkVekBPlv7X6vCcuwtDEHPiZ3IX0vyZk
Gpkz9pwOU5b0QnNPD45linNL2i8obdGl3g5dvl4mLnTyPjwz3ZJbbKxYF61F
996+rE8Q56DEWlQIXcw8oxC1cjWobD2HFauGYhBE2DjYhaPkFRgvkQ017VTY
mCizeNcROEYW4kGHKbPe3cOnf+kYf8yUobIaDJgQCC3VNpzWU+TW7hZ8ic7B
+RZF/jGxI72HMedzfzY3CGfXVhN6teszPPYuzo73RetyH1RV38WzGars+Poa
s2Ij8UKuHEmh3+C2SZRLdzzHtyM7MG/0b7h1pODT2nUwyvYWDD3qK4jX+oR3
K18i6lQIJCpD8bs5FGEZ4Xjn+AzlFiFYNe8tpA/dQV37dpwanYeXJRkY6X0f
T1bEYtDCz7gRW4pr2Z/g35sIRzthns5JRtW5p8ixisCi3jzIrDBlefFQbkxy
4r/VGiyQtuH6h7p8sy8R77wqUbfJkPN1czFG6wz6hvkiOO4h9O5k4daFW5DP
24jmmcdQnpIBvWZZBg7qQ29dBU7Z8xfmAglGP3uO5xtOwHZrASTXaNBjlyLD
1xoy5oofyycuZ1xaH260kGdvqzhvUJrhjyoxv/oN1uem4nVTMNymvUKcazU+
X5Fi7WARDjrUg+t3W3DumgmdNniweGl/Kl814aBiTU7JM6beNxMuDzGhmK0N
i+P1OKzGliZu4A8vX37S9uLysypcN0CObT4/oPdGk5EOJlSfIs4gjwr4DGrH
yU//sMJPitXTHdj//lA6GlkyzEGBbbs7kXlTh6usxvFi4HZ26K+moaM9J/s5
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
fLs5s7Ia0Bj1DfaVMtzb9QsW5bzDaDMjTr7kwBvbFFm7Tpvbnrtw78M+VDo/
kM3zbems3J1Dkp056pw+W7aYcquzM3+4+zKtMJzWy8PZp5c/Q5bqsVFXhl1k
FVh1VJHZ77QYHWvKGY1/kLpUkTJXPPlGUY3TTLwwqkIPk7PiYS0hKuH5A+GX
1AHMvSjDrqMCuS1zJM8NdaecgjKn7+3Cll7WrHRW55xZ6rSMMeXmXmasetOf
pmlD+SBKl7ceq7BTQ5IF2+QZlyLHJ2PN+GyyMsW2pTAbHIX+ZlORvy0TtTZy
9L5pyJGn3eiwS5tvNuvwbLwl91sr8W/xIugndhe+RFkKTtKD0V2xFFMuf8Hl
Se9xJjoVoq3ZWBV+F8pdkrHT4BdmOUsxsE8ZMs9oUVo6kF1NunCutxOfaMrS
OVifCY/7c98CH6wRbcnSeaIs/OkNUeVfi4xRzpdFi17v8v9iUJ1WM3t+yvfo
JT5ev2pu/f/uo//O//u5uybWZ9h+nbQXlwz9C/v9879BLdGNLqv97rpPFVvG
jxb/uCfKSErbjZJ+Puw/Ro4/BE2iwYQR+WZUu+7DyHxNjlweD5/cx5h+Uo3D
U6WpKaXBiLHg1JszmTggmpeXr2eHggtLZrpw6arhnPWyBvPfHhYuRozNQPZ7
Qe9roaAX4ye4CvKZT9SthEvVHwWNiADsHh0D94+HMdgxFxU+BxHUOwua+Zkw
O3cVP8qPYvnmU7hQvxsGi0ajxuUI1M224Gj/VKQHXcfgvRF4W5IurJYqE59t
yczs7K+euTFNVeyj6pGxsv6C/zC/iZn1l1ZkTtt4MfNJl5bM5O1PMvcGt4l/
fSoVhst2CupbQ/Hh8UOMUXuCRa/VmHhfm95vviLgRjs8F9djwsJfeF70HcUb
/2HiXR0mqtXB4rkyR8924+Jab+4PseQSc0cW20kY/8AzaESex50FR+Dg/QLn
HtRj2n0ZHt5nwvSBOZh4+o3w/OxuHFpjzs+BFrzxUpsxLoUIu3QWQx5exNiR
+ah5bcXz6wfwzXZLeuQ9Q6jpebyfVi6kLa7KSL+xN1Nh81Zhw6oW4cbonpkv
i2TEvokeEIWm4lTDRTipF+HIgO9IvJCLXKMY3NxZgwnG3tz3+h4+FFXgQaIt
I1oN2CdVnQ6CI5NWONKlxJQ/W/Q5qpcj222imLl8PE+rWHLTOWXqBdTjmG8b
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
i8eHfkPvwztYDJbl8xRNBhvb8X2oCee4v8ZvaceoK0zDs83KHH8kHQ13uuDs
jxxETD+L+Vu8oBW6Dh7qt5B94DqUbxxEzdktuD5eibIJavQPrYLdQTVqdc5B
VJkqzYQHmLIgDRWd5Li3LIS6chE8+9WL3Uc60/aEPh21bsPwcCVsWtVY5arN
KxcfYP6JVtgM12fMyic48a8M3ZwsafDsJXa83S55u/uFYN8zC5E/N0OZAbC2
XI1ZvRMQVPcGbVShl/SYtYwe4vKnHJglX4JonyMdHEexZFwk87basXuKClVz
GiB8yIVyHy+63rThlvUpeJeegyu+d3A4vgY2xu9weo4dHUVhvGnVgufrahBm
Kkd8zIGL/E9YPfPmW1Nt9vQvR3V5M3xj3fhrkS1bc6zZkqHAZpH3/773zoYg
BQ4QfiPniS/XTpZ2sagCVFd9we67mmxy+oW/i2pQkqbGJxV27GtoT++Bndmm
ocBDjz4j1r4cGn1r8GJTKaL9xuCtriYM7FPRovUBk6b9RJFpA/Ydv4G0pWlY
HK6D1G3mmRHTY0Na2vSFOW0uYo19QUIfjTgUnfqL3sYq7LpBh+dabal01Jlp
4wN4yMiGXgHOrEuvwxR1LQY+CuGmEG/2GiLmFXNt3p/bgFovqU+/Veeasl+o
NWuGyVYHLhDJM9phG5I8Oom1L5sI9hEOeLR9o9DguUeiragoCDZNwuiEMoSG
WTDEswQ/tZTY+VAIX7w2ole5Mu+1/UHaCXPm3NQnA43o/8mTtz7b0Km+Ci2f
s6XefQIjQ+7i0TAJPs24iMsXEzDhkQuudH8urr/iJ5qSbSn5PHC15IyPl+TQ
zzkSj2v/G3tv/VRV+HB9093d3d15zlqkGCio2Iqt2I3d3d2JhR102o2iAgpI
CIKiAhYlIvCc7/3T/Rc893u/j2vmzJyZM2dm7+va11qfdfY+e1/KmWUYKrga
YyDUe6cm7G93VLhhzB3hgaRRyFGtgfeT/WidlCRc7a0KW10HJCTPQMD7TPjn
irJmLOi1JoJR1bYcqdAK51+GfPbakHHL2zFugAqnTVSk8JYW55124F1/M87o
bULbt0GsSbJj5NWHQO1trBvYhAVTWjEnSZX7bovyWVKL47Xf4e+aH6gaacTE
N2SQuhPnftKk3npbZgzx5NTrqkxWaoV3eR1kRzXgfq0i73zSov/WJgxJ0+Kv
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
GD/lFaKXyjFsvjQl17+DW3wnDt3owo/kTCR1NWNSuxnTaqWpYVSKGT99ONIl
kOFdW3Dg4yZsbg9FD69aYWPIQQx1vQVBax5meGmyfo8yh81txGvvWrx/7MQ2
oxg2+agwfXc5pB+9hk+VAvcV29DDTIUdqX8x94AVQ/vb0Nndk+E/3BkUpEXh
9t/wOncPKQlNWOOdAZmq3ZBwy0LLsjxcG1L4X89sf9BxAzdSCqGZ9gpuBRLM
aZfnfm9LHn8QxiOXZFna/gqVayT50rYJG/bcxkojeX5a4sbXTm1onPsF9U4y
jItJRFTRC7xd2ohfba9hKzRhfGAI1yf7caGTLXWjZfnoyFsMHfYaSsJbWDTk
M56/3IIlZqUCiYYJMNFsQ+bvYpjU/0Lm6TZ4R6lybLA6T53y4NyxoSxLegvX
AyYIuDhHMDZuXY7ejyGCy+qXBDOtzHKMvq8RnkmygmDkNGRHiPr7DGOm2+ty
ygh5yl4zp/WBUG60VuPwYX/gH/oTRlZmvFDvyyYlJ14X5cWyXuZcq5qGbg0P
Ye7anJzjdr2F/TuWC80fDQ0cuqMh59a7l0JrvILhYmXq7/mNTuOFuDUjHUdu
arHxqgF1yoy5facNY4+p8EGSPe1mBjJ1kh9dRBk5duAlyHWchr3FOwzfLs76
J83gH0NeutGT1x84UkLvK1KDG/GoNR9OV+5gjWg+foXfwbGoZiQv02SPvoa0
tpHjkzY3hn5wYc++bzB9TgG65r9B16nXUBxZjhTruyjtaQuF2YNh3ykG7cW+
GLrfhvfMHaks58Dkgz780CnkECt1bvF/Dx8VPZ6ZR3Y5ONHgXRVOWcixbL8O
C/NfY+ZKcUYY2PNvnR3Ng2UZL+LfagdxDlP15gRnZx6//h3R7u6cXTSZo8J7
sr3bgrmzlJndEchyhHK06UC+M+jBlZUjuLvBnfFPgyh3yY1BP5XY0e7BH4EW
dJr0Abcfd8JYNJ4bMjV5YIaoJ2cIeDZUwMl9OtGe2IX+Ik50aG6B9q5fUNlp
xpvbXdknQ5ttumI8e/Ynyuu/oFZHjBMimvAxx4zJ3w05f7YUjTP0KO7mwtnP
Y/j61mj+9O7J1KMOjJtrwn73jehoqs71ltacPTiEuxTVuG+OJheZqfNeuRs3
h6tzX7I6GerP4EU9+czPhmVzzal0K4AHslyYF6nCRc3K7HhpzFEcxLVnjCi9
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
zCboDruH9slyTMrbiEInZ0i2vxKOshmMpSr30K9Rh2O7BnCCjQpHj/2Gab2U
uTlel3a/rDjVU4fdA5R4bcZnyH9/BvMFJSgVeWRisDJHSUlSR/0hvu3uxOfi
NFzIPojXpl24YqzIj3pqojHRYYGnKndbXsWp7TlwcVenmXI/Ou624Nqa/WhM
L0b+By2O2lqPFFUxLtT7g3ubcuDgrspLJ034UOSdA0N1efH5MTzZPwrGfSfD
a7o4v74Rp+qfu2C3HBOW6fPO2hDeC4jlek89trfJ8sIRWR4e4sX+Om485q/E
jGAFpok6lG2EKzWlfLi0UI1VPiZca6TKpNW/Md/pE1R+3MDJI4vxS6NS2N5v
rDCje1t2co/t2YFTd+Qsnzo8ILGtQmDkZyWsPOsrDFzfKBg2dIbw1cNBwja1
iwGNgdMDV5hkCStPbkFpjxfoqdAILlJh4m1dTnlcDUmTF1DcL82/fVJQ5qjM
qAgjLjxhxUOTo3nrCzl/jDxvPBFjZo03VWKCWK4ZyF3lhjRYYcD0QlXOKbLk
nIhAzle15n5xGdqGN0Pb2ZPXNN04UsQF4gO7UTFQip0vP2BjkRgHhZSiZNhe
FLnUYvXmKugezEJZ6EfoDpbisS4JTnVqgbuqFL9nydPtrzRb1CRZXSvP1Q8e
YNONJFSsOgkqRMNu1Q5Y+z/HGW8ZxgZo07hJh1mLzCj5owdDgoczR13InGnh
PGjYn08+2fCiWA0Uh2oyJtKPH9/5ca6HB/N//oLFHznmeqmyddl3uPnqct6m
gTScbc+0JiU2LTXiiHAF2nz8ibh+1pzmOobf9KN5Z+gwNt2KYXq0GxMO2PEp
DXj5pCX15LTpf1OM7ufV+OOHBift0OPCRUb8dkyOLVVePOswgj1H9mahjpDv
7cBJb015xki0liVN+FHOjin3jHlOS437pNvgZ5cP9289KegTRvs4Z14eGMjN
ni68NlqOdaMakLDLjnNrRPt8Sofjqo2oKQ6uSxPQ2d+dbpKR3B88jU+Ko+hu
50J/JX1KHVNn4A4FztD+gdjRErSWMabkZdF+N7nx+1gHOpmIkWuM2F4pRoHQ
kUflJRgpYhfNcn1azVLlqy5T/paXocstVd74Kcv3T6R4fp8idyppcL+kFG9P
NuDIVb4UpBtwrbkv6+8os2n0JwzaLMvYc268c0ma0/LWY/2IW3jQro5vEz/k
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
gbTeDHzxkcKtlikSjW6i90tzabOcOrmM8JP+yUTa820/Deieowcm58g5IZNu
XRSHgIAObvIo4a4mN0RVYslD6xOtL8unVf384G7XxlcvJ5gk2IFP8g/xJ/Bg
7PdHkjX4RYHdPHhY9p7Wi3DCeOkk7TspDJ1tc/CUvS1m9Qe6zc6NapXGkN6o
gKSvPDAY5cYvOxP8cFfCjlgp7N/ujhXBDvB/J4kuDl1U1FrDfb0Ojs4hlNxf
i5Kj3qg0sEKZhRicYvpoiYEmTKxtcV/CEYtXrcO+sQ2QHPbD/Csr8C3hIOS/
7saG+iNQttiEdeY6MDRUwN5X1lDusoDGqAxkFKeBR1cUUfmXabpDNan4KmOO
VR2tFWygqotv6HRUEb3P66emTk2ULi+l0wfiyelnP+1Q66Ms1yayE5yktYG1
JBDOC4XFEgjldEe9jTZGDj0kI6dhmrZsPi60MFDslUJda5IyQz08s8383Z2i
UpscZ5SGZl74s8Uh5NUulp/WpTQJqSqHTTkTTPeYE+nbLvil9YaIMMRFQ9KG
ky6mfcoMe+lNt23/1bL/tJ7+5S//k/h3fYB/jxuf1tO2JVvnMr4Eeth5H/5g
l7Zr5///POx/z6mVmMSlRN/k/H/vq+VSZSxfdtru6tQsxkvzSvstZ7iZVa4P
M0JLnzl+iwjOiiu/lTmluIVUNmeSzeK39KlJi6Ybb6WmeaHksPYxxZnuIfMl
RXSk/B7Z39WjzfXpTsubWp1Mmw876ofHZdkWiZCB0ksnfvcQesafS6WvX5LN
qBzMuzdh0sccs9hdKy6QE2cCubDux2uS7RwkuwM62Lu/ne4MS+F2DheMo+5S
zaVaWmn3nX7O48GaQHUkZxjgu5gyYhrNIWwkAw4jJaSwzPHRiIkdIYI4GyiL
2EJ7FN5qJtHVNbRh8Dvli32mkLRBEtr+h9J4MsmIwYWQkGRaLdZI9zw48eLb
N7a+KUGiXgYdgwIYSZiBAWsf6D4XwMUFXJi+rpfEGWxvOM4DuqgCDXZGyHWX
xfeQb/TFJJ5GFwrDQpMTJXnFtHffBWIGa9LE/RSSNukiRZVEGvxWQjytqqjI
GqfN6wdJfaUohB1FkLaBC/7l7ng06oTTWhrIibVCobk5bOyk4VwhD295eWz6
zAXvBfyITRmg/S9fUchqdyQ92o9XUm54zNSHYrEk9DpFsUSkkSJXNJG5wWfi
GeYB5109GC02wGPlH/TUmwMRtl3Ua32Xuuc9IsH3o8Tl3UsB4Z108fcLMrnU
SnEHRcHV0UoOac8oRVQAfZO6+KwjhydWLaT2JJNsM0Wx8ioL5TMWwrbHHCuT
uIE6IawKkEBL6DjV6X2mQq5cOvbrFTmzs0NxeBtpq3ZScnwF2Zn005VsHjTf
H6Z8UVvYX9bGvTXaOLtPFtm6VsjLn4YdSzUR0rsEJ/cdxv09K6BZpYNbpIU3
Z8zREGaKm6uswLFWDBOD+phjaId1S50wpqcPpVvttMBLBP754shw5sLwK3b2
2VdMlbaryItrM62TvEiVo6vogc1ZEs9Moqc+Ymj9oIxdCuwMwD9BO1kGYMVY
4MaUNMZ131NgQh+t7FEFc4kt1hvoInDDF2ruGCXf0SkqNzPD6ewJCnyeTWOG
U6S7WwD8RQKo3CqAhL1DNHuoigSSP5H2bi60v/1O74N/Ut9JNXwzMENUlSQW
+SogW2wT1i5fiehfcuBeKYDvxSq4NSGIkr0KiHrjgG1xekgwUsBNByl4n+XG
WR4bxFotwmbfBZhRvQxcTZsRUbcMdzbKYNkoP04xXCGxaRqCZAAzjhlYbw84
JWng4jZFlMvZQKE0EBt7GPCt6ySruVLgTuSHnkAFjdSNU0HnD1ogKYPNX9hz
v3GMhFZcJI+imyQs00Jp6gKIezZOIY++UoCUFjQiSuiSpxQ07R0hWm8O4yYB
VLdo4+fZX+TQneFULHkqu/BWBStjqaKjueDVTEvFFZnHDpowJSJCmTYdQayt
TOE0HtV6hxaWjEPwxta0V6uV7HlmL2Mkje9jvEpex/j3HuZ/1zj5u67/X/7y
38e/ueBU5PVk7XYT+yPRAQ6xVSGZDvGCTpc2b3V8Eu6V/VzEJat5swkde3yX
jsbvI9X1D4hDpILODw5S6msD/FlXS8stlNCfyA2tW4voVhLYnWIBDT5+SPPq
19EGh5W0ovA2bT6fQNva5SF4SB+z2rmQz60GjR6CX5wyBtq1IN4wRmvWd5Pu
wWK6OruIan4KoWSxIV7NMMKlLRJ4oSiFV9zGmH7eCFtcRZBbroMtHmpYz6WD
xQ0qeHZSEYU2wyRyY5j6FUcpPeIFre54TXw3uqhKqIoehEfTGWwlh/GbdMw/
jrwzE4l/fjP9vsmLHKvP1L7bDB7FXsj0AJjZDoimaUheooQ1/4yRiaco+M1k
0BDvhdRZlig7xItfH+VwaGY7aQ+PUAnHb7pz8gUtXtRKnTsi6LX9MmKIFpK6
bTypSL4jgdsKKPtih6hebbQ+6KVZL9VxJEIe3+d30I4BJi65LYHOCks0N/aT
S10smW4cpLkuJtj7UB2WKcLgzRLE4TQZFF3jgVGbKR5NbcUM/dlQ7LBDtJEG
BsZZqOaSxFKvPHJ5xIOP8+ch4bYf5jV64h9VZThe1sTxzbLg9PlG61VTaNKk
iJIfCKO0lhsGxz7SUb4uSrVUAqteGotcOmi3mD4Cl1vg32sKk28NU0VwE2nM
YUFnyzTcltGDw79rvvV/pzxPTvQ9UMP5NknsSsslqW8nqXN2DL3wfE24l0D1
Wx7Qqs/XyOZ4M/HVCEHNeYKi3+ojwdMDLk6zsbWYA32jXCiJVUaAiwHOMlxg
/mE7vhavgdY2FiaOzYBdpzVsD2hi4LInPmnII0BaBNdZBNNoTbR5aKF3Ux+t
/95LohckMNAgB8MVVgh4I4Vr8gWU75ZNzJAjNHP/OuL+k0J2fb9JJlIZRYwx
KorLp/PPa+mFojFKRKwRu90A0UMmCCVumKiIoChBDh/K+bBm3W9as1gMdlGj
VKwngQwbQRxPFMafbml2RhqhMz/bae8Vcbxz0IBQWy9NdHFA1Pkn+d1ooNI0
A7QXsbC9WwNHimVxrMYVytozYblnN5zMlkDM1winC8zA/0cTp3g4UXaKPZ82
KkMzWxplugJYIviDLDK0wTsyE14tOnjNnjMl4zaYL22DJ4aiWH1cEKP3FJDI
54DJAGC6nx7eP7EAY8AWkk1GKJnQQZabDe55u0MlyR4P0zxxdbkiHqe209hi
PtRGCEFzzSSpyDXT2MX7FBD2hYYPSOHX4hpKvVJAue+yaGnhFxJnOkP/uAV4
Kzhx97Yi9o9aoKveFH2Pwuha0JrsTREBWVtWXnHM3PmVKa32T5rN1bsOUexY
cG+le3rVtu3Mew9nsqy2HWe+6+hxmNwn6LBpDX+6btr2v+f5//KX/wO469yb
cnm08OXCOxNpjxP5HSryWjNcou+yfJX1HV9qfnNcd0YxK/uouJPH8210yUwF
5yQ5cb94kBzPmWNNZgO5vTNApJYVvMXvUI3iE3r48TVdznhHI6J3qDopjp7n
l9ODkxUkLs+BI+ZNRDmFFMzNhVPNUhiP0EcY28cvrignIUlf+tx1kE6436Eg
qxoKvTMN2h6mKDhTSDcKK+ja4mYyXDRODj7CWKgrA11jSbzWVkfSPUX0CfHi
q48Qtgx1kObjNso2j6Zm2+M05vmSjM+VkPKS/4e9t3zLKnq3f+nu7u7up+9B
iAgoCArY3d1diKLYjYWKiYIB0qUiiggogoiUCAgCAgIi0vz47vMXnBf77H2u
H59Xz6u15pzPuu4xxrrWvOfYWKKS6MyGD+R4PJb04sppS9VzUrMqpf1opqlD
gsioM4NuEgc86cXw+ueLdzMssKDZFdsSmSir04Z7rwtq2b5oOqePpYVayBzk
wyk5WciKSMNJt49GptZRUvwOyqmOo5+ywlgfp4LeSfIQcRSA5nZtFL6xgvfp
Mf/wwQ4j2iU00l5CH/rMkGBvj0/z9bDz1D0K7vCluJ+v6FeIOcxW9hNn4UWK
yH9Dkgbi+HBBBY+MTfDEKwDllesg2uuNbRJmkFfxhoeUKW4ZyqPM2AJPpk5D
4slgKOWxsfqeIhZrNlPYEQkIufBjnlY1DdRJ46f6IPmGCCBrwTD5XRqiXfMd
kXVPH4gVwPbL6qhK+kUFt2Xw+IkUqop6aPNFIUyVVoeVuwPuh/0g85N51Pae
H0vWOyKt2xpb9t6gdba5tONfMVnezqLVjNv0zDWfvrePUNhOGVQNGmKGsiXe
xGpC7xQXQ+6WmMzWAh8buOg7AWGKgbjI5WIwKwhpKsugxXPFbgc2ziwzQW2S
EsKFnCHWKYOpG35QLU8M6i81gHprGLdow3quPMJLleE7oonMfBU8tq+jv5dz
SXjFYaLwNZRbXUQCAm/ovexXilAfIMP4cpK3fkmOMh+oal0hPSx6T3oHbaHY
A6i38sH/xi+Kc5PFzpUyMPjhhI7VE7HgsdhYjhZA88NOCl7SSrdMhODoqYxF
r4WhVyUFrcSxzK4kBQnzEdL+qIDivcIQsXQe84ruCIUFJPT1kcKaivU7PFAT
NQ2nt03CifvaMF9nDt+r+uAECKErSRwlut205+EodVeoQE1DC9urTOCuCGTl
ySDrkyNWbDfCYJ82qoStsa2Lif6xcesE8HBuwB0P97LhFGuJhBd6WGomhO6I
NjJ8JQ/1aFVEvFfGRB05LN07TJuEi8n/ZzmtUR6hjxlfyfpmN1kGieCbnBrW
t1gh118ATmWDtEU7mn7+1EGX/zJoZ4XAxX4VAjv9wFf1gUSD+LNWBBtm2ebt
5tZRM+fdQmVW1ZI37POJu9Nyq1awXB66pjGrLVnz5sixqn3kOMvaF3Hy56zi
mJQuZVlHhqVGya0f1/9xxvlfQGXJCWZ7y620k91Z7GQPE+4lFQPu9el2nCcr
F2SkD5/jdgwac0lra0ZU+iDn2e7p5DaWpTaqGaIjWxBPr/SQ8qoBcv3xhR4e
PE+XH58igzBx/BjLrrPnvKTo0BF6S3ZInCaE24baEMVnErF6SL3uZRRh8Iva
S51xu1AR/J/ukEObDimpTSSh4EMUzgynI525dO3nGyq4/JnWfufHqb4h2rdH
EvP9pKG4pp0OBOWTiasQ0CABsQcdlBn+lEbF4yhz2wc6O+cjPZUVxR/hETq8
9x09TjxOvK5H9JhfFOq3LPFBSxFSOaIIePebdoq2U3p5ERV8+UVYMESbD8jh
OrOGhj0SyPqXAu4JcPHxvQOyI81RcNoEdx4YgQ6rYLQxhUSL02l6mB30z5gg
bsEJCryuRwPxx0hlx29yELJCr5Uj/sao40SFJSwr7HHa2wcNkWoQWiuFzek/
yc1rrD738OFX6036KZRPOv4VZJWWTLevCWJr8ggpPRFFzBkdcKJ7iRssjwIZ
Ezj5MnD96gzcusVG+nlXqFatxrFXjlBunwCrx7pYv0oFbr9V8P2ZGqy2GeHb
9j6ynF1JYseSaOtY7R7ZVkK1ly/SZMc8Whb+hE4/EsQO76lw7bPFrFoT8Px4
0E+wxeZ1/NirK437vYLgT/lGqT1t1P3WCK+2iuHM+o/0qCmTsm1e0PruD/R4
ciGJBRTSWYVcMnz9kcJWFdKi1F4SbGogBe5rYvxpoVY+FdSPPQF3yuRxfnkg
MjqC4cNaBeW3M1ApNg1KTDtUz9OAQYYFpkjI4SlbCIu/1dIU9z/kubyL9BK0
0FHkBu8NengtpA5pCw4yfCzwOYIPK0aFENwqhrwreZTQdJhq918ixqcD9MTx
BRXYO2C5jjw6pD+Qn5s0/rhU083KBDI4Wkv1x2WQZyIBviBNGEXJw+SbOAZu
WMJm4TRkbPTCH6GlOBFkAl2neoo20sDHDwpg92pi3wVVOPpK4S9TAYkjdWQj
UUXqEeKYMekv+SrwIS9bCCWduhAyNEcgvyGcOKpoXM2F3lpfXM3TRvGwEj7/
ccJJOx6alC3wwkIYLkUKeFNqgeQEO6Qa2CFJ1AjJ8ebYdN0I1f1S2FnDQ6Sr
PMT4jSB+yRanX2rh2W4TaN8UQsAeAeisNkO+oT64GxXwULqNpnc3EddfAi7z
60hu8g9S3C2HsgYxFA3pw6bVBPXntJHsII7dMSroCrRD9BQeOv85Yr2INfTv
GsO+SxSSs5xQYT4RTTGBuOYkDuO/e3krjx7POhHgyHUsGOauG1XMsL93i7N6
0RWOn+R6zklxD87uH4c5V59GsDcMCrHreJ6cU1HbOJ/fBbAX1K/msKWiWZEf
YlJfjh4Y1/9xxvlfwLsNGswjpfxpzRd7WO8XSXG3/G7lpF5IZt9cnsyeahye
sW/lB86KNYYcRtd7blWJbpblZj7OwsYaSs2Th86JKNpdcIgWXbtI3b2F1K9e
QzIbGinRQwKVz+vo+RF+SAjI4RhpI8C9jVY+eUh5J67RVd18mjSnlrSc68mx
Io/umcXRgsmZFBidQhfFlhDrYSIt3iCPhVnK0H2hiLAKKSQ+V8Y9wxG6BkEo
rftFxVRBzS9lwZwgiT5tGUgjk4Lmx1PCxxJK1cmi96qd1PtYETEivRTs+JLk
h6pp/oRR4vYbQHilCoqrlBF/XA0PRkWRdLGSnht20LG5fJhcNUKY+pYU5z6m
+rX8eJ9qg4wuVUh6tdMSvzqyUhNG7Npqaqm9R/pnEmiR1F+aOVhD+++EUeJH
Jt0duUaf74nguY4J5t5vo9dKI2T7SA+Zn/QR6qIOX2kRnFeeAsOVJsi7XUJf
o7sp7+sD8qp8QTOX6GK+ZCeZ6X0jPzl+TA0epRJ1FcDFAGaFEyBY4AC3AGus
3TsVuzpnIrZtNn7XB6BMQBF/K+RhXq+JprnKmHJJFhpLRNBfqIW1PaooLO6m
xLNfaPXaq8TO6yKmkAwWv+CHh+YrcjKThMC2AGjHmSHgrjZcFPxxvXYGgh30
4f2Mh8uTuDjyyhh2syTwb3su+ckWUoR8Gf07kkPZZjdI8uANUr/WRDP8i6n4
5Vtaymyj/UqlxPtUS7kmZeSr+IUidZsp5NYwzd7Aj6iwJvLv1IZymT7yWB4I
Y5jBnN8cF+ZoIbxHC1bzTeGi3k/DBZV08mA53WTkkL+lKPYt1ULJeyMEDAli
UrYEcoo9oXd6AoI6ZbDAVh+XpwnjQf9B2ihlSR7e0yl0Uyg9jhPA/BfmiCA9
rLzIxM9t5ohZP0w5xo3kMMSPbyIiWPVYHimdg1Q3TwLrRKRxblsRfdk7QNuD
ZaDorIIqWQ1kFfCgtYaNww4KyPKwwzz3ibAr8cZ9XVcMPzeCmYoJTod6YeUQ
B6fVNeCdqoWvVXIYZptgTy4LmgbmOC7siSDpHVj/igf5CFncD1DEcjUNPGjR
RUi7FDJ0dbD0nCnO9GhiYZoinDdJ4Wq7GbZeNMD6dlm4T1BD7hJ5SGv9pgDd
AXo6ecwHnXWCRIcc0qUkERGuDdWdclhSpoZIT2PYepqh9LUh3o3woSG7hVqy
pJDWLIasGHs075iA2w0uWOFijHPv5LBjbA4PuCzY37XApM5p8N/CwyIVLag/
dMHpDkcIWPrSUreHWRv2nc74fTmcG6NkzClS5rBfSkhwxfJFuX7/bnMCNu/k
aB7czLlk5snJrzrGMRkCR7J7LacuO5g9dGcfJzjai/O0QCk17V5BkoeixLj+
jzPO/wIW3l+QxGe0N+mn/QfH+dU/mTMnhbMSg8S5Ya1e3N1BPlzJg284Hk+O
sx7drWXrSWZzHWXWsufn9GbOOW3I+7xBnRpMW0lmeRuFrFaCXLAscrUUsMNF
FB1ehVTpNUw2902Q1NRLyTZvaf3RN3SoKpaSiqpox4NGahopJRGtEjqwQwZZ
Qq7QSJmCmkkyeFHeTs6s5xSSNkIb5XygmuyI+WMaKvrKDIwzZvAaVoMYb0z3
w5Sx0qeDNoZKYWlRI/1MTCDJkQ8UfvAy2eRsosqrNbRVvpemnuBHbJoIjmmI
IshTAFHFOkj9boDqERVsSZLDoxX1tFvvL+2eJgvTLQrQ3C+CPGUFnJH1w3n5
GbCMk8TbP5m02SqcyuZco0O3fClCLpQq512g6TIXKep7OHlaWNOFZ2yatLqH
Dq+1gfBZDWxt+0HWnqJwPqKFveZiwGYBdLx1wjfZpbix3A1/J/+mcK0a2jVD
GHnOH+msRyxtlL1Hql9eU+I/JbSaN1CcSzHNWeUKi1I/nM1WwMh0eSj0TkSx
8nr4Wa5BtQ4bz8564Ui3Fe7WiGKZtxYsjVSg+vIVlWxqpIxWCZR8baRfiwUQ
FN5JfA091LZHFd7yOng4lmHnDCrihAQT7esU0DvfA/ujd2BTsz9qnT2QeYGH
yfoMmJ01QXKuBMpj6yif+4P4LVvpRRgfZh0Ug8CSRjp/JJpORhRSj4Eq1I8Z
or5OGM8zOogT0kQ8jgzaFZVx/HI/nRscIcOpA2Rm94U2q0tihrk2RFSEsaLV
CCGLGXigyALnrD0m/2mgluvPiHfNAmWXJ+PgMW2UbNfBrmg1OF8RgOvL//TA
d8eIhAvEz6sjR9AGOQ9LyarrIW9R5mWe9ruDVOneSF58qph12QkJchb4wPVG
UAoXwTuNMMrWQvM6dfSuV8dLKU2Yi9VQzdw2+m2kBNu7OgibR/hynnDvhQ5K
Hivh9wZ/+O2fCQ3tSbj3Epi5dyJ+NsxCooULvBdPwFP+hcj/uxJPGnTBFBPF
piJHzI4ygzpTCVI11vh8zgD1zywwkW/MR2RPRMMLE8TN/E2/pn2j+VHDFCAn
DKcCI8RZSsO7TBKzspXQ/14BuaOVFOWhCx1Vbyi/MELmo+8UmDhA9035ESwu
iYBPZqgyM0G/vyJyucLoUTSH+nwT2LxTBO+wBJZdFgJ/azf5cN4Tc2c0bdD7
SifFyklcRxjC2Vy03PPAjzQxOH/soWu50ojUk8SKjOV4GToXgXelsWl1MU/v
zJkM3amWWc6r5HnPz/ZzprLOsfU9IzgX1pRzulrqOE/0v3F+Fxdxzjou4Wh8
2c66mpjLNIhYwcm+E8rZd24zp71yJmeJoAondbk/Z9YSY1bEFU7qv+IJ4/o/
zjj/Cyh77pLIZRc5i0UYO9cfeJB6Q947ZfjGL9b1vp/syPDlnLWv49jrUnal
/bBYk7p1ukGGZ/oczvmJF7iLjRiZ35zKMs7LO/FO762np5UcaIdaQTHJA6FG
JbSjO4XKpZUQrckAT6OAPpzLIXFWBeXyV5H5fG0wrYepVcEAWsEeUBaagN+F
vpixIAA9JyzhcKKdFo+EkaTKOZqVIoFQ0WZqN9XFaVNjKLzpJ1MbMaReV4C/
rj0E10jDnqGElb8sYPhKG/8Wi0FOsYQCI0+SZNlT2hoySDvu+6PqsQVO7ZLD
XCtXpAfx0DvmGe5/H6XQXZLgTB2kmse/yTNbEn6PteEoJ4SMADmYdRniYIcT
1O+Z4Ne6OjJRPEPhN19T0dwRYi/qoiMJWVR3/CtlFymj9Ec1zfl4nD4/KafX
sep48EYI32eNktNUQ0hHKuLBVTVsTZBE2nQmxKOBTicmFn5opOXdlWS3QRZW
Sz+P6X4M+YqnUx9/AU30HctnNxZhKNUZh3NMUDpih+qVjvAXM4d07RTsXueF
+Zeno6I5ACeuTMAtbxYqdtkhyo+L2kxXHNs4QI03ZeEiogrxJSL4UWiIXnl/
qDiqo5ohiV2vbfHP1BC38kzgctUDm2qMkD+W/WwYIeAqsKAftgTtYZOxWk0V
jl6iQHgHvb47SDlSNRTe9YEM4rrpzbEy6ljbQfflX9PoATGsSrSApB8bPfut
ocaRwoOL4vgWKY0/faIQmC6L4fBB4rflw4bhKpr0VARl+vyQWyaKiVNVkfDS
CY8rrLDTThYfnfhxOl8UfUcmg7F1BnbOUcBQRitxlrVSle0QzZLXQ2yPN77s
ngt5Jz9075fBbYVQipt9ktf79iyvWPAi7R0e074zLPg880P2Bg7yRAJwfGAB
8sx9MTHAABaHBslfXgTtWZKYtkQIpjNHqGTMR1QsXILXnQvw5ckKyIVsRKEk
4derThpxU4ZPGwudl1n4toEgtH4Srkk44ed7Hv4WLELAxnk4uNcGyU/loWqp
DqdCJrqNfZHwccyPrRCFeqIm/uWpw7xcBsZ6AtjyQAxmTaKI2iWG/d6KeEca
SPVSwpF4G1y9wcKqFAN4Nv6ijGV6MMh3xCEfOTz88pVSnkhg1g4NsN5YIfq0
33993/+9WhFyHnK4e88TstnOYLiwEP0+GL/v6GN/aBV1FPIjyvAcLVqcSDI/
f5CmnQLiIhwxq3021h10gxcfH24P8sNdfAp+L7HB5/tLaZqLR+YFjnem0Jom
TmvuZq78I1ZG8w//9JpUYTZLbmtaS30cq7K3glW8QY/167s5u0pyEysqgpka
HerP+HLNjXVR3olVkLSItZaxj2WeeDbtjdky1tHzpkzGXcOUy7qPxvf5jzPO
/wIi2I2OjO62xGUHJji/S+hhnLHez9h0SDPN2To3rU+Ol95x5FLao/oDzOYN
R5jWavLsq1k66ZeGz7MyzT9xnGUCOad0vDJre05lhQ34kthYFiu1HCBhRWlc
shdA4FhtP84xxuucRqp+kEHxFYL48EQFgWwRTLsaSa71RbS/cg7Ui9yx7qon
vk92Q1KAEOwOfKLhefXkee0cCZbOoPt/L5BhbwLtun6ctOyn0B6nJqqzMUXl
JDlsG8tb6sr68J01VvsWmWHtclusSLFA3+weck36SHG7/tK1VfzQPqiE+kZh
FJ4yxQR+R9zYZInDc/XQazVK+fSKVGxuUJSECobEjaGpq4kElgVCXfuo6Eoc
7fomjdp7lpj2lotSRyMIJPNhX2svbbJ6RUGt32nmmJZOF9CAzkg0rY5aRBeP
t1L1Uwdc8zHAiz/ycGw1RXmzCJ7cb6XmiyIwoe9U2NZMkXkFpHm9jVJMJRE4
q4UelA7S8S+ldOLkPbII/UPs51zcZ2ghSUcCjKVGqJ/DxtEBdWgnqmBelQ7+
7tfBLBMlzEhWxfNOBn5OYWDpTCDfiIkPD0bJba8IlhxWxuXraqj4bYaLc82A
q9bwPDpKYWProfBCChqjWigb9kDeEW/MbSfoXlBE+Bdg0tdgnMr1h/4yTWjc
VMZkW2WYK4kh1i2evCS86aRdNMldaSXF4jp6MF8VsxfqYHiNHJ6eN0fjJWus
0NbHLzUdHOlSg/5+Y+y+Z4WPGQrYom4Ib10FbPwjBF95+bExGyHqwnt6N0sB
akpMBBSaY+lPCzB9bGGlooLqPiEsT6qlP0u66eH9MrqjWk+J3PckK2KFe+bz
sOCiH4r//aGKSdqkFPuKJ1n+k3cnqIQGwjkofL8ERWnT4PBrMQobJmHZISvc
jnJFWLYmVGfG0roNMZQdGEcGk1roPz0F3mjwsHcdB6usliHEZhUmLQ6BS1Ag
Zs/ThWS0LN7NY0E6kbA6hQu5csIcFyts0rWG7OM5SJ+2CFk73HB7tSTOveGH
yHMGHuSNeag9Wlg9IILqNGvYWjog8o0AqiY2kB9bHGWvpXCswAKTJJ1x6q4W
xMzNMcXFGY0l+nj5YJiWCqrAfoET1F46wszGDOsr1TBwTRL2G92Q1a8DWQkz
1BxgIcZEFWvki6knWQS5GSZwsnaD5B1/rNjkhVVfmyhzdh2Zq0RR2Nl6en6c
hw1XJuF2vhDy/imjZqUZvAXV8Hzs91uJPhL3OsdNv3ogq9aYj1u5J4rjv0CE
s+z08fS5KWLsOW/EWS/qalO3Czsy1R6UpjZ9HE5d+GRe6mpNmzSW8LHUgqsh
jJib113UDy1P5czYm5rqdihV1/Nw6vZlW5iBNQtSd/XypzTvGxnf5z/OOP/L
+I8PKH/ukvhxqN75gGAPQ2DzPeZ+Y36W4UFTZvCTWcnO8duTJaQpddYDMdY0
fZe0F3sPsf/YHeII8Z5x3Hed4fbeqs7MtzXgRjTKUZRpPB1yTqPkngLaMdJJ
k198pC+T19NcT0PYDSzGI/tVdDY4hQL/DZHnyVby8TVH8hNC7BsDzHcwRqi5
Fg73i2O48hXFBj2l4b7fdDj/FjmYpFHNxts02ewndRdLos3HGu8/eCIgj4GP
l6aOZWITTM1WhvdVJRw0/k2Th/UQfhmwWSODDgl9qERNxZc8LXjqCkNwjj26
jFVwOySUfl2MIdVhCeQ2qEAgvImar/2lqrW/aWeYMCYZiGMg9Cp9uW6JJ+l7
4WHgBUv7pzQtMovuhhRSNvsLWclq4N2UIVJsfkRygS/oh7I8nv+xxoi5KxjP
bSF0jIcdWZpInq2LK01DpCJ2na4uj6dzVYW055UBzrUO08/8Q+Ru9Zli6l+S
lOkfUpsnCBsFIbAft9NJEVmsfMEC96YpztIQHV+aTIvefqXcT3xIXTVAh0wU
ETuNg8dSDFQEc8A7pg13MSF8dtXAwj4z5E1QwH5LOThnamFDrSqSj9lj72Ix
/Kgcpv1K/NAaGdOIEWEskv5LNQ9+0xkE4vPPiZAXNoX2N0188NXHditVOG9R
Q6ayCPz+5RHm1lDyCSnwDUjihEgvdWzVwY0Nmnh6sotOtAmCtYmHZVbtFG+R
QhYVA+Qk1ULztvOhcqEmynLl8NNKGIuPyaDBSA8zEt4QR10Kqvc10OqlgwnW
ejDyVsGsO9qITeTH8MM39PPZICkHC2K68yg93N1Hi+Zq4d83JRzg66NDvjGU
asEk5aV8BOZeUrlojk+aayEdtB2Nh1bgtM86vGuaPJaFCd7KTEgdkkPIvM/0
WUIYNi8EcLNEGvannWEYPwnqslsw+WsoUp/4Im/uRHx9GYJczXmwX22NQUkb
PJW2hMAlbTg7aOGQsDoOd4riZLUC5EKFUNOliyOHZfB5mgZ+8XsjdXAihPcr
Yns+P5pOieHNHxWsvyOAXdbCONAghx1O4tj11ApRux1gvU8TA58ksZBpgIHV
mhDOFsL2MV8ZJ2aNtWP+rXeqCOyESuj3qT4ymjcRd2qkobMhj7Li+NDF9420
7t4n203SiFhtAn0zF3yTtcDHshYK1LhCN/weEhU3U0ulECJvVFHPze+k8tgE
Gh8WIuUIC2uEWonc5vLKVsVnSSpzuVKS8dz5smdYvsLmbM9f4cyLajZpJ81e
pDW6DCY9GtjBiDiR6yL34RVDrrOFkRyXwbhl0sso/7uekbPrudPlKYbOfVeW
MZ6Hb2V0rN7GSNdcyHj9ud355PB0xn96lPxH+8f3+Y8zzv8/+Fzv5jwQ0pIs
/1iaGcC7wCx6ap6WOXeUue/2lzT9LV/ZCnfPcqJMkjhrLCO5986WsFl+zzL/
8Atn8R6n8VqPryaLen50PjLH+rmqKDkZCDE9Rzz9/ZTubGmm3G/ddLCzlc6s
/U44p4IDa+VQYPqPRMPE4eplCIdCefTvKaCr1V/oSKI83hYpI9BIEu464ii4
lUECC4dJbpUtetu1cLViLLtm2KGoUmFMmoxReNwVB8q2IzoiEKeGrDDzGo3V
0RDEJy3Ajc3OqFkjBIuBQiqUu0Zix4RgraeMLA8T2PO/p4UCqSSXd4Vy9739
rzPNLxZH0bO6EjLYp4bqClUEONyn2Ul5dG7CO1pR+YvOObEQ+cgOA5NkwEvu
IE6WAs7vtcD0QDOsjOIhz1cLcz9oYKBJCG2GadTWmEizrGXBu9hK774LY+ek
QvrxK4nm5NbT2QffKblDDcv01LEvSxArFlTRndxm0romjUv/LND1gQHVYUls
zBWGBFpomuAgceXlsDxZB4pjWVD4ozcqDmvBpkUKL3ii+OdqCpUkI1xl6kFg
oTXcDtuh4aExfrjYoLzTEgNsDQi5CuBUjQHOxhjCVeALHdTpo033dDHz+F9K
/qoNLVcr+E0fpmcVhRRazIfsO/yQDxZC5ZierJH+RT5LvWGyfgZYu6yR7WCJ
7UtsYfHTFVHnFFC+P5NcI/+Q3LSnZLv5Lm36nUeh0blkWM6HXdP5kSMhinWf
VMFm2KOxxRzlF+0gtVofPpuFkXNZEVs/yoN295D0MgUsSu2ib2rtJJjghNJm
KZwIaKdVmw7SeeYIb+GUap5ekCFF1LVQ6/658CxZiY8qqzG3ZRPM26ZjUD4I
Ik3z8fHlJhRJ+GOyWRclHy0i/bM/KeeDAP45K6HmgxdeHt+Dd0nTEb7cAnsa
7OD7Rw/mj3kYNdFFn4k0Nh4SR7fHAIX0dNMQvwz++onDS08VZ+5JgUmSUP4r
g5BjP2jvzELy3yqD7eKakJgphDDmLdrl+p5WNSnglJ41NheN+Z4VolixTgKD
P+XxmqmLXbUKuFOig9PmcjAwbKLFj3/R1rktVBE5SjcmSWP5PyFY/uFghY8j
OiaI4eunZnL5VEn7fAVx5Isqch6bo/KCDJzLmmiFAR9efa6iVCE+JPpWEMfm
NX36XEpe17Ip5ZkMJizm4EjZCMnqavBSwqdlxZ23yLy7tIdL8+Zx3b++ZGdd
HmCZasSkCmlopNWevc52XyTOMXm9giGscy6FNCpd/qfr0jjjjPPfT/iKlYy4
glWpiuaGLA2rfZyVm6PZcjGr02Qd17O2uL1K+xPBZI2U6WasrRHgev9byE04
X8CRavfh+r/wzwyyec8RrjtAJ5q8sPXkZiiWLobkAT34Welj2QN51Afw4f1V
YSDiEwmcEIXx1skIKXbBTycXxM7hoGCiH7axePi03A5xs2XxuaCNFliLwPii
Gk4uUYICHpJefRjtym2gtlcPaHJfLDEt9XBfnotdUtPh2M3D9w9yaPxqAoE/
Ruh3l0cY/yzMLneHxdRuSmruoeOTOmiJniQW3emhrgZRKOe30WXxQmrQL6Wg
dBGcKtKASIIkHv6QxoJGZXirO6G9XAl178VRd+YHpbW+oV/uCogJVAfrUguZ
NP8muzdjedvEBkJHmNCV94XRXi5EY03g9XyELDvS6Vv1K/Jf+Y/Y6T9I3NgA
Nh/ssHztKGmNZf47Gio4OTRK+85IINVHG10vpXH+WCfd7pOB72IzTFpqhtp9
rLFsaYYmB35cyf5K2fOEEbNcDXobDGHG8UayWhcJh4/NheUIx/120NYyhOpp
B/RlEdRKHBG3wAOtKWvB/306bq0zwOFlnrj/2Bo9ez3RbWYIpsMI6bL5UXih
kJasEELmHVVETuoj4U9fyDrqEwVlDlDmlG5aqZFK3za/pK1iwNmcQDw+7YGU
S2rgL1EAi62HmHdWaDjaRXqzh+hQyDfq+dpAdtb8mHwyl1pHVCCQpo7cW6YQ
+uAJfa4vehJNsbRbE/r5hqg4IIXLNyRRsUMMwWPrclFOAq8Ve0k+spuafwri
+gVhLPfNoItRzhS8TZu6glbyujbMIZ0TA9ToYIBV533gPHElpDy3I9J6DuYd
84Veqhuu206C6Hc9/J5VS/OviaMhroTiGvix/aYZFFWt4ec2Fd9KJ8FulwUa
xrRWED7IoOkwaLTCzXuyqAlWActYEas+CmH2TRZ2vTTHxk2DZPHNAi4yqnC+
3Ehzjzwmo6Jj1G0qjiaeGUoXG8H0GD+CWvJIaJc03s//S1Ps+WArIoLqg4IY
XaoJ3HZEW64K7qzRxiNzcTzb+JVmX3tGi4Jr6XJaAw0sF8CSdlnsaWVBddAG
W59J4POYt77cdJv2LJHCoK84NpzvpxWe4jg3XQIrKgboq6gjYrd4IuelFiyn
9ZBrwAQMdJricNIH0tVcwfNoVsgaVDuROfNnPHeduDOnq2U55+xnBfbZIwEs
yZw/qX+krFkPJH3ScsKLOQMLbbkL3+SxJjyTS7Ox0mH+T9elccYZ57+f/+j/
qVnDKUfF37kMZ1/hXHZV5Sj//pV2WyA+LfB5BMubj5dR1RrOXR2azj0wq4a7
NsGE/c3jLvur/GRuo5Esd4FfRuYNkcO8Nw2PqfhfKVk+UcXV6Vq43yMOA6eJ
KOV6obdNG/W9GqiZwIanxXQEq63F+7gAdK2fiiULfNClykLZalF0mkjBKlIV
o9uNkfnTDNnhKkgZfkqBGrG0aEYo7Zmym+ZMeEQ3ykqIfVQa0fH15JmYTyoM
Ixwpn4WrP7zHctNs7I2xHtNxARhkqGL1iBDWCtvgV/l0qL21RqwBP0LevqS5
Zz7TwY9KWG3vDi1jC2xpVoejgwDOuP6i7nmd1PHdCesGjbA6XATrl0ngx+EO
mtmcS0prpKHvMaYj8tbwmjkFIUsmYZjhABMXeRRseEUJLcfJvuYqSewuI53P
v8i7Thz+klroWKsMtokcDu4UgYitNhTHtK9pSBw+h1Xh/UYMoip62FOnjH0z
vtIrxUZy5fCBcdoK+30lsbddEM47JDBlNx80rV7Q+i055FkhhqfbDPB+TPNv
PxzTsoemqK/WxpK58nh2YQowjYfqGmPUPjHEvD4fbJWxxOLVSgj0GPNlHqIY
+i6Hja3SUFgoiLMlskiPUMHiEwZYqzCmrV5GMM5so/LCj/TptDCYEkPUv9AK
Q3WBeGZrjnvKY/9lhxCs3tZSW/hX0ryigAnvTHDijAhspOVx6IIoFodxMG8O
DzdltcEfroeZ8i4wSVDGZj0pTBZygNIkZ0yr18b1ZBHQjkSq2HCKnjMqyFa/
jn4GNNHyJnH0D+2lbc7DvNDV0lS57RXv4LFL1PhQDp/n22DRVz/sYfnh/o8F
mHZ2ChT4J+LvQxdcPK8F4R8C2DzSS4oT1OF+UBkid9RwqEAXdrvV0bJWHxGu
UrhYkUpTX/HDZ5EruofXQ4RobDzK2PrJGSNC1eSX8Jfmh9ngfKwB3q3Wwjk5
L4yUzwGUOJhp4QTnsDRKYH2i9fUC2NEmAtcGYRRXvqEDiqmU8zeWDk6vobe8
dhqS10ZtLgNT3pogOkEGs+IMcLTJEHk7VOHVpID4phYqobvUOqGHJvNp48Jk
c0itt0NQnD2E+PVx/9ZJqjv/iLiin8jqSxrNDXxHJStNUXtIE7vlBNDnKohE
C1f8Pj8XRU+k0OF5mmcQ75Ml5iCSecV9ITejuILzJz4/3UH+GNPc8UEac8/3
1E9izmmHRMTSDpXypd9/fSx14OM3TkapDte/Roq9cLPduP6PM87/Jfzn/T87
4nfyGdtqhptEBvM3MyTFz38ta3qgAsdWxpsj1hSfbrr1IndlYB/XUTKU4zZ1
A1t+tXq6RpUXu650Dic26T534hJznoNdSJZ//pksgzmedEKknz72ddEhbTVc
t2FhtpQjOJ5MxDG0kaVniIPCzvBPlMCWnsekHd1Ow26G2O1shIffJ8E9xhX6
p4yxkymBZX7tpHXrCX0fOkuOqcl0804MXVTzI+mEA9Sx6hrFhkXS+qoCGg2U
xcQJITC7sBzzPs1A3BZ1+I/wY9Y6ayx6YI+eeDdc2mCA4EVSeJc2Sgkug1T2
QBVfKhxQI6OHFpE/lKosjC8Zgthpo4pHfPxY/3qQ4tlK+JipgjNvLDDtnTys
chrJNqOZGlaq46BnMAbSd+Hqm5kICndAeakxnP+qgV71UcqeDpI4oACtLiGM
HKykJpefVPBCBKHRpZS0oIwuxBtiaLkSinK6qMFDDZnrZFE+LIsDixtpSxc/
jB7pYUKUMJLmD9CudZ+o7nQThVZ9p18Sl+lF2HOaGD9K6/La6dpNEXAtHdAt
Z4/YxU5Y6OaGZ8sZeGHrBhFTWzCXtxB3Dh8syyzwYdlEKHdqw5BfFk8WD1O8
Mz86DmqiXPU3TWP+I4sN0mgJE0KZowQMTWQRfbyctnf+ppAXOmCsN4X4jnk4
178Bz3K80d7ChYGOLm7pyeN1qiSW3h4iqSMaUGvmQ1PkL3pZx4+r/fr4qeiF
DYUmOOWhiPAWExTBHpZTZLFcygBHqk3w9xQ/zneJ4A2PDzHW7ylf9jUZnTSB
tbElrmtUkeV8c/oqNcwzGNYgw/NPaF2AMB412+PgTR0UqajDuowQmL8YP7IX
4syrRVAXZsBz7NrVahq4tEMeGT1KuOhmjkNLJKEWI476bHHMNFbBUKMuDMTl
8fZ0K1muHnsOQ+wQ6KOAmx+0YH3OBxt+SmH/fW1EFLEww9gR4RunIFHEHbvs
jXA91xaRUfZwrBmhHSLvKVPzHVl055PTpH80cpwP5oJVlN0vgMvzJLBG/zsd
4emjUMQF23hGqC9WQV2OJr7aGeBWuCZ0Us2gFiuGeNUESnrYT6PrDdAwti4D
piYIuqMK0fwKqjl2gew1KmgoRhD6S6TxUJzwbPJ9CjiuhEOabKzZVEkuRx/R
m4QDvN38JzI3dcjw8u9Z8r7ZVXLEnv/h/BBaxZkd94QVsHBrkqAsg6Vays9S
etnPqrnpxy7OEuVESwRylm+eylmp+Z49v76Xuept0fj7/3HG+b8El+41iaNv
u5y7+d8nf2QS89GrjDRI9rK70/m5xxcZclepfOfU3W9gK25awO3eGs4t1bPh
Rp7ezJa8nZlW0Ho3LZtbmO7YsSCjVuE0VyA6hztoIpvV5yyWelw6ibt3UxoZ
TJyCnpcBmBDghbhaO/Q3jWlEwXuqj7tGaVs/05S2f5SZOkpT5TJJxqWcmis/
0/ffyRTwO5KcnW+TvUIG3Zz2gKabpdKrbWeJ+cSchGQnktyW7zzL14o0vf4R
XQk+SyXrssjAQhrBDz2wKYGJcFEDJL5RRZVnMx2PFsTbOQIIyJeCWI8h7nZp
IHPzEC2qG6CoBA08b1XBTV8N9KuqIUXcApfeKyJ3LBNfStaC6TNz7D3Ng2W8
KLpZGWRxQB5pkwjmO4PxXm0WZhTZI0VYEWeHjTBZYCLmGClhiV0fFaXwg1/i
PqHuCV3K76GT9lpYKueJNu8AXBB1wltbZ2j8EILdBD18vCcIqxd/KMxVAlbo
p8AYMTzfM0AzPqvh2hQ5ZP5TRKGVIK7HnKI9S+KpVDSGbtqUEHu1AxR6bJHp
ooLoBbrYPLwIXM+ZeGjCh/05+thxMgArGAaINJGHo2IwDI/6w6LBFpLL+bHA
u5S0xUVw7kEdHeE00O+dxfQtPYkOv3lE9xa2kcMzCTySlsRWX3l4lgdhwGwJ
ZsU4oVink8RjOgkY0+7CPCq4/IV+VBeQoYAJ9j7XRJ7WDxLZMUATVgqg6Y00
ljyRxa/MEdq6u4d6SQ1f7rXQuy89FN0pCnuXIlo9TwBV85WAgy1UNL2RjP8Z
IVpBFeYPYmnZp610Yf9aMnh6lCLrtaF5QAqeMwxwtkwcgS4SuLzVFLsm+2Nk
0WwEn5mLgRda2Fhug3I9a4T2yMBopSwOOevCe1oDbT0igxdT1bGnUQt/t1hD
YLEDTpwXQ2bKb3px3hjHzZzg6G8F4VE3dC6eg1txM7B1rQMuq6vh2WU7RNgM
0sKjQjB7ZI/4lz+I/44ujlhKouxTDs1YkU6mB/pJZ4cI+KbyY/YUK/B5SIAx
URCxVzUwvc8KD0wZ0BGZi86dszFH1RtRJuaQaVRErIMulDJ6yCW1hYJ7tcHX
ycK9NhVY20XTJKl4euIx5luuS2HCmJ9s9DVH0Q4fdPwzQ1qzENoa9lLPt+jM
2s7jWf6Kv7hDMVa8iK547qEZMRkT7AzYOdzcNBG9BSzLmzdS8/ptOf3PHDj6
T49y/p1q4/iU53OMNv3jyBZmc9pctdiOqa1pKmtUmYluF1wsOZeT/qfr0jjj
jPPfz3++1f3P2VzBq0Sdo/bGMv7oH0opylZgNTRUsMJvTmMPeaxiOWzOYS34
m5XeVmXEiY+W4Pyp5Gd5CzCYd6RPMndFpbAWprxmX5k/meWvp8X5xpnC3fR3
Hicn717Gk+qkTPam9RTEtsUxK098NjSDIUsPgsstEH5fHpOv8mFG+D/au1sM
zzz5UOlcTnJ73tB+sUJKehlFJ6wTKOL5NxqaMko340SgvL+eBC5vILGtF6hn
NJue73lEUU0DdF7xJ11o7qK579QgGcvGhY8aSI2ooFubGygko4HUR7qp1X8+
NE3DobTiAMpMrDH4t41qNmZRdPwI+X11QZuqGZa7yGKmgwHuDpkixdsQB0zF
oTZRC3rKzug+xo9DmWWUcNkTQvcDERbiCksNFn7+04dfuw6mj+Xuq+smYajb
CGrzhqhiixisZ8riWYcENj2ppon+4sgW98Cc7/tx3GUREl1W4bK4MxR7lVC8
t5VKnT/THQkdbF2li5N7lBDpo48oQ1HsfaQPVXdVtAxLwvDuN6qOiSKF92FU
G3uBYkJfkrRCMUWrltLArRzK95aEfZoFREyMcPKRDRI+bIadx1JM3gN0J8xB
Vt5SsNcuxIydOug5KYslo2zYLfTAHrYUro3pjMIXNbw585a69bPJa2k/jRxJ
pYymh9ReJ4ViywmY88AROpoiGDpTRCGm/2g4WQD8Fq00sruDqp152L6GCVFm
H82peUv2FwcpZ4MmkgJ+k1eEEhRDP5J9wQ2qGnpEc88VUvuLYdL99It2G/Mh
MpCHZpYiLlWJIjzHBKT1j55uekIehltIoUeYrPofU46ZM7ZOUoaorDoOFtpA
8bMtTk1kIEdhKv7FzEOjwUzcETHD8fla2CEshRu5vaQxwAf8EsPTdmXEvXLG
5PX2CBOyQLqyLYpCCLXvdLEfBniUEIAt+yyxJVIBaR1eKFH3Q3XBVOxrcQTt
FYSDiDLcZ4khRFQWCT6mmHDUEIrvTLBPWx9bDybS9k1vKSRZE1N7iymh4DAp
DWrgaPUwFfd+oiEGD1gbhMPqGrh/2QIPtAPw1MAGttLfyP3WZzJ8rofQO0HY
qaaJp/fdsfwrA9mRlpApFoLsNFNszNJFproFRre6YFq8J4IDeFCV5kfudkle
1/nJWVFnEjkPpt3j2nxK4pgIZ6RNeGicEZmzk30kySDt+vwopl/K3VSuahBz
VcgLFq/rCUvtqhx7jbkRO8jhLOsj3xvWRc1wll/tt9SK6DbmI88TSeu0E//r
TPH/6bo0zjjj/H9LaNjXpNSIOhcPOdPUG0dl0oTvb09zXJ6deuAdw7nYOYtp
lqiSbvGiPW3yrQmpJcfrXORuWSYFrL/vbOfvzjR5mJOaPD827e2F12lXoyvZ
gzvvMOMFj3IdR5Mzu7YbZJoPuPBOvMsg6WWWcB/Lz00lWtgz/QullEeTZrcI
pNjiOCJfR263hSDaroDNaaqoFZLBwoQKunv+M50T7aNP8R/p24Jj5PPnMf3s
fEG7RPdQU7cA3vpOwoEYE1Tb6GPErpkOzculPbkVtN9ymFq/SuLNFQV8fL8I
T/KXYZvvFEStEgBDvpQkBr6Th+QPesVRRsxMAdj73KLcm4JQWqmGxAeCmF/Y
Sxl7hOB/UBvHA9vp02A++azjw14nC1gvXIdFc9zQ1K6NffXSYKwXxKdZf6iw
RRi3j9ZS79G/dOquHbzVRqhlbg4tHNOlKZY20HEIQmf/UnzrswNfpjQuK3RT
yFF+bDyjiLfiOjgcoIyVs6TxYLodyoXVcfeaBiy/SePdFyX0m3dQnaUuSmEH
ixviCJeuJbE59bTD7i3VWkSSUEUubfCroD3aiigod4LWFFFULFWC9TYWds0T
hUOAIh5fksOgeTXJGf2jlHVjPilUDlWPsmmJyRmKljlFGQfDqC19CxUKnyPB
VWlE01wp8KErpe+oJN/zOggbu2akrAKcVidR3sgvWvVdEP2r+fD4ogOYF4zB
F86Pw2FNxOcsD5FodbRGFtM1eRkYT1DCUYc8Yhp/oDsbamk1BLAlsZOC4uto
zbAtqkdtEO7pgE92PDBl+aD+9A7xK3ziuTsRiR/poe6F7ZTkrg79weUIvbUT
87d6wZg9G5NV50HpvR90j/hAeA8L5rd1kGYqASWuFMrKRsjL4h9FT+CHzwcZ
WOsoo61fGYYPNfBryBK+mXb4oO4LvVg/PB5SQNlvGcwMM8GyMV/wScQJ8ns0
cHIGF08362FwtTnCdVURaKKC4hJtDG0zwOAnS5xaXEvXpO7SlWdttHaxINil
gjihXUZKesI4c9gbWo+CoaHhhqBbWjicqAAhLmHPLQYqStRRmaaJlCwNzCh0
RmMDF/gjjaK0EZo5Vwvpc/nwoUcfLzbPxQPFqXhgNUiRBhHkYTWV9652cVaU
99mMc4dsuZ/nzWV7jWhwrtydwTH+msA69fQ8c6LNXOYu5hxG8rMpjNMm5xk7
v/qmvHyel6oml5o6daZqmvCofdrO0CepnrFCaVq5qakCEapM412JyYdq1o73
7RlnnP9LuTHm+1duT0ra/paf8ZUzxHDzcWJu785hJFfaMqy+lzI+vxpgSl14
yGTnGbrctD+c6Hrqp5OTlGLCy+frkmc6qDKR8SrVy2kyc6qdPdMzhJt+10KD
c0y7iGsVdYhruSY/vXP2xCzpd094V/fNo7asClopKIHRG1/It2sbdch9ppVf
q4m+iyHRqIN+9chAmSkNpdhkmi99lM51nKKlW90pWm4mydq/ovvP8knRK4JU
2tZS4I5GWnu1nhZnJ1KKwn3qfyGI6PPN5LP0A/k+Haarv/kw7GKPkZ8CiB67
p5aSMNrltXEgRx1x73upa3U/rdz/iQ4En6D88i/0022UdhXxYaaPJhr+s9c/
VwWvpvGhdaMiCs+5QFzfGsbJHGhuJByKtIXtfGVs5FaR1cpG+rRYBHf0ftLT
WBGs39xP2YYrKOZlPhVc8YR8HhevNklAp1EU704IITP7PT2y0MCyNab4J/iP
HL2EwaxWwhZrFbRxbXHfTxFlxyTxL7aO9LL+0rk2ESyXVIbIMAsyccEoiLFH
ra0Z+ofk8OlSHxm0VdC3sydo940Eej+aQ73XbpDEwwNk/jiHrEITKDL9OP3t
30cfNS7SwdtHqKY9gPzyQbHL2HTTNJSnqStAfUYnKbDxKZ1m5dHMd+IIPlZC
r83uU2BfAX2WHqDOjcO0y0AXDQrxFP4tlt73SGFnswRcDeUxMbWDIuRLaPPt
EnoX2kKHz4yQhmMpea0boexWTVhu6CDP21/pYnwDHfgugNj3kjjULIO1mQbo
nOCEWg83MIJs4Zb9hZ52bSCv+KNkFWMMk2Q+fDZUQ08AC9HF/rh1diaeqIVA
OW4KjpnZIzjUAC/VTPFM3gS5L3vpqOpH2jO/m8q3VZBAy0ey8Cyjvio+3JeS
QvVdQfC+y2OjkjYuXxSH6k0zGJroYaGwNmK6tLHooTHqnytgxjsd9EMa+yY7
Ym+wOkp7NVEZaoG4+Up4+04VrLH7Rq7RwOFsPmQ2LiD3nttkFGGIkSpnDK77
R6zp1vhy0h/n1U2gtEUIqxS+Uf5QDQ25C+LMVHGoRAnB8poYdrk20OpVMaR1
vJmi7cup9HIzXRxtpapOadwnQ7RtGSaV5SoUdFAyi8Osy5w0Msp5JGPNk7S+
xK49N9clpvYoo0ysPs3nzIk098CnzJoeFab2hvBk7mc55/+n99eaxD0uU533
u61inD6+iJHx+jlj6nwB5oYTKYwguQ7G45jnDKeJfYkR/TMcx/ftjzPOOP9v
+OMv6zy3NJ6hmPshFQ4L2JsfcJmVr06nbv07j9W90D59u9LldE2dPo6+riZ3
25Eubon2rszdhnpZntPPZW31b+etyC2gxvlqmLXKEHs/1lM3vwisVPZSkNhN
Ct7eT0cWNVIyJ41qWuaR64yj9Hp/Ga0PG6KTMs9Jyn0ZiXkcI89/56g8QAhf
bLuJ9/YWBZVI4dOBHkrP6qCjrtoo6leBvxEXb2epQiXEEjkzPbAlZynuNfsh
qkkZec+baE7Qe7L/IgFj4Trq+tpEjRpauPVOA9NVWujG4SHa0PSLtuvoIt3R
BC3fFXHeTRsn2tXxYp86TD1FIbKrhDL9Uyhs4juyPPGLTi0zR8hVeSS4X6df
4SIQuEd4eJuFy/Lu+PVxgCSeyCB2uTIevdWFboUEXrVl0wT3s2SyVgiMbVL4
XD5Abg/k4LzRCsE9spBc84tGdcppRdwwnQw0QAKTAzV5DoQ2u6LwgjWqmNpg
LBqb63NxRO60hAFXAPe9G8luVh895dwld6OXZOTWQqG/hZFzwBj/p737Dooi
3BZFT5YgOeecRHKY6emetSQoAuaIGBFUBHPArCBRRVSygggoICgKSpgGGlGS
AVEUxYwCKgKCogQD8nCfOvvVqftOnfvPufvdU/OrWlVTMDPdQHd/36LXt6Yu
7wFIC7lAB3s/vCvrhS7XVugqvwZ65zogZqo2lt1jY+hzE+yVsMS2bVbYLqyK
2awT8HA7DYKfb0G2YS2s982HUpYS6l5QwgVGolg3KIzm3gL4xaAX3tY8hWk/
hXEwWA7PakjgDp+JmNw0ntt6doFX+zvonvADnGf0gvdXaRzZ/hOSk9tgQaQx
Wjap4MbsbFhT4gN1m64C8fgneLr2gGO6PN7tkcAcLUPcfJ3AI/MscPjKFDSe
YYGVHib4dRIXVSs5WBQ/Pq/oegWvTcSwxKMF3g2+AuuYX9D4RgmvcTXxdJA2
Pj6rhx/NLfHmA100niuJHwqvg1NwL1w1Gj8WWin8ONEMyQBdDP+uiNqdDTCn
owe8qt7Cl7o/EJrcAMTiVli/WR4rphoiZ4IxSpVeAztCAF90joH07y6YVyuJ
scpm2GJsiMWxKrhvsQAa7boBYlUS+PaWNO6tHoaDBSPwbPsb+LLsOWTVzYFB
q1PABJmhOccYORGzcYt2GkT8mViZ1pfOJAjElof311G6CXGU+Ml8Ym7GQY56
wQzOje9CvAkrnrBf9E2h2+fvpjPdF5XZtEY53SZ28u/f8/Hx/bfzKpdmH3WV
pfV0HhCda9SoZ8mRZMCmT3RLVA1b5JYv+1foEeLJQCy5f/Fykin7Vd5YU08u
qrSi3pOJVE7Btcq5Jm6Mq+pW+BJqi/Qtc5zraYlZ84Rx9YqZmKVpiuvtXoL5
4Y8QZ/AdTFcNgyhXD/1LfkDuji6wdfgAEyUeg3Loa7CMUcLBTH3czn0NQ4qi
mDrQCXtO3IPN3hOx8aQ4Ds1Qw6szv8EiExnUE3PFnXUkRqTsw6w7FAbdk0Ki
UQLdh2yxMX8CllOieHXLRAxZr4LhlrKoZ2eIHt3jedo2DZwzOAhOjgoYY6mM
m0ObYFpgOdBRtTDsNgJrWspB4HY3dLZKYq7jKwiN7gLD419Axu4jhB5XQWK7
AdYut0X5ZiW8F/ceyvabI/u0Ex7WEcSs8rswS+QttCeNgqBoB6RJi47vjwb+
cbDHU4f/1rmbY1WkNu7aaYtfw+1QokQG99QroPw8R2wqdMDaKlm8tFkd65wd
MPK5NRadUcOQlSZoWKaO94y1EYLYeHbfRJz/WxmTW/Tw0kZFrNxui2v7vPBB
ricO6c/BhgoFlG1Xx/pvehidpYUVkyehQfoElJ4phnriyvjodyBkfLrLPT8q
xC1sc4ATByJBSjIWnu9MhclJPBiK6AfvmfVwtKsYqvNr4CtXFcmz05EdrYsb
pMbg/Ola2DeggEESX0G/YCIWvvgOJc7d0PxQAVfMeA23F32ATzZCqDZUD19P
+sIijWIIU1TEPTZcnEvb40c1d3wxaxEGPjqELw3d8TcXsV7LFMXOySJvnjjS
R8b3f6Ywaj/6DTZrhHDjNWmclDoB1em3YOk/PheZTCBHaz0uzLHBU984KFVt
i8bTJNHstAhe6hHCCy566HVADo/qKGLJIREMqFXGZ/PkMH2FEj4JUccCLzG8
PK0Gbqk9hrdusthnro9fUo3RO0cbN3yQRNGQT7CjTwTX5cijS5sgXroqiVvz
3kGsVRGUHyiDrCpp/Jj5FhLv86BKRhDdl8lh1wtbDCABU2dRGCWvgo6Wu6C5
5SJ16OH8ilt9xyu65FIpy3g58nr0h/L78yvKX745wVlWGMPZERNG/EwRJg+u
20AqtAqRN4X7OBOahYk5N6V4Zbo/+fX7fHx8/+1MTETZNp7tPHHJU8QNSoUa
UWkjVSwNOHjemn5TKMHLu8Sl1b0DadleEdp3ZRxJLh0g6SERqsIhl0y4spI6
qrWO0H4qxTXwMuEKLLPnfiyIgXene2Batw7espTBpdZvYU23BN7NF8L3LwTw
xoFcCHAQRLOlZvh9miyeiOuFpD0jsKtpFNy3tsL8Ox9gdep4Hs96BnVhL6Ei
bBJePKeCAxeFca2NMcptU8I7n0xRuoDCSybTsStRDpGjhw57uDj7iRhm+ouj
R609Fo3PRSLmimPMQUUMCZDFkBMZcLDsCsRybkNWTh/M/9AIlf5VIDgxExI7
QyFU8RS4L8iAo7Y34SZPFrsuy2BqtSzm9U/FNz7T0OoXYpqVHM50lEafXSJ4
VX0AOi9Ox/1pzpjzeSKWzZPEjWs0cc9bHdwkJIACJpJ4NMcUtfrsUXRkEj6W
U8CDxpPwY70RPuboojRbHV8HySMnRA47EpTxDWWMR/pJnLeJQON6dXyg0QmH
L9wGr2wBjBoxQv00K9z3QgcPMMZY3T4JPcafbyZIYNjJaZi0wALfJNti93Yp
nHjQErWsrXF7niguTHsOpqPfQMpGHFmO43+Ds9+h8WEETNA8xj2W+427YdsM
aOt0hWnb50Ox5zYYPRoD12ti4dTyGJh5PwJqH/SC9C4ztH02EUW1O2GbgTzy
tNUwtF0J33xtg5Nra0Ai9zH435qA+1YL4uixS7AOD4NS/jZ4m7cLcnvqIPWw
Pj4yIzC3aBJ+2+GJymwKez+54KiHCH7qugJMbTH0RlRATUQpPIubAzZJFDT1
+4BUQgY4ymhgQ4IQ/p77EtiyGvg7agnWLV+PnUussXuHGY7s7gab5GrIshJC
086JeLZIFrWSjNBJhsBN4VLocFYDbVzm4q0lPrh/gStGgQFytgvjnCNfIf/c
H1j9cyLKhTigoaQljnQPwOeK+/Aw+Be4h+vgxmBVXMq+BQkLLsNow0Uokn4M
S9/1A8QVgMf4vO3eb0kMb5qGK36a4Fade3Bd+ww3XPt5pdIxRaY2haQkG7lU
l50teWr7HI7Zuqkkrr7A2dX1it4dVk9fW9XFawh7SL8OOspxFosmd5ieJq/7
RpAesg7EcQdvnlbiHv7n7/Hx8f23+35xxCnuuwzPpLGf/bSzjxPX/IfTfqKc
2H5GkNie30IcntVGqPzWJu71RXO2nWgjMa+ZnGYoQnYJjHGkhKaRCnnzK2K6
lLi6DgHcYKn7FexrKxnleweZL0/bKiV2+oBF+QV4ysqCMa+zULikE7hMOWzd
IY1SEkr4MvYdbMY3wF1+Gx7sLYLRoAn4MlgBlZzew6Pp1bBWejxX/2KNXUc0
cbaZCCZNF8bQaSNgoTAIQ1wXXPVRE4ODzHFBvA+SQq6Y7qeBd+/dhTM1AxCm
b4ymUydh3N4P8APygbRWwBcsOVT1U8JltxtBaOYl0F1jgiUnZFBhVh1Yxs+B
zMQEMHIUxct5LDy4QwG9Zy7CFvNwnDawAic/skTpb9K4zVgAd9R9A5v7IrhU
mMQH2iz0nSmF6zLl0LfnJ5hKOOGXmxrjz3sOf3Z8hdBFohg//T1EuWcA9+pD
CO1oAoUzpfBduwEUCv/AGp8uqIkSRuasDU7b6YZDDfbYoqSKxisnoOzmQdg/
Twab6jvhAiRCfuctcJUWxRgdErUDEXPzRTFjqyYutDFE7VQ2tpuq4NQKMyxR
tsYIK1UM/DUK3Ew9XLHKAqVn6+KtbA5mWExAraFTsNqiAMJv3YRf63lww7kM
hjvyoepmCtjEdcLM/MewaTAYCm0vgnX9ENxapY0pk0fg0nc9DBy2xvSZZnjN
fhhsfzwH57p7oPnoMLjmpYPd9wuwb9YMEKk3A/vkDAjL0cKTPQoYJSCOw0sU
sNZYEK8PN8Nhdg4YTwmEl/OmAkftPBhtLYOVq3hQdyIXjDpWg/GBAe4Jzwyu
d7UhXNzIg6OvHsBY6hO4EiqO6/Z2wqVT+RDLLoXDj65DQHkqKJFCaFigjgcU
VHB5rR0S1bPx7FQD1GhD7MhfjtoI+NJQErefE8D2GDncHG+AXx1McVWcIg5s
ZGOggCXOGZ/P+Wdmw/edrXBopQP63fRFZq05KsupImdhF6y8cAFmZYjjwVh9
7N9miJe1RPBXrBPkbpnHnPDex7QF8Cqnj5ZTiu5nqaTlBhVHK1dwphB9nM2t
sRz7cppmaGuej7EkqVGnQE4RriK6zJ4Rc09uoNvk9nICleTI4cEDnPlrZWjf
dgH237U8/+rrAh8f3/98gbtKSqzOtjp9rCkuqwm6QMtteUBjxiX2hk5fckNS
Lpl/fDN57cF8cuntdNL1VyvpEGpDuvO+0LzWK7RHvXa56dYQzv6TXyoSObvZ
6r0x5FD4JO7B1AtUaY0Gmbj7WGXZJJ/KJaVa3KLE59yK3pfQEqKA6Y6X4aL3
K4hf8giUhrvgeFEfZNnWACUhi6mFv6Br5BroJbyCoKav8CFCDTfvUMTns7Vw
k7EBrog3wpTxPHQnxw5581VwzUVJJPLNMdHLCM9GP4Gf+y5ASv4LOOYzAuum
i2G6/kvYfiYdqv1UMMzRFF9J6uBu+Vb4fHoIGFIHG9YaYpOMGh5b/Q2ePDTA
774mqNhKooaBITZmW+CquSswu9cU/W2E8epkVQx5J4AzXSXwt6QNVmtMxVXq
a5Hg2mFkuAGqZY7BcalRaP0yDGmX5VG5+wksPvsGbp19Aqt3ZkP3w3YQuqaA
b6TF8UxfLXSPjzXCk/thb/gEbPIyxEkOLnjKUx1Row6E7p6GH3YlcFD5MayV
qYLJVy+AxoP14H25Gs4+kMWxCGU8miGHax5oY2mIOI7FqGHOTztsZSmjaLAc
Nozn2/t/meAOxhS9WrWx4YY0wjITnGIljeuT7kPHZln85umC22fZoWSeCYYI
6yBRK4NP9QE3RBug5vpkKAujgFpQDgl1Lvg1yxTfWGqj4JvZKNWtii3jOXAR
TxAPpbXB96gTUFrwEG7xOsAxrQwaK5IgfTEPypptUfrCHHy7TQndWDEwuiID
FvrnwMqaJFDaXQiffLvgTroGmhLmuHWxGjp3mOC5TlGc7t0A2xfEQ6mVLhQe
OwzZnw+A3tx18PjuVtia/4c7LKcINSenQtuOeFCZehASfCpBLGYAFP1F0F79
D0yarICvS+UwwcAAr7+Tx7RMAVx2aQIu3KeG9h+NsDPRAKduUEExwhgbf3Fw
6Pgk/OlogKbC70Cl6RxUufXC6TRp/P3UANdHmKJfojROcm4HT3YkiM5/xd0V
qsXtpTMqqxQDK59t8qVylkRRZjuWkEE22fQeM9GKvdo3OfIrX4+P50rER9li
XvfYNPa0RUt5ssgjR/t+kNFH95ADc/XJT9uOsOYYW9G3Chl6VhnQD9JSWE+r
I0r/9vT4V18X+Pj4/uf7u1b475rh1a+PO60MLWbb7zrPPny5zFG//zqxh/WA
mLHLk6jDs4THOiViykZL4kLgM96ThVx2+vxiNoYx7Ns3ynm3Rfw5N87Hln3y
yiScH2hSWUw357SQNvn25RNS3qeYzKydWa5xnMXErRGEidXZUPSmFcKOjOfN
XtbY8sUBJa7PwurwP/Bh5kSMbNVBt1hblHgfgNr3TPB4izkKHVTASA8xDAh3
Q/tMA5z0bSFWGLvj+TOGuC5KY/z1A/BZTgRnyNfAxjVJYOpaBPN29EGIVz9s
OfwT9sVrINmqj6SdFlYlCOAGt/fwcpEIvpnWCid/d4B1vCwS4kNwbukX6G2Q
wYiNizCGvQalk7iotd0Bc9RVMPqAIQ5ckMOLw0Y4x9wDDcOXo1ixF2b+mo4m
hdPQ/bMBhvm/gdW6/ZC/VARzO3XwuLQSJo8Ioby2ElIvbPBFsjXK2zqh88hk
HKiXwZtq3TD9whisv/YD1Pt00blCC7OVRyB/bRKoXfUAq3Ut4NNbBQ9ftMCw
nCS6VbXBlhW34O6JF7DZqhuyQifjquWT0O3xR4C7Irj6vhZappoiHEMcK1qG
tcF2+C3vO8jcV8MvwmroX9QB+dpD8PqkDL4+JYVPRtfjnc6VOC8Q8Z66Md7e
9AomevyAyLda6DEYDqp7lODdzxCwDGwBXRV5LGr2w8iFm1F+7hRUHx9jJ8rn
w/LZl8B3EYGxrRwUVVfAHXGJcNvrMKTnd4JygC6a1pmh/56XcNAsFjotq6Dm
viQeFddFj24JNJZUwNZCEi2KXHBlpSMqRpgj2WKI4V42CHZq+DJgBDIuDIMl
3oF45fPjeXkiXAs/Do66K2GMZsNX3aNg8YqA0gfWYOF9EbKDouH5yAbwW/0E
DNdMxjJhW/y1RQxh6SeI/d0Hn41HYUq2GA4XCmCVxTD8WDkECvtU8dPjOVjq
L416hc6Yq6mAx2T64dsrI4z0ccE/AQsxIL8QNjq/5W4IeVu53fJKZUXpUMXz
yg7SvlGUEjMVJ4UNOujTj0N5r3A90eEZQtw+96NM1kuH2Cg6PkNKb2Udja5y
kpEOLQupPUZ4BD4nXk89T6DZSZaqeghv5F0gu9u7gD13tQ07wyn6H2v4+HX8
fHx8/6f9/exPZ73JjloWNx0vxN3klV7v4HW9C+JpO+XyJjv78vZfCeZFhfNY
gSo2rBjTeaUX3IQdD57Xdlq+tKAsYHwIPZaXwfMu0apYPvkh/V4qlV5+5Sj7
O6VK9Bf3cmbM/Ek+TvxdsVvZiYkgw6iRIDeup0Us7Jz9HZaammL/2GwUXS2F
MT4iuG+fJbb0rcbF4VMwrWsy7n+oi1KrdNAvQR/7I2UwKnYEGu6L4IFDimh3
QhnfpZSAcH4U6J66BGHSceAlkwpjQc1w0VkErVRFcNdkfXxqPRfrl9rglEZx
3KgihtcK1fFisATOuVABo0o9EHteEY9rCeBWnYnow7XAYloXj1SY4oT9ovhh
jxzeWbARl3+fgXEvNuOwrQ86vFfDh2utkOUpgt/s3LA3Ug85mvfhWU45rG28
A0SzOKoJ/4DB208Ap76FmdfFsPmKF/ob62GMSj8oNL6DTsk/8EimC/ZbjMD6
gWnY1q2FEl0fYJ9IHSzaP55XB/fDWt4LiNv3B+5/V8VzBi1gYJACi5R4cCN5
Iq7qN0a7z1a4fI8BpiXoYdA8SXQt9McGKhw7b+xA+6ip2Mh6B1uCZHHZRnUU
FqmFSeY3YafsZ/iUoIy6TWYo9MsCJV7p4GxzbezZqYcRbj/BQ1QK162tBo7o
Njj3wB8aCiJg1b4cmN4ighVCrmg83w+L985AnxfDULVLHkX0VuGQ4RScb6WL
bIFUONlMQN+sbDj55Dzk55SCuEkn/CkyxMwMeTQirVF0bApuOGyGR+0/gYy1
HN6mVfCEqTjeea+MKz+ooEebMcpLSqBpbw+MHpDE3XtfwO7vYWB1KB+ct0SD
5cEToH3+NtxRjoa+0Cioa00Apv4M2Nseh6AFGyBFIhESNtfDAodr4Ob5Grir
xiBI7DFUHxPAxerWuCtPD7fceAm3bumgYr06ElnlsHDgDbw/rIkZ4oqY/6IR
NpdUQr/gL+5CRx2um9alSuXUw5X3zhwnPe1ryN/mNqS2oBTnZMEoLfn9Gn29
KIxtXxDhpKx6kZVn/Mhxl2lw2YsPYjylohsscXXlUtdNniXr1813yo6s52nZ
ydBChsU89xzjMoekAFacuX/p0Lv1/H49fHx8/1J/846E8/bFp5amOLjMCGPN
WF30jzXH+rqbWIlRUazk3TTrx4pHTrz60JIZKaf+ec26ejXascvXpbStwIvl
FBlFCHyh2FPzS1kfPfzYAbbVbNEfmcSz6WXls5q1qIe7q6lpOqPl/k3BlVMX
c5mQ3CxGIjWN2+LdDCoeUkj2vYT8KyboUyyHQscFsEP+Kwy87YFtSYPwsl4Z
S5pEsa22GcL2NIMhVsHRHbXQO5oEl/LPw17FEGhZdBaq3F9BsasYvhmUwN6f
YjhNpxYeT9HEp57mqJ6ojD7aZqg/0wO/GQigxNxQCPt1HixWiWBtmC76HBsf
U6NMsVfyLoy9YsDYWxrjchRQxB4w0GM/3nVj4/ZzH2DbnFJoDh0BzxJJ1HnT
DClG9+DA+yewQ1QIY778gENJXRB+UAK3DGuioosyCuvIos6r6Zg3aoGp1XI4
rCqD7s8/wsWdT2Cm7gfY0UOi0HNJTN9uh7GvCLSyFESxM60wmtwCzhtvwPRV
x4HgXYPXN5SRvfIncH90gYeKKBI6Sjhiaow5maKYIiuNIrFumKbnhQdjzbHr
hQnWLtPHqcJTMOXcV5iw+QH0nlZBA40eOMXSwG/TtdDK+DG4js817n7Vx1oJ
Kaxf9ABEbjAwb/s96DtUCPIyh2Aw2Q/mPwe498YICuWPQkx0EaR0F4Jf7kXY
/P0jyPhZ4OVpU3HmFCNcd7scvr/2AsOe2WD1KhpilueBUWIHLAyyRSMvD6x7
ZI1CGlp4Y4ESqp+0Q929Xvjm5xS0/2mKgyoy+NF+GDaffwPLl0RD9IwGiA/u
gtfl1RDaeAL8nbNg5Wg0nHp4FQYWjoDEWA2IbHwIErflsU28Ca7pVEOwQAOE
Xi0Gk8334Sx1DZRHpsIStUS4ubodzknxoGaSGs7xsscrlWp4WMcdfyWr4GiS
LMbUSeLbsUWgLPCWe2N1beWmPRuZry2NlWEaRKXmqhiqeZ4FJV2dRrvtT2It
0Tdi79gzyi71qGLH6RmwPUvNHR2sVpWMnz8OxeIiJRonhJ0WFj1zKvT/t/Pk
79r8v2v0/55PRuWDrBGlKFb8nB4nw+fJ/+E84uPj4/sfJSKLdfqAFB2s1k28
f7eP/JGbztmo+YZjlrGQzGuyoHr3V1PvmwPLH5YlMCLbq6ht4aLcg7JysEzd
GL/7mWPqPkl08JqALkUTkNckiav9coA0HwMH29tgbb0b9qzo4apd+sjdaHkc
TvR1gf7oeN4oLo+/CrugYP9reFKjiZcaBFBAwxpvbVyEHgus8d1tA0yInISt
SkIoFHsdXq7rAU6PMDoueQk7LMTQ5rI07l4aD8OPEkAiuBtelb4Gj77PMLTJ
Ck/t7oRAmb3gmr8YljaFAPvkMMxqdcGz/ZLofFkIp8uNwA6/Hjg+MgJ6U/9A
fZA+mqeycNlhY0zwdMPLj6Zg/Sw51P1MQ4ThfXAOa4Y8kQZQrxTHhzKyuGa+
KarfVkXRTUNgNE8dl60wxwXf9HGmQBfU/lDGc+aT8O3Vd9CjMRF3rtXGMh9D
fGBkj3VNQrhxUBitutrhqeYvCMu2RZdOe5ydOhFHrtnhxLlCmPVHBBOXrsDK
ch1cHT0B016Ko6WWHqZnyGHGjlb45NYA0jUPIHcRDSkjb0ApbwBCH+bCpc4g
2PVrMzybUA2u+7KhLKYSyK3COBTdBp2BF2BYLx5WZ4ng7VsTkZVzA9rPbIOw
rGUwkBQO0w264dg7PWyxcseTLBPMV9NE8TJTlJSwQuVaabSvUMdRZxXcsKgH
RgZfQfrHXgitnoBZnb2wLaca7NRS4Z5fAhT6N4HznstgKpUNe+anQJJbARz1
ew7uD0sheIciNrQ0gQNEwGrBZthZL4X++T/g4/2P4FXzCm52RoD7++3wOzgG
5jjchIdBbyAhWhgdvk3FG4+T4YdtHnfmbecKOdKciZznWzlEplMKIc3UK2l3
UqXiK9madYts2Hqc1G0JJbK9QnlbqeP8+nw+Pj6+/8LpM5L2hce0yh6XhrA3
XMqhFa9G8dqjDYjogCSirzaHvnTVj5AXEaKk05IpYtCL+hmSU37ytD4jPC2V
2mDkw51pmMpNCnoMZbnCmPReAfX7n0DxiDF6RvyBnIB1IGy+D36fy4T0HT0g
06qHiiIq6C7+Ag5fpcFxUAvfGAii0lATnJMTwQtZiDFlbrhzvzWaXlHCDBNN
PFWnibeVFPCc6jc4WvQQjt8SRTrpKwgY/4DEI2PgPvIEmN0GWHhjBKZElAEz
jYZA+QaYE98MEZ+2QNyXKvCPssSB1zLo281ApOwNeJslheT8L1Bo8QsGNAfA
5LAOzpQfhHMmX0B1jjxeVpTF3tWCGHf6FXR8rAKoU0Krgz0gbv4Ohp8K4YHr
n8En1hi9jnmjkKQTFj81xD/5ajg1XBHPXLwPI7n1sCJ1DIySnsG3/j8gftYE
q7YoYPThm+BmXAs34tQxI5jEYMIWrWbI4YNUDTQNlUT3bEUMWGOPb/MM8P06
ARSL0EY1Wx1snSOKCo/aYermfhhOqYLCteXwzqYDLq97DCcXNsCz71/h/vGX
8GvaRHz+QAZ/GorhCG2KnY/VUY0rhx/XtoCU1Bmov7IEDtoHAc8hAOZkBIKc
ykMo1TDFZ05+WKuxEYV7zHB441SM0fLD1flLcI6RGJ5UeAwW9hNwgVMtrNnz
C6L8RNDUSg4l9ynitwIRjNanxvddDPODK8FKLQeenT8I8SuPAjX1OxwwFcOu
uWsgQ+4ufPupiCcuaOKZsiFQK9BAyzQRfHtaA0v+mOGJLjnETnHcd7IWlD4I
YP2uQKBD9ai3J6O4DwUEmLMmZZVSUzPITYsdqI+GT8nM4RVka0ht+aeRucRW
b4Y+YHSfUHXvJpwG0niuYStZ3vnH+ffn+fj4+P4LR/ZtvW6dfNgpeVFe2ZXe
R+zF88PY99ydyuKHzXhWbT9ZUr1T6YRvCeVCm7TKXfsy2LUBMRytY/pUz8RM
0jebWynYGFa5eTSTGo5DykS3gmtomw6JU1qAd1Ea3aa0g2DTUWifcg7cHqXC
0EgpeLhlgfjFy/DspigyTU7ouVMWX5u8Bb+Q8Xzam8Tp9d7I3WSLah/6oJYY
BLnhOtg+ntM+Mi2Gb2wZvCrpjIcTKfw9fx6W6Dnh+hgVXPzIFPt+9wNbswWK
ha+DqsNzSNorj+md8fD24BV4f10I7Z5+gEGtFKi364DvHbYYKWCJHUvV8M3v
38CsFcK6z72wxuUdqCu9hJRTUuicb4W6Y7ehZn4VVLyRw8M2DyB+Xizkdh+B
L4/eQfOqCeilQKFBaiNoNaWBR+AIrNikhdlh5th+QwVXvbkNN6Y0gudeKXzC
qKF+Rj2oVaWD7/IMaBt7AeI9Irg9xRHPNulhvIA+rlgugJGLxmC1vRD6X+qA
4OoKkHwtiJzHfyCv+T1c3vsSnlo1Q0/YKHzIkcH+X/K4prsErHdeAvWdn8F8
42NoeSCBnBkWOFt8Alr/GIMd4QqYrSCK5TgI1ZKvYPoCLfhaLgJdLoIgbR4G
85cCiu/0wYbDa7H63Rz0HJ6Llc8I/DPVBqWqXfDlnblofF8NG7TksC5SDkft
JuEP2gSfmuthbIQ+Phjg4GedIJyz2R81/ryDGwviYXHjSWB/rIGI5eI4A8cg
3rkX+me9hCtcaRzJ64U7RjLoM1EcrzkZoRx3Cr7dMf6zqPbBvJalYBQVyF2o
V0gWfestv3XTuVL2mF5lXIg+VbBhOylVJE4+U31Ezzw+s/zqxZByz0xnYp5g
AS/+hhtb/7Qw/UjLne48lFJa8FnP6fRXG35/Pj4+Pr7/wt+aglmRCaVzvMNY
RyoaecZiUrTSC2H6SI8AzTbwJzyvXSSSok8Rb25EEAemzCdcOkKIW29LWINp
Y5wNSxPIBcb3yQsXiznq532ol4H7K8XEicpMndOVi1lxMOnSSSjNGIVDHQYo
6NwKmke+QV/pdVgiIYVrNslhddF47n/nO6za8xi0BipgQ+hrOM9+DzdPXoLz
mb6wI/ciMBZXoSqxHVjPZfG0qile4MxG/3VTccs8Dwz+aoEzrcwxes9kNF2q
hU+yDDDvhRQmxHXBjo/dsLmwBUbf3IXnT0VwaP9HYPUUgsX2dqh98h5irIVx
sog4eqhLo0mQFkpP8EbJDGOMDxPCkqqXEJDUCXk1n2FBXDJ8jqoD1WgJ7Ggo
gfTlnWBcGQ8e8SKYc1kGqz2EsT3uG9zxqQHTPQ8hh6Ch73ETuN2Wx+a2mWhw
Qg61DEegVOwLJCzsgHMJdSCXPgjX1AVw7YGfsPbbD+B+n4wpdVoo0PkYWj8/
hDPOvyFQXBmfHRgAL59fYFwtgk9BA7XGVuBw0zL0y5qOYttdUXv+NFwvZIgK
+zVw86UR8H+igkfes1Flhix2EeK4crM8at5UxPMy0vi+Qhk1WU2wjnUYCONl
8GtVO/x84ok6+aq43kUaj3nbYbaiO4puN8T9x7QwaNWk8RydxPVfVXDtxnoQ
sxPC1YsV8fiYCb69Nw0bQ/0xiReKOTZL0bpqLqZUaeHXZwPAzhPEPL9+2JA5
CiVlCshrVMDwl1Ow77wFfolTQk2TD1DwwghNTBXwxe+LEMlbyLWrXsJc9f1Z
+fRXbXnxW13SIKCaFGtIJrU0osmLivHEnjMP2emTzvLMxCI4N4YVSQGWIMm1
bCQ+ziCIS0VXWffkTIlD2QnEysBwdlVdbJmo0QR+fz4+Pj6+/w2pqq9ZwcsY
ntJkR85+Jphj9GwWx9k8mXPsy1py8brlpL7dcdLNcCOZtH6Es9Z2KTnoEEw+
yvckb9W5lL2VO8BrO/KG0yBrWj4Sm0tdcc2m7qhpUQ7lXyqXFk9nhkbGKB2D
QG5ygTN3x09liJ5dBevnjEHQazkMDZXCO9Fa2HJLDo+2i+Bj+35YvDoP4o+e
BGb2DbhmLoTC9sb4tM8Z79/jYoWsC8benYd+tA1yHMzw6kUW/vFn4/toUYxf
0QVXeqXQjmeOCxYpYXr0XThxvhWMLuWDqOVd2N1WAswDBr5d0kDdiFFYvFsW
u1+pooWQInpli+Oloan4vEQXRVTkcXbYZ7A8XQbihwTRcOI3sKKfguUGZTQd
GISZng9gnWAxpHd/hE9XvoGruAje9f0FGscbIVxADHdGdoO2mBA6/FHB7gMi
eMOzA5aSkvjkriQmv2kAVfMbcHN8jNwwRRKx+xP4DD0GIRBBf80+qM/4BHWh
j2D4fQeILJDDmFOSOHuSMp6SskS/PHf8OuKHNlcQdTaa4IufbHRlL0YP12kY
Mc8NpX5r4WDaK7BWeg07e+6CYYMg9j8fgJJjuui9yBZzzYyxMVgFzzRfhlMl
ByDarxlsrv8Ckw9GaLnYGk8VqGO6jQEWyNug3yQLdJyojPV3FTFtjS4u/fAK
foQI4D1zWWzpmIRzHk7BTZ8RhY+sw86MzaizyByNG0SxvLYKNFd9BPXrGmgq
rYvJU0xR2uY9HA4wxFa3aPgmXsUtT/PhLuRO49oZiDKcmZMYcfcnZO6tBkpV
KpIqMRMno/2UyP27HxKpM45ybn2MISVf7Sa9ph4lFcM2kCHtiaTEaCg5EBVG
ti8PJKvnLSPfHlIjFbe951ibnOEE7pQgdHe48v7W9v2rzyk+Pj6+/xt0csRY
Xn3vy+p+LyUuuyUQi3rCiGjXTGJ3aC5hEBJIuPULczxvVxIxVn+IrrhEwtws
heBlbOYpPad488+2sjzmreDNr24mNiQqVrzTCi1nX39b3jHZj7rz4DTVeuZ6
xaLt4pV+4e6Vtj4CTNmAaEXwB10uERAOZoZ7wf3sBPzcII1bl1hj0TIrFP2g
hUWS2mi6UgfVkoxwZLYb8jAAW3YeRN6xdbjp9Sq0PrwcXcaWYVfKKvxydyZ+
fiePNxarYt0NK4yrM8Y6Z2l0mvYD3q7RwaF7gpjzSA7vm5jho+9GWLZoL7pe
d8EL6ybjJSkSP8Rx8KOCHcrPBCywWonPxGxx5Zgmdj+djOcJE9wXqo3RyR/B
WlUSjdsUMJp5DZUfRmCQrY+lr+xRxWAYvgbehNZnbWA8rIRpDdboZAZoWWSH
msbqeEjAHL87TcOZv9zR440SSvzRRJ15tmhqSeGPmXpYrSODv5ivUO7RCC/K
f0OXkRq+H7ZEwQQ2yo0txTvMdOwS98KJ7HkoWj8Xkx7uQN3BXaihvBhdFDag
zM9I/P06BHurPXFRsDNOymWhTToLjapm4CQvTwzbNg23Ea5omYHoIOaMUmLS
6HP/FRT/GYVz2RNQgdbBTaEs5Bi64hHBbegyd/x3bO6CaYMkmq6YhT8emaP0
Yld8slMeGWkNXGqzAM9WeGJUnQ42uM1ADwfAuaecMfAjgb+3qyJENcGbMjEs
XJMFhxLDIIR3lZvef7hy39KayksVdyorA6wrr229XuEvx6ae5JZSKe2GZEA2
U/7e4LvTj8didNkyF9p3w1lWzDJl+orGIbaaLU1Is8aIA5hDdO7sIeK9aXb1
BwPibH44kRaeTTSvKyMwRZpYMu0iz/6lE29RvTHrb13/v/qc4uPj4/u/wWCp
WGnzrQ9OGreX8bJeJPCeW4fzFidk8fbLlPDaD4fxOn2k6Fj7u7wZSwVoZm8m
b+OKS7wTMzVLBS6nsgz1jjjxms6wTv4KZXkUi3BwwU3C+6cAJ6NwT/nLj83l
BeGNnA/9/Zzdg+LkrpII0my7KAX+1eU/19kwrk+QOaTmwuzf/bJy+29N2HMr
GvL2Hobzi7bArsCpYK0QDr/WxYFHchbc3XEdHprnw5xF2bBN6zKsfHIRkrMS
4NuZIxCgvBYepoXCys+H4dj8fXCiKBRmvz8CE8kk2Hr4IISyjsABtRSYdO80
3N6cArWEP+zfeQJ6TkSB9nhealEZAzVip0BBsQDimGhw794PXpJxYLgiDL6c
XA1XUyzA+YQ7HD8nA4emaMIM9gwwlAsDZ8vdkPWIAzNWW8OI2ELYRYXCl6hk
yMrKgcnJmcDtPg3HlqfC9G/Z0AxFYN8YA6fbTkD18kx4kpsGh776ga27L5T4
zAOT+R5wcIAC1+NBsIUbAddqjsCjglLYtukClJqnQdiKHOiqugxFmneh278R
pCOK4OndBlB78QhS4Q5cy70OpbFlIBpzCYpSLsHa69eg5WwOBIlkgJj1Oag5
kwuiT3LgwZ1o2Nq+ESBiM9wT8oXV3GWgVx4Arh0h4OtwDtxFE2BrZBRUNx2D
Ua0o6Oz3he/yseCzaCGY7Q2EMZkTMPQhGpJdD8Fer3w4ZB0H65KPwD6HSMg7
Vwq8efu5v0KFmYP7bBnygjVT0ShRWb98Ftkyq4I8n5FNBnYIkVEnWjiy124R
7VUSFddZ8XTJkXbi5PlInmx/BivupiD7VLgpi1v1k6V9xoFnrHubBz/FaLHA
Ip7SWzF6asVsHj0rnNe4MpF35UYRz31JFU/+jiZvx/WjLFXBySwhTXX+en0+
Pj6+/03D49fLjjnTSzi5N5zS0wRZMqx2pyOdCqwV20JZEzpXsAKir7IG7x9h
ndkVyDort5n1t/eAMW/AaVjo3L+tn+assf/bm2hJR4xj26pw1oXrUWVO0/vZ
bRvFCcesG+yzjC8RNWDDYxd6E7N83tK7/CXIdVJLqIxdcZQbbUYVJCdSZr6O
lWKxU5hpn+wY80fGTOoZCUYh04HZ82I682PaKmbDn9VMmu9qJjzLl9GNX8+Y
e61lFs+azpxcSjJNN7SZZXstmJTx8WbunclM8agVkxVAMO1iM5mwVVZMlB2X
ebJiBpNp7cxkb57PNJRpMUGrOczh9yZMqhqbkTlDMhfkpjACr9YzH5awmeOZ
RkzKNHvmjgaLUedqMqx1vZXu2qJMq9r1SvogXSnKiDJS/bbMB+tJzN3eP5UT
t3VVDpXIMkazbZjQQ7OZRSx/xi99KZOuNoeR2b+AWRTqx6yYvo1xcpvCxM50
Y54P+jBi7xcwpWlaTEqnOrO6WYrBjyLMg/w/lewF2oxfnwMjW2PLeE9cz3iV
ezIXjD2ZLw99mTtR/ozhuSjG49kRJmPfJmZtUATjvSGGifgUycy4to1pkt3D
6LasZeKWrGMm+G5lSp/4MhOTFjOzFy5kuLNXMxYr/JlLCRxm+iFDhg5QYe4Y
yzGee+WZK6DJlEpZMe9P+DAHP3gyD3pYzNFOLvPyBZvRiFJjbFa5MEnWcgxb
UZfBT25MVDeHCZ87iQn65ccopDgzNXbI3LQzZ7ZMGanc+qaxQvs3j5xYfJHC
mbHULEk3Mm/JOY7rpHRC06+XtzLFn71teBXR1Dyb6OvxJwJLNrCNb0c6bq5s
ZlWtO1QirtH2jx4XxkdXONrtWM7arRHDihjMZ10qC2VNXvZv/S4urwxm9Tza
ytqluJdlFr3wH8di/6FPjqqBPcX83nx8fHx8///wt4eKm55QyY1Xw073ynpo
L+lb9Puj0fRU2wXlz2oTyLxQVXJCxwQqmLuBikzRoe6s0KRiu+Wp+61DZLuv
ERWx0JFa+9SfWloRQlVcXER5tnlQ99LnUKsGvSj8BNSlREuqLlWcSorQpChk
U7ycKZTbH6BUN7hSo9MWUJ/zWFRXhytl+HAhdff3ciqubStlcmU69ZTmUiFf
p1Jtj+dSejs9qZG+uVQLsYs6RK2lhAPZVFH0bOrRZKTm/rKjGkakqb2yRpTz
6x6yYNtL8sx0QWrldzVqgZoZdVpbkTpHfyKHkgbJe79tqY7VyygkAqk/wn7j
sZDS3uVD9Y0EUcpHdlLd/S5UAOlEuWzhUJ0GXCr+lSl1oN6AcrT4Rd5e+IkM
vt9B3rujP/59Z8p1zJ7y/BFC/RbZSE09M4fqrl5FjdiHUKFh0ZSK6TFqddRO
6m7wEWrd8dNUmckpaq7IFkpeNoiaPHkTJeeygfLYvJtitwVQOw+spdzvrKEU
YwKpZP0NlF6HBxV9z4IKVEHqvr0qZZykRNk7q1GPHxhR3jVe1MV+pOROWlLd
AdZUd7kV5XFKicqzc6B2CUlQHp8UqQMZTpRnuyWldl6X0tgwj0qQmkwFaxhQ
t3PYlFd5LWVn0ULuuuBIzmvZwpvUEFfe3FRIv2iTKb9blk1vPCXr+EXkvePf
/lT/6uOSj4+Pj++/V0b6J6cZR00dby5dVkqvNCZLts0lD88QJk8UbeDMenSG
dmDZ0xr36stbcneXX76jRhycspDdWLuELmQSOYet1pES2X7kKbXlZOgoRcbd
fMF+vHZu2asnNCu7o4YVNEDx4rNfOrV/sON1cfyIQ+KTyV9rFUk9CRVyUYzy
P4IXoEpa3JEmQcqDTCiZR5bXepARj6aT37V8SAfNWeTdy3PISq95pMKz5WRd
mzr5TS+R83wPj5Pa08lhSlNI/QIl8ratEumYeppcaRDDafk9QPvoM2U6x/vL
Gg6HE0NlkzinPQSIzZmzOK+sZMgOVCHZ75X+uf0/usrknBmqZFqVDDk025oj
krefsNvE5WnKqLNtB0U5f+NdzBvWK2HD4prL6rzIxCAi9f4IMWFSLE89PJOj
b8jjJG+v47SrGJNXtiwgyYvzyXCBBWTR0wVkfcI88mGgJzlD2YtU61lF+ngb
kM3DVzg/8mo4JX8ecZJEppNCd59w6g3LONEP+jmW6ZlkrkYl+dHAgDREAfKI
VifnDv2Rs022g9ex8SMnyH83+c7elxzZtoZU/P+I4bg1ZGa6P9n/dh25Yf9h
Uu+zJUk9FiVVzywhBcPWksP6reW+D7XLtSJu0tPq4zgy965xVM0I8oi6L3nT
U4z00Qtmr+t8WFam+5Nfn8fHx8f3P9zfXmxFyR6sA1+HeGIZT0i5EFnK491O
cr/OOs6R34vpifKF7CkWAYTGrU3sNduulJa49PMalirTZTOyOTYmOzlZN3MJ
Xc8LhNmXfOK2xhPWwMdzPFutIB70H+T13V/Juy3oz6t+xuPZrb7ITlm2ipf7
rYe+ePY2bfCp6R/h7XmHFvf7SLveHuGZnawltJVoIibzFuH8IoUY8L5ASJqW
Eiu35xCn9GuIjb+PsSfvmU4Xyy+kF2ttpkvcpHiy92l652AZ/WXODF51Xjbv
2hVhQk8+la1/sYB9BA1Yf5RKeWFLh1jt2UY8nw2ldHLuI9pz5/1/br9qXRNt
7f6Qnrz+Dp3X9IfXAUdY0oGF7KChSPasLWt4h+LX8mxiY9ldq06xF93ewPIl
oniZmyVoSFVkSRWb08HwkL75dlL5RiNlWo94TYSfyyI6hQuImrRLxIqiq4TE
9irikUEx8SeOIWon67Lrju+jc40X0lSFJa1VEEv82WFNf6pfSpc3h9K37sjw
zrpo0Ct23KHlVW7Su5LM6aazlfQ17jO62duCN5HIIqqfRxMZe48TmPK/hsiv
k8S5q4eIKJUbxGOh35yTZgqkK3t8jpOsTEbfO8OJKPhEz25OoutNw2kfLW+6
cr8TWWUVT14RbSTpDzGkYP9n9pb3DjytxD38/nx8fHx8/8P9e/7vPiTCW0hN
JlUYfbKr/BTnfNU+9qzgdURi+2Lemr2ePOlTl2j/Fe84SiULyEw5ilzptov8
Vq9Cbno4sXxxQjhPOEKU3h97lbe+bS9h1+dCDHrN/Ef8fazRcIA4117H200e
5VkJPmGPtJ1ivzY/84/Y+CCBLRdZxC4ru+e0UqaId1MwmRd4OZUnf+f/jenH
kniNV67xaovGStVd4tjH1m9iGwzsZPP8L5UNTopkG+UHsPdOjWHN8bWhn5Pt
dPuGu7Rx9AP6oss9eg1TS09+8JBuTyihiYvz2Ee+5bAzjyb9c/u9xafZRUdi
2MEVT9mtliSdG/qKTsu9R9/za6LfnG2gd76op00Km+ktd2voD5sqyt5Nn8la
s3yE5bFagsebak2n/E7kzElUJS3PRXJ2dq6hRZ9Z8bymnvlP9z+08BS79+Yu
9kmDuWxW6j5euuMcdiU7gl34YDW7oPJm2buvx50epZ5l3yy4y76YIVKeJjuX
YxKuSo5ahXLkU1bRG/fb/y/v/+9xoeksb1ldPC9uNo93nZtH9628R592fUCf
Cymib5cKlu+WJ0jpyQakcXEvpzjqF6dC9i1RmmhMV+n5cnYtjuOUp5rStrGD
rEWBExz/1cclHx8fH99/r9vEzpLIw+zisejTTouVSulVhtfpWfnqNNbo0rJF
JOeHvAtZZjyVPJw1izz3tY08cEuUWiDzjty4LYrcs8GT7E8SIStEbYnZ6sVl
K/uAvHY9hAyq3UFqGu/6R/x9HFQUQgrvBDL2xXunlrvCZT865P6ZX/6tT/xb
p/i3Ruxv3aKfxSaWMW/bf4i/X/v3msa/9Qricm5FEXSE48mkJayWdmdHq61O
7MveTnRdQSKnrV6fTLyh8M//72uMKZEzW1RJJkqa/HsfoGJUnreVkv4P+e35
9fZs5QFXelFMImf3PX2ysOo/fz13+euygq+Njn9qhVmELUXqH40k9wQcI717
g8mDXBfCY6MKb5Fc3//W/i8s8mb9rcmsbRQp2e80xzEyYD1r/7wKls2QDK/P
xJgoWydMvvBYQObOPUmOqe78T9//36NgZTBLIs2PZdYdz/KOjGevkk5jW6aL
E4lLB3h75iVz6jOFqToRMepH4AdyD+sYKRsTybYPDOEtvs/jGZ4zoHfOOsJy
aeWW/q3v+z9/JPLx/Wv9P9/KccM=
       "], {{0, 0}, {512., 240.}}, {0., 1.},
       ColorFunction->GrayLevel], {
       {RGBColor[0, 1, 0], PointSize[0.01], PointBox[CompressedData["
1:eJwtUltIk2EYXrsKqYQOVhCzw40VRDhxSDMeWfKvKHNrf7iDQ3Ys/DdrTjD/
LUZ0uKp5UVTagdDuYlE37SJQNFJhu+hGhSAygqK6Eqy8kb63xxd+3v/l/Z73
ed7DvkifN261WCzN6hPvXhraXpobRJNdWTGC4zULY5eqQRwMFadWlqP4otJa
bQ4SNpw+gd8N6u9sDOJWsn4IzB6PwSI23sX8aifjwm788pRtN5568LmibNMu
1nvVAcXSWhPvgaoaKu73Qr366ZkN0w+niK8EIHJa36fglcSHABRqYWzNwKLg
J3TyXeyFUx5uPkn8NQM++ZlzUXePgU6J/S5URUdjCiMPlVV1lDQ1gKY0BFZe
9tEfSUNkLqV95B1N4of00R+ApG07k9S3GGT+TZTzcieIfxRBt/BWkuyvkMOk
+NcO8o1kMC6NtCVgCs+hDPt4aVDf1gzrlQ3cFL5sBgmxjQniDocga9Mmopzv
OZ3eHka98K/pqBMiSxjDIkA7g/971tq532fnWWdGp94nveRvSbBOfw7fxR9z
Ylp0m3nWuRUk/lSeuu75+f5vDtclTmns71sOs9LH20buuTaPvZK4a4OMJVR/
FQXhP2CFtD90NIoL0p93ff6lCO9xGzi/TxG8kLpbQN3FIPe9w0U9j03q+Ogi
/58s3glu3sf6t010CfEeB+dw3+Q9bHASP3oFIrcSa+P9TA7y3UwH/fMB8BAd
6/1fxlcZ56qbfNY+PJB7amnnnuoGcEeET3fjH9yEgBY=
         "]]}, 
       {RGBColor[0, 1, 0], Arrowheads[Small], 
        ArrowBox[{{396.605, 148.47500000000002`}, {404.20715173891483`, 
         154.97171370298207`}}], 
        ArrowBox[{{111.21000000000001`, 159.5925}, {101.24725067182322`, 
         160.4548374188293}}], 
        ArrowBox[{{448.95500000000004`, 40.595}, {444.78042201901565`, 
         49.681963116502686`}}], 
        ArrowBox[{{162.4925, 101.82749999999999`}, {152.97115479894384`, 
         104.88429334635575`}}], 
        ArrowBox[{{163.1625, 98.5625}, {158.36622108719527`, 
         89.78778014176038}}], 
        ArrowBox[{{67.9025, 6.375}, {
         65.95631161410827, -3.4337894648942324`}}], 
        ArrowBox[{{70.4925, 6.012500000000017}, {
         73.94438455393666, -3.3728339325936076`}}], 
        ArrowBox[{{61.385000000000005`, 131.1575}, {61.28377597440063, 
         141.15698767170807`}}], 
        ArrowBox[{{72.53999999999999, 123.13}, {74.64824705371356, 
         113.35476116094813`}}], 
        ArrowBox[{{236.51, 107.1875}, {234.85333942410222`, 
         97.32568091140047}}], 
        ArrowBox[{{238.195, 107.28}, {242.24301943053985`, 
         98.13595610848395}}], 
        ArrowBox[{{231.95749999999998`, 86.98500000000001}, {
         225.2633436361611, 79.55611915720309}}], 
        ArrowBox[{{219.305, 50.10499999999999}, {224.6185428650167, 
         41.63350295274617}}], 
        ArrowBox[{{228.0725, 39.577500000000015`}, {238.01178879243375`, 
         38.477255345116134`}}], 
        ArrowBox[{{227.005, 38.702499999999986`}, {228.95375051889556`, 
         28.894219242644795`}}], 
        ArrowBox[{{233.5875, 87.2125}, {241.6978980975073, 
         81.36259036822361}}], 
        ArrowBox[{{241.6275, 83.79249999999999}, {250.92614248849952`, 
         87.47152811501508}}], 
        ArrowBox[{{241.45999999999998`, 81.73249999999999}, {
         246.71128427649177`, 73.22227007082239}}], 
        ArrowBox[{{188.8725, 105.80499999999998`}, {193.29300176586491`, 
         96.83509675983149}}], 
        ArrowBox[{{184.7225, 111.375}, {181.81107757596308`, 
         120.94179776460311`}}], 
        ArrowBox[{{157.7475, 178.28}, {161.37706743557987`, 
         187.59805989627552`}}], 
        ArrowBox[{{148.89749999999998`, 190.38000000000002`}, {
         151.30102878316976`, 200.08685579312245`}}], 
        ArrowBox[{{456.03499999999997`, 23.69749999999999}, {
         454.0732546602708, 33.50318994115409}}], 
        ArrowBox[{{297.63, 178.0575}, {300.65399311362125`, 
         187.58931334525448`}}], 
        ArrowBox[{{290.68, 229.4925}, {297.9454791301469, 
         222.6213419455379}}], 
        ArrowBox[{{289.175, 229.78}, {279.37473320498475`, 
         227.79133945920356`}}], 
        ArrowBox[{{295.25750000000005`, 176.2625}, {285.769997683635, 
         179.42276894377156`}}], 
        ArrowBox[{{112.685, 157.9775}, {108.57211133064915`, 
         148.86244943549266`}}], 
        ArrowBox[{{85.305, 120.805}, {75.34407861869596, 
         119.92179830419101`}}], 
        ArrowBox[{{87.98, 120.00750000000002`}, {92.02738496976532, 
         110.86317526240907`}}], 
        ArrowBox[{{58.557500000000005`, 42.56}, {56.06601267641819, 
         32.87534766156105}}], 
        ArrowBox[{{90.52250000000001, 87.1225}, {100.40277674453746`, 
         85.57973253490607}}], 
        ArrowBox[{{220.95999999999998`, 177.805}, {212.84253709720488`, 
         183.6451023982243}}], 
        ArrowBox[{{455.22, 28.232499999999987`}, {456.6630689307173, 
         38.12782981063282}}], 
        ArrowBox[{{471.7225, 110.11500000000001`}, {467.7749746601847, 
         119.3028748191035}}], 
        ArrowBox[{{468.65250000000003`, 102.33000000000001`}, {
         462.34409156617227`, 110.08912256843587`}}], 
        ArrowBox[{{463.5325, 46.85249999999999}, {473.2299842272063, 
         49.293565272188886`}}], 
        ArrowBox[{{462.4425, 18.737499999999983`}, {469.3868997046181, 
         25.933006427104345`}}], 
        ArrowBox[{{464.94, 7.64500000000001}, {468.8191077347603, 
         16.86196930569497}}], 
        ArrowBox[{{481.96, 2.267499999999984}, {491.9598060424482, 
         2.205217471015942}}], 
        ArrowBox[{{153.515, 81.28750000000002}, {155.84172544286437`, 
         71.56194866788894}}], 
        ArrowBox[{{149.45999999999998`, 32.150000000000006`}, {
         149.04067584042815`, 22.15879550558597}}], 
        ArrowBox[{{150.95499999999998`, 32.109999999999985`}, {
         158.38449597876723`, 25.416526350131676`}}], 
        ArrowBox[{{110.2475, 38.16749999999999}, {112.38446878805429`, 
         28.39849982603738}}], 
        ArrowBox[{{441.84000000000003`, 39.715}, {431.94122311818916`, 
         38.29576913642393}}], 
        ArrowBox[{{335.4425, 83.35250000000002}, {327.3624246978362, 
         89.24422157449439}}], 
        ArrowBox[{{440.8425, 23.109999999999985`}, {432.1311377007437, 
         18.19958587376823}}], 
        ArrowBox[{{441.48, 28.007499999999993`}, {431.9632153686857, 
         31.078462435651005`}}], 
        ArrowBox[{{409.71500000000003`, 34.787499999999994`}, {
         406.6974977635583, 44.321370161328446`}}], 
        ArrowBox[{{396.02, 61.56}, {396.3962195936505, 51.56707956514447}}], 
        ArrowBox[{{346.355, 23.24000000000001}, {339.0526581616044, 
         30.071969238456603`}}], 
        ArrowBox[{{276.65250000000003`, 49.94750000000002}, {
         278.6165892443414, 40.142279276310916`}}], 
        ArrowBox[{{248.065, 42.44999999999999}, {242.5729715001279, 
         34.09310925304197}}], 
        ArrowBox[{{337.4, 119.05249999999998`}, {337.13625651485853`, 
         109.05597863634324`}}]}, 
       {RGBColor[0, 1, 1], Arrowheads[Small], 
        ArrowBox[{{58.557500000000005`, 42.56}, {56.06601267641819, 
         32.87534766156105}}], 
        ArrowBox[{{61.385000000000005`, 131.1575}, {61.28377597440063, 
         141.15698767170807`}}], 
        ArrowBox[{{67.9025, 6.375}, {
         65.95631161410827, -3.4337894648942324`}}], 
        ArrowBox[{{70.4925, 6.012500000000017}, {
         73.94438455393666, -3.3728339325936076`}}], 
        ArrowBox[{{72.53999999999999, 123.13}, {74.64824705371356, 
         113.35476116094813`}}], 
        ArrowBox[{{85.305, 120.805}, {75.34407861869596, 
         119.92179830419101`}}], 
        ArrowBox[{{87.98, 120.00750000000002`}, {92.02738496976532, 
         110.86317526240907`}}], 
        ArrowBox[{{90.52250000000001, 87.1225}, {100.40277674453746`, 
         85.57973253490607}}], 
        ArrowBox[{{110.2475, 38.16749999999999}, {112.38446878805429`, 
         28.39849982603738}}], 
        ArrowBox[{{111.21000000000001`, 159.5925}, {101.24725067182322`, 
         160.4548374188293}}], 
        ArrowBox[{{148.89749999999998`, 190.38000000000002`}, {
         151.30102878316976`, 200.08685579312245`}}], 
        ArrowBox[{{149.45999999999998`, 32.150000000000006`}, {
         149.04067584042815`, 22.15879550558597}}], 
        ArrowBox[{{150.95499999999998`, 32.109999999999985`}, {
         158.38449597876723`, 25.416526350131676`}}], 
        ArrowBox[{{153.515, 81.28750000000002}, {155.84172544286437`, 
         71.56194866788894}}], 
        ArrowBox[{{157.7475, 178.28}, {161.37706743557987`, 
         187.59805989627552`}}], 
        ArrowBox[{{162.4925, 101.82749999999999`}, {152.97115479894384`, 
         104.88429334635575`}}], 
        ArrowBox[{{163.1625, 98.5625}, {158.36622108719527`, 
         89.78778014176038}}], 
        ArrowBox[{{184.7225, 111.375}, {181.81107757596308`, 
         120.94179776460311`}}], 
        ArrowBox[{{188.8725, 105.80499999999998`}, {193.29300176586491`, 
         96.83509675983149}}], 
        ArrowBox[{{219.305, 50.10499999999999}, {224.6185428650167, 
         41.63350295274617}}], 
        ArrowBox[{{220.95999999999998`, 177.805}, {212.84253709720488`, 
         183.6451023982243}}], 
        ArrowBox[{{228.0725, 39.577500000000015`}, {238.01178879243375`, 
         38.477255345116134`}}], 
        ArrowBox[{{231.95749999999998`, 86.98500000000001}, {
         225.2633436361611, 79.55611915720309}}], 
        ArrowBox[{{236.51, 107.1875}, {234.85333942410222`, 
         97.32568091140047}}], 
        ArrowBox[{{238.195, 107.28}, {242.24301943053985`, 
         98.13595610848395}}], 
        ArrowBox[{{241.45999999999998`, 81.73249999999999}, {
         246.71128427649177`, 73.22227007082239}}], 
        ArrowBox[{{248.065, 42.44999999999999}, {242.5729715001279, 
         34.09310925304197}}], 
        ArrowBox[{{276.65250000000003`, 49.94750000000002}, {
         278.6165892443414, 40.142279276310916`}}], 
        ArrowBox[{{289.175, 229.78}, {279.37473320498475`, 
         227.79133945920356`}}], 
        ArrowBox[{{295.25750000000005`, 176.2625}, {285.769997683635, 
         179.42276894377156`}}], 
        ArrowBox[{{297.63, 178.0575}, {300.65399311362125`, 
         187.58931334525448`}}], 
        ArrowBox[{{335.4425, 83.35250000000002}, {327.3624246978362, 
         89.24422157449439}}], 
        ArrowBox[{{337.4, 119.05249999999998`}, {337.13625651485853`, 
         109.05597863634324`}}], 
        ArrowBox[{{346.355, 23.24000000000001}, {339.0526581616044, 
         30.071969238456603`}}], 
        ArrowBox[{{396.02, 61.56}, {396.3962195936505, 51.56707956514447}}], 
        ArrowBox[{{396.605, 148.47500000000002`}, {404.20715173891483`, 
         154.97171370298207`}}], 
        ArrowBox[{{409.71500000000003`, 34.787499999999994`}, {
         406.6974977635583, 44.321370161328446`}}], 
        ArrowBox[{{440.8425, 23.109999999999985`}, {432.1311377007437, 
         18.19958587376823}}], 
        ArrowBox[{{441.48, 28.007499999999993`}, {431.9632153686857, 
         31.078462435651005`}}], 
        ArrowBox[{{441.84000000000003`, 39.715}, {431.94122311818916`, 
         38.29576913642393}}], 
        ArrowBox[{{448.95500000000004`, 40.595}, {444.78042201901565`, 
         49.681963116502686`}}], 
        ArrowBox[{{455.22, 28.232499999999987`}, {456.6630689307173, 
         38.12782981063282}}], 
        ArrowBox[{{456.03499999999997`, 23.69749999999999}, {
         454.0732546602708, 33.50318994115409}}], 
        ArrowBox[{{462.4425, 18.737499999999983`}, {469.3868997046181, 
         25.933006427104345`}}], 
        ArrowBox[{{463.5325, 46.85249999999999}, {473.2299842272063, 
         49.293565272188886`}}], 
        ArrowBox[{{464.94, 7.64500000000001}, {468.8191077347603, 
         16.86196930569497}}], 
        ArrowBox[{{468.65250000000003`, 102.33000000000001`}, {
         462.34409156617227`, 110.08912256843587`}}], 
        ArrowBox[{{471.7225, 110.11500000000001`}, {467.7749746601847, 
         119.3028748191035}}], 
        ArrowBox[{{481.96, 2.267499999999984}, {491.9598060424482, 
         2.205217471015942}}]}, 
       {RGBColor[0, 1, 1], PointSize[0.01], PointBox[CompressedData["
1:eJwtUl1Ik2EU/tpViCXUtIKY/dysm8gWDGnGI0u2otStTXSbI75t3wo3rTnB
3LcY0c9VzYuiH/sh1DsZ1E27CBKNVJgX3aQQRIugyK6CVd5I7+nxwMf53vOe
85znPO/Zrw/5ExZN01rUJ358rmaPeM7CWx2zljwd+CLuRSdWJi+11SXO47c9
Upxb74YmVtiDn76y7cYzHz5XlNXvhpQXD/ihomu+xSjvzwXpHVE0q3B5I4im
kqc6pkVxok4hP+/BlIJfWQjSF8NwSbzRzfvlMA6ptrVfMQhs+bGOfnW0V5I8
l3QccyjbCfb/pGNGwVu3A1bpcySGC4YyfwB+IfYqRjyvwXm64hBXy/ZBYByJ
OOeb6oXA23YleV4Ns34iiR8yz3CI9RcHyHfbKfJ5OsB4q0EdrqUQkJ8lN2S8
yY0UVkXPN0Hej6eJXwlBYNrepdnnfYh4hwchz1AdDEDGsVqG8OChstYO6nP6
Mr5KwroXy/IOOzKcr5zCTeGfzUDGN7YarH+Uoc7tm+c/WbwV3T4EmNc0gjsi
5Hw/92B6BCTmJN/ZUcYXOumXRql/USefiSsQGpV4O/W/nUOvvNdeJ/Pv59At
QFtczH+S4358dHPfGkwIffuZk4wPm/gu/riL71swMSv+pZP8v5lYlH6vjzL/
r4nrMnfaw71tyGOfJN61beqVpy73+jAvOLk8/u/9rTCkbaT5Kgqiz0EL/gF3
lFoE
         "]]}, 
       {RGBColor[1, 0, 0], PointSize[0.01], 
        PointBox[{{407.165, 186.8425}, {227.39499999999998`, 
         28.222499999999997`}, {260.83000000000004`, 60.08249999999998}, {
         182.925, 188.9975}, {168.9225, 216.1625}, {290.03, 234.3025}, {
         226.4275, 210.67999999999998`}, {113.7325, 160.4275}, {87.4575, 
         121.7825}, {157.97, 13.357500000000016`}}]}, 
       {RGBColor[1, 0, 0], Arrowheads[Small], 
        ArrowBox[{{407.165, 186.8425}, {408.04823415300905`, 
         196.80341850337902`}}], 
        ArrowBox[{{227.39499999999998`, 28.222499999999997`}, {
         225.5598635223544, 18.39232837848624}}], 
        ArrowBox[{{260.83000000000004`, 60.08249999999998}, {
         265.24293055568745`, 51.108869524507895`}}], 
        ArrowBox[{{182.925, 188.9975}, {192.9242104052462, 
         188.8718366735426}}], 
        ArrowBox[{{168.9225, 216.1625}, {177.60164274007636`, 
         221.1296401527821}}], 
        ArrowBox[{{290.03, 234.3025}, {290.68062760390296`, 
         244.28131173893163`}}], 
        ArrowBox[{{226.4275, 210.67999999999998`}, {218.92266537643312`, 
         204.0711077121115}}], 
        ArrowBox[{{113.7325, 160.4275}, {103.97500510348162`, 
         158.23859768504445`}}], 
        ArrowBox[{{87.4575, 121.7825}, {84.24086840730911, 
         112.31395833842916`}}], 
        ArrowBox[{{157.97, 13.357500000000016`}, {152.95650565168162`, 
         22.00994904170952}}]}}},
     DisplayFunction->Identity,
     ImagePadding->{{0., 0.}, {0., 0.}},
     ImageSize->800,
     PlotRange->{{0, 512.}, {0, 240.}}], {421.5214285714286, -196.875}, 
    ImageScaled[{0.5, 0.5}], {800, 375.}], {}},
  ImagePadding->{{0., 0.}, {0., 0.}},
  ImageSize->{1033.4999999999998`, 487.8571428571429},
  PlotRange->{{-6., 846.}, {-398.75, 5.}},
  PlotRangePadding->Automatic]], "Input",
 CellChangeTimes->{{3.928895546597378*^9, 3.9288955466833243`*^9}},
 CellLabel->
  "In[781]:=",ExpressionUUID->"f61eafd1-7589-4848-a91a-ebb20a5b13db"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Image", "[", 
  RowBox[{"Show", "[", 
   RowBox[{"Image", "@", "imhalf"}], 
   RowBox[{"(*", 
    RowBox[{",", "\[IndentingNewLine]", 
     RowBox[{"Graphics", "[", 
      RowBox[{"{", 
       RowBox[{"seedsPointFig1", ",", "seedsArrowFig1", ",", 
        RowBox[{"{", 
         RowBox[{"Cyan", ",", 
          RowBox[{"Arrowheads", "[", "Small", "]"}], ",", 
          RowBox[{"Flatten", "[", 
           RowBox[{"Complement", "[", 
            RowBox[{
             RowBox[{
             "seedsArrowFig1", "\[LeftDoubleBracket]", "3", 
              "\[RightDoubleBracket]"}], ",", 
             RowBox[{
             "seedsArrowFig2", "\[LeftDoubleBracket]", "3", 
              "\[RightDoubleBracket]"}]}], "]"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Cyan", ",", 
          RowBox[{"PointSize", "[", "0.01", "]"}], ",", 
          RowBox[{"Point", "[", 
           RowBox[{"Complement", "[", 
            RowBox[{
             RowBox[{"seedsPointFig1", "\[LeftDoubleBracket]", 
              RowBox[{"3", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
             RowBox[{"seedsPointFig2", "\[LeftDoubleBracket]", 
              RowBox[{"3", ",", "1"}], "\[RightDoubleBracket]"}]}], "]"}], 
           "]"}]}], "}"}], ",", "endsPointFig", ",", "endsArrowFig"}], "}"}], 
      "]"}]}], "*)"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.928218735056015*^9, 3.9282187903882923`*^9}, 
   3.92855508859243*^9, {3.9288957252804127`*^9, 3.928895734428629*^9}},
 CellLabel->
  "In[782]:=",ExpressionUUID->"d4c1ead0-b320-455f-bb5d-2302d55e2a28"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzs3QfYplV17/+hF1F6UYooIAiIgsAwdIY6lKEKKKBgUOwaS9RgYou9JR5r
TFCMXfwrIIhCUBia1KFJGXovCgoICOr8P9zfM895A2hyTiwQn3W913s9z/3c
995rr73v32+vXdZ+2otfu8dL5540adIbFvRvj4PevNXrX3/QW/dczJfnveYN
Lz/kNS85eNpr3viSQ17y+o1ePI+LT5lr0qR93f/Q57GM5fErcw0y99xz9+FR
b/hPrzy+ZK458t9M522TJs0e/tafkPJ/J8G5B/mD6DaWsYxlLGMZyx9bzpvD
g6/6c2sylrGMZSxj+f2Sx/fn1uJ/lKw6hwT9ff6Pk8VcE+SPk8NYxjKWsfyl
yJgH/7By4KRJN0zgwQv/OLmMeXAsYxnLWP4SZATyjxe0f9kEBhz9LfJ/n87j
pbxjGctYxvI/T0JgHuI888wz9wTJbew6mXfeeeeZIHM/QkYXRzfM8wh51IsT
rz9MgdG6nUe9+KhJ/S71JvpTI20fVqh558jEzw+752Ey69F4cPNHM8t/Kg+7
c/755x+T41jGMpax/LElwI8R/ty6PC7l6keQ4AOTJr3uD5c+KpxvvvnGtTOW
sYxlLH9A+V3zg894xjO2GWSrrbbadNNN11133alTp06bNm33QZ7//Oc/73nP
22OPPfbee++99tprx0HcPGXKlC233NIjm2+++ZaDuLjTTjttscUWPuw8Qdy5
/fbbb7311uWy3Xbb7bDDDlLz2c3TBpHORhtttOaaa8p9lVVWecYgz33uc0t/
nXXWWWuttTYYREZy2XPPPXfbbTeJ7zII9fbdd18py2i3QaZPn77RIOuvv/56
66337EE23nhjRZPvfvvt55Hpg0iKMi95yUte+tKXSuSvBnn5y19+8MEHK7s7
nzdHfC3fXXfd9fBnPethPPjZFVfc7TnPmTx5slwo6R6GUuptB/GBMtRTBDds
P0gWkDIL+Lz1IHJcdNFFH7X6xn7iWMYylrH81yWP75HXFxoEHeCX973vfR/5
yEe+/e1v/3+D/Mu//Mu//uu/HnbYYV/60pdOOeWUWwb57W9/e/PNN19zzTVX
XnnlFVdccc0g55xzzj/90z99+tOf9tSXv/zljwzytre9zbPvfOc7//Ef//Fr
X/valwZ54IEHTj755COOOOL444//wSBHHXXUiSeeePXVVx955JGf+9znjhjk
K1/5iqzf8IY3fPCDH/z4xz/+mkEkePjhhx999NGHHnrogQce+NpBPvGJT1BY
CtL57Gc/+7VBTjvttNNPP91PEjxykBNOOOELX/jCRz/60be85S0I7u8H+cxn
PvOtb33ruOOOmzVr1hlnnHHWIBdccMH5559/zz333HfffZdccslPB5k9yJln
nnnSSSd9b46cffbZrshrxowZr5z1zUP+9R1nrb/ufQvOf/nTljtyl10Y87BB
3OmGu+66i92U/fhBzj333K9//euus9s///M/XzSI1NwvWcWR0fcHYdVDDjnk
ve99r06IbsDSgzyyHnVpOIx/9GY0lrGMZSyPJfmvuAPzDTLy+xYY5ElPetIi
iyyy2mqrvehFL3r7IKjqQx/6EOLz4R/+4R/ePAh3j6fmnne9613Y7aRB/v3f
/x2YI4vvfOc7GCdGQCXvec973vjGN0oEvH9iEC7VK1/5St6NDy94wQteOAjM
R0Af+9jHwPv/GuT973//qaee+vnPfx4j/M3f/M1+g2DPt771rR7/5Cc/+bd/
+7eHDCIRzOg6Df/u7/7upYPI901vehMNP/WpT7n+14N8cBB+HOXfOYiv1OPW
Vbo3DuKrmxXZrzL61iAI9Prrr//hD3+Ii5XrkkGQnZ4A+8TILxkkJWl+8EVf
mjR79sS/J9y5zwsPe2HUj6YR9Be/+EUW++Y3v/nJQRTcg5J6xzvewRrfGORH
P/qRfNHlnXfeyYzvGUQRlJrd3P/Vr3719YP827/9G4dx2WWXfeITn7jIIKMm
Mf/88z+yw1NTGbmQ4xWnYxnLWP5nyJgHHyM8uNCD5z2MByfNPmvS7EmvmvGq
MQ+OZSxjGcufWEb41jrG0fVp06YhtcYDYTKKgeHPf/7zPzQILoDqGAc1HHDA
AaE9vMViG220EULcZ599ohigDY3PO+885PXjH//4m4MA7SOOOAJNSFlqsQx6
esUrXoEvUA8k33cQKUj23e9+N/pr+NRTl156KZ7FZa9+9avDeYS40047vfjF
L/7ABz6A/rqoCJL66Ec/6nHKHzTIy172sv333x9LotFzzjnnHwd529ve9pa3
vEVeUvjbQdAN6nQ9PV8+iGdZAytJza//MAjGueqqq6644oozzjhjxowZpw2C
d1z3OLZFjh8bRBHeftjHVr2BM/jbR/DgfXhw/gfn/+RnP6mMRx11FHqViKyj
vOOPP15SmFqpceJXBpHRDTfcMHv27FmzZp1//vn/MgjdVA3upurH5wjGZHad
DYbN63RRNaHFR20PY8oby1jG8pcgbQrocz4g4TLsuuuu+Aga44UWabiyyy67
cLt23333vQfhdxx77LGw/XWve92hhx7aHBZ6OvLIIyEwHkEoewyClTARx/CE
E07gFR47CEhHju6UEW591SCICXMhUFAPrlskQwdpIqPPfOYzkbJfsZ58kSAO
bWry4IMP5gdhNATXAhLinve9733y5QZOnz79bYNgCixMAY+4Hq1LHMUo5m67
7fbqQRDcMccc84VBcGJesKzpg/cRja+xrZvjR8VUhBcMoj9ASdSJlxEQNd78
qfc99erPzzX7549gwP7Oa7nM6376uptuumnmzJl47fvf/z6X8ORBfKVkrI0W
40G6HX744T/4wQ9uv/12hPi6QerAYPyHaPftb/+bQSipQn2g5PsHQYXI0Ve1
sOGGGz5pkIn096hrosYylrGM5XEto41voyu+8giWXHJJiP3uQbgJuIm3BUKn
TJmy+SDYgbMGddFHNMGlQijoAO+gjB8Ocsopp3z7299utQnJE+GeoAm8yeFC
QxGKLHiCvuJWSbXG0m2bbropOvvWt74FnxsX9RVPeZb/9dZBDjvsMDzrCtJB
xA1j8kbdKWt64oJ3DQL2FQQ7Y16+1WcG4UyhP9lRA/mmD06h6oEHHoi+PzsI
Wse/SIdb98EPfrAh2aOPPpraaLHlQI1DYkZUInf86HOeo/RpyFAf/vCH/+5f
PvK0aw+f67e/iwH72ysenO/X851+8+k/+9nPvva1r/Ggr7/++ssGee973ytZ
fErDkStKPVr5gOvdkMX23HPPLbbYQu+FlVycMggv250qRaflnwfJk5WLRNDi
iwdRtI033lg7WWyxxUaNZBRB/c/RZscylrGM5Q8jba/uM9dvwUFWXXVVNME5
gvPvmyM+A1LUwF3CgCsOssIKK2y33XZvfOMbeTf/NIjPqAeuQk7c95NBfEAT
vBUcxMt70yC4FR0AZP4IV6V9E657HE9x5bhUsW2bGgA194cacRmudHMEevgg
3/ve96iNc7kzMHz/QVAbGsU+IL2RWPLpT39aakhNGT34hkE++clP0hBXYih0
9m+DIDh5URWR/d0gSNBF9xx11FF+ineuuuoq9MdKctEryDt75StfKV/9AWq8
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
c+awXjJaWM7z588nCwYVOLQvgYAAZBz5JQ4AhwGmIbVlT2aylp8xY77d+w5w
UbJ9AwQkkgnUiFl31llnvepVr6IHWxV2mk9YdNJ8oSQO6QAFKTR6//33jyyl
69evP/fcc8lm6SxH1CmNYlSwQMOmbWHCq1/96pES6MAy1YN/3fJX14Mv/+re
lyZ9vuRPfn6qB6d6cKoHp3pwqgenevDbtFhTz0ymySTmgtK+DRYFC3i1i2/E
nKS8/Ct/Tg++7KvPnP7Uf9/whT8hGvFJAWfaTCiAidJeN7nzzTi5wzlm38x6
srheSr5t2Lssom2hQHhQ3OlPZ3/Fh1Ez3BiCQEzKoKoDMKHtXP8te+A73/nO
EeC963JECarQDvkbkIUu1qW/2vDcunXrgw8+WEykeN4Yx9aZRtt9ve+++3QG
AQtuli+9dss5i3UZAAF4efraeSZ0gbBBUfE6H3IWIBol/dQdrgSBktLPHTt2
6APsTe7OOeecmcmJfKkKkiNofPHFFwOuLicm6Woo10Yp1bpEoN1LLrlkxYoV
sChNXQLH1atXt1ecpjZ8yiXVPzw07r33XgNEWNwC1fMNBmXkuoQjnXoobJjU
nHkESvl8IiY6FLeqcI7wpKBnYKdcISMBsZmig0499dRYQuXMA/Vv374dxTpy
KuyJrmJUGrZDzBxacvJPXdYBYIgyupRDlGfypEITbJMDg+F0kNRlk8461aPP
BV3Rz5GGoOM/VRlXu464DrngP2ZOhxalNk9g05SayMsU2bFi13mUMlxjlRx3
6ySpaX87LZy2bTaJrcnNAEMx9DHjnke3ZEqdhmZ2ssQiTg4bI0zuOI73fPm1
fZnuqEs6mWN2e63oAPBz/Qr8/3/27gTu7qo+8P8DaBVUQBDZIQQIEQOEVcIi
u45WtLaj7f9lx791rHVqp7tLa2emLtW2ttNOnS5arbUdl9GirWIFFRHZl4SA
7GFPAohSEBCMLJn3cz8+p7cJOl0d0ZxXXs/r5t7f7yzf/ZzzXTCmJzO60Ems
aoadu2rVq9VAo9ioaqZ0qJ6zLrRaZuURtUo25GAQCnLY++hHP1qGpTjLr5BO
91FAXaBoHRsibwCpsknpdIrRqGxExAxo5mxFOdE1H7gzusngneTb3XffjVCJ
O/BZtmxZGKT9i7wIHV1DeNdMNt1006222ioZq1W83hrLQZQB38l5Z7NdYeMX
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
13kXuqUNPRNJ6PPSSy8955xzKnTV67aNerbSu+66K8/JMipYOC5+81wzjZw0
jGJRQYy6OeRds+7EW9zx8VLTaObWkpctW0aVdOlQwtJEurlleCAz3OrLSp5p
JgYC5qM3AClZxyNiec8990zOd4LUTq2qmiX5NMmiV8rzCTX4PbxUiquE1VYR
Ckgb2Ld8W2ASLO4oEjN/MNbjlZPGaMRl+E4PppFldeCBB1KmIxKk444jjjgC
DPMiDmL1hhj0jA0bBUVVkbBaEunQci+MVOS5ETJjbrrpJiuF2Ypia+Wn7SC0
w3yS9uSTT7YiCpe4zgzWOcJgTWErNuo2k2avjb9IV9NAEqa316X/cx1+3+Su
z9mh4751s8uux7zfSypynMnbDIK/PVr8wobMWbcNeCjAWTZfWAO+sFIecegk
XziP5dnVsQAhQOlAWQGhGux0fKfbTmmMWPKoTp/aksMC+xaOEHwxyxoss5cQ
hidzHiujkdeJMnqtOBrthFe8aN//OlsaOwe2FC6q9iIqLZa/SnxmgjWQExXT
5Ysld49Z1ugscNPoMg41mn8WuNetq9p2beI0gz772c/2DN7smM4GilXWkam/
7YwQGNHt++njoJmJ+xbb0lqGnVAuFAsc53XD+87EQBtYOsiiMfEXBjd07G91
GMFbEIdNugHp2Jkx7LEi0LWSdNHCmGjPq965rh787K9NUws+yi0tv+J11FPZ
yayUJrLAcT5c/nMLtKcjMcoEtf5la8yVpzohg4vzoteInQMOOAA8fd9RDwZf
sGCBLwlPerMThkWLFnmgA1uzzbKyWNCgGgCqKyoNeEngtv/DtIPiio+TjQnM
ruTuvfdeNI8Oh4P9mWeeiRdK/NXuBkekv0rdnDK64ooriGVylWFpoORb+7Ui
CletWrV20uxGuycaZRwJahPDSiaj26IzfFmwXpnZunE2E0SLjPOnLV4bom1n
EEZ6rZmXq8SijD42mMbVFWh7MtsPxDpLpMWOOeaYXEmPPPLII553/Mza+w+6
8PeH9icTPOB1lphRoqhiMfSWO3HwYSSXPQ+nj81yQQTgM4p2QRAeWT/GEOFB
N4zYoFUq2jwL2etsKslTnS+8md91wQU5mVPQNHUzxPUlJjL/UpFr1dLtLg82
u87r1DQB6JX2gwhsv/32yxlgzBBVI0VEOLIotJXWLSCUOkkDHKasyXTlF/+W
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
yZsoK7ozB5RA+6R3dGKbg7bBc6Swhl9dlezLwjuyMHNmv2XmU9eqEXz+eHjB
AtvoFZaF6kjdrcWeli9ftc8+j++008aDD/7P73kP+ESNdARSX7lypbX83GwD
0mQ16MFs5o1Vf3Cqgm0+4NYph/+FbiuirMEnPViAIXZ432y5qKzZ/JdIm7ne
huDPQshJqbR7xG86DmF/e2q2UXQ6COuzGpp5jpUfbJzSFICJfphY+eFowIup
Yb8zsc4h0TaYexnlsFJCVieoBgrOgTEnWOAy7RNOOGGk9TjttNOoJwMFsY9M
xcFJm7xJY9JcvivXhYpyvUAPCJ6OsKHYaaedOscoD7yHOJRM7jqvwsG1ziHZ
eGAFs4BsCRmEJ938e6OaZ//N++sP2yulkS2Q1uu+EnWREpi9g46aCQMmcrJ2
JJ2NkWOqf208u6LKs66yd9bSaaflZFzlBpYA12GnT9WPzgntzDPPZLcDGova
nrHjIKsuD17OP1rXMbCW+gsvRaSaQBI7dtOVfeguu+xy3HHHUXDpQWrXmySP
DQgqykmjrPukE5hQdl1sWchAUMfaFJDfOedYdRqhiFTEjxJQeztHcsnCZ16C
xDLb9OA2PbhND750epAS3DIzM/e/z/3UT23Tg98fenCHzWufpwdnNt2xTQ9+
L+pB9ADFeYyQM8g7lyH8Hqf7XeKp0gZGzGCbMySMEBThyzyLXwDA7llItjJQ
FcvTVQLyKOt4Je87kkXhFth2eNQzhdBSTFT5fSS7ribpqCmZh14ZC/MJ1LBA
yfGCfN+aJHrz3JJ90kHEKClipYYbZXOrhV1cRpIwHxg9l35QK8UxKCH4zZs3
pxxJxTxYCAd9Rre4DPaXLFly+umn52mvIZ4yfpsw4uncLycujGP5iWUrhal5
8+Zhz9w8KtOD6wGtNBedvhL1WADD+ryEZhoR4QUcV7hZtxiLFy/udgnKrHTU
ESA3QCkW0Mh5IpEN40+0yfAZ8OEpp5zix2WXXdaV02c+8xkK16Ddog5XN9wK
/jokQJKiZXzFHQsWLEgC/9xUyNWKAKrLOw3vWJ0nFRTO1QF+QaxU7SP5Gyxj
HzNhb/i8aBGjg7Pl42446rQQiDrRtcxuHMqylXt2lxcaAqDd8iyytKYNttUn
9Vwn2RgQB900SMfpkRngeO3xxx9nI609+ODn6cH1++0XiVoXAYW6brzxxqi3
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
    "], {{0, 169.2}, {360., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->120.],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImagePadding->{{0., 0.}, {0., 0.}},
  ImageSize->{533.5714285714282, Automatic},
  ImageSizeRaw->{360., 169.2},
  PlotRange->{{0., 360.}, {0., 169.2}},
  PlotRangePadding->Automatic]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{{3.928555089817768*^9, 3.9285551011501484`*^9}, {
   3.9285553680326047`*^9, 3.9285553952442284`*^9}, 3.9288268622762346`*^9, 
   3.928830551938381*^9, 3.928831883465871*^9, 3.928895004198673*^9, 
   3.9288956823029394`*^9, 3.9288960902745714`*^9, 3.9288988589639325`*^9, 
   3.9289110991494913`*^9, 3.9289115924813643`*^9, 
   3.9289117069855313`*^9},ExpressionUUID->"f975a859-e640-4dc5-950d-\
4b6dead1745a"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Dimensions", "[", "imhalf", "]"}]], "Input",
 CellLabel->
  "In[783]:=",ExpressionUUID->"26bbb248-e42b-4c1d-a6bf-a99437e1d4e9"],

Cell["\<\
Note that image size is (600,282); Only the case for the image with the cyan \
bifurcations.\
\>", "Text",
 CellChangeTimes->{{3.928896271212727*^9, 3.9288963467672977`*^9}, {
  3.928899672960888*^9, 
  3.9288996900567703`*^9}},ExpressionUUID->"cda0218a-7d4b-4d25-9b25-\
d2b2bb5d5322"],

Cell[BoxData[
 RowBox[{"seedsNew", "=", 
  RowBox[{"Round", "[", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "/", "600"}], ")"}], "*", 
         RowBox[{
          RowBox[{"Dimensions", "[", "imhalf", "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "/", "282"}], ")"}], "*", 
         RowBox[{
          RowBox[{"Dimensions", "[", "imhalf", "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}], "&"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"294", ",", "232"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"581", ",", "248"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"138", ",", "95"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"222", ",", "154"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"283", ",", "150"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"73", ",", "131"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"552", ",", "163"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"397", ",", "185"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"324", ",", "224"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"466", ",", "110"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"181", ",", "184"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"274", ",", "179"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"400", ",", "139"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"127", ",", "237"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"103", ",", "141"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"85", ",", "135"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"106", ",", "180"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"70", ",", "231"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"82", ",", "272"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"177", ",", "244"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"193", ",", "163"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"219", ",", "154"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"467", ",", "207"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"406", ",", "257"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"481", ",", "243"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"541", ",", "227"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"556", ",", "156"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"349", ",", "75"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"261", ",", "76"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"184", ",", "74"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"173", ",", "59"}], "}"}]}], "}"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.928553860316137*^9, 3.9285538651435738`*^9}, {
   3.9285539292801228`*^9, 3.928553930383192*^9}, {3.9285541018250723`*^9, 
   3.9285541244784594`*^9}, 3.9285548313103113`*^9, {3.92855491988529*^9, 
   3.928554976583796*^9}, 3.9285552418571167`*^9, {3.928555595560065*^9, 
   3.9285556537985725`*^9}, {3.928555746903765*^9, 3.9285557576848283`*^9}, {
   3.9285558318048873`*^9, 3.9285558403863416`*^9}, {3.9285558934636745`*^9, 
   3.9285559033144627`*^9}, {3.9285563988817654`*^9, 3.928556402831438*^9}, 
   3.9285569614207926`*^9, {3.9285570720457306`*^9, 3.928557108380904*^9}, 
   3.9285574186408405`*^9, 3.9288949770724635`*^9, 3.9288958738995113`*^9, 
   3.928895989502331*^9, {3.928896034774743*^9, 3.9288960646954117`*^9}, 
   3.9288963731742516`*^9, 3.928898869082921*^9, 3.928899039327518*^9, 
   3.928899652163698*^9, 3.9288999062287965`*^9, 3.9289080941740217`*^9, 
   3.9289082692015605`*^9, 3.9289083310185814`*^9, 3.9289087508818192`*^9, 
   3.9289088791843*^9, {3.928909031970772*^9, 3.9289090594077*^9}, 
   3.928909191948558*^9, 3.9289093370397635`*^9, 3.9289095037575464`*^9, 
   3.9289099661361213`*^9, 3.9289101825379753`*^9, 3.928910392177691*^9, {
   3.928911109345708*^9, 3.9289111253439426`*^9}, 3.9289112915252943`*^9, 
   3.9289114381945844`*^9, 3.9289115982857676`*^9, 3.9289117263574324`*^9, 
   3.928911876766143*^9, 3.9289120127794876`*^9, 3.9289121317066703`*^9, 
   3.928912436880724*^9, 3.9289125782796764`*^9, {3.928915166091169*^9, 
   3.928915169451213*^9}},
 CellLabel->
  "In[784]:=",ExpressionUUID->"b4a85317-1932-4494-ba03-550192634d4d"],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"Image", "@", "imhalf"}], ",", " ", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Red", ",", " ", 
      RowBox[{"PointSize", "[", "0.01", "]"}], ",", " ", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Point", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
            RowBox[{
             RowBox[{
              RowBox[{"Dimensions", "[", "imhalf", "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], "-", 
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}], "]"}], "&"}], ",", 
        " ", "seedsNew"}], "]"}]}], "}"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.928554440450533*^9, 3.9285545332071505`*^9}, 
   3.9285546108961353`*^9, {3.928555933717395*^9, 3.9285559617483864`*^9}, {
   3.928556030780195*^9, 3.9285560354925013`*^9}, {3.9285562750589066`*^9, 
   3.9285562752120075`*^9}, {3.9289090633082037`*^9, 3.9289090646960955`*^9}},
 CellLabel->
  "In[785]:=",ExpressionUUID->"2b1b404e-e478-42b9-99cf-ac4548605851"]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Parameters", "Chapter",
 CellChangeTimes->{{3.871371970116836*^9, 
  3.871371971297967*^9}},ExpressionUUID->"34a4ddeb-8738-40df-aa4a-\
9710b6868cf8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Metric", ":"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Mu]", " ", "=", " ", ".05"}], ";"}], "       ", 
   RowBox[{"(*", 
    RowBox[{"Stiffness", " ", "parameter"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"\[Epsilon]", "=", "10."}], ";"}], 
   RowBox[{"(*", 
    RowBox[{"Anisotropy", " ", "parameter", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"for", " ", "sub"}], "-", 
        RowBox[{"Riemannian", " ", "case"}]}], ",", 
       RowBox[{"epsilon", "\[Rule]", "infty"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"beta", "-"}], ")"}], "isotropic", " ", "Riemannian", " ", 
         "case", " ", "epsilon"}], "=", "1"}]}], ")"}]}], "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Volume", "/", "Image"}], " ", "dimensions"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"No", " ", "=", " ", "32"}], ";"}], "         ", 
   RowBox[{"(*", 
    RowBox[{
    "Number", " ", "of", " ", "orientations", " ", "from", " ", "0", " ", 
     "to", " ", "periodicity"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"No", "=", "32"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"No", " ", "=", " ", "16"}], ";"}], "         ", 
    RowBox[{"(*", 
     RowBox[{
     "Number", " ", "of", " ", "orientations", " ", "from", " ", "0", " ", 
      "to", " ", "periodicity"}], "*)"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Nx", ",", "Ny"}], "}"}], "=", 
     RowBox[{"Dimensions", "[", "im", "]"}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
    "Number", " ", "of", " ", "pixels", " ", "in", " ", "x", " ", "and", " ", 
     "y", " ", "direction"}], "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Resolution", " ", "parameters"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"periodicity", " ", "=", " ", 
     RowBox[{"2", "Pi"}]}], ";"}], "           ", 
   RowBox[{"(*", 
    RowBox[{"Periodicity", ",", " ", 
     RowBox[{"=", 
      RowBox[{"Pi", " ", 
       RowBox[{"(", 
        RowBox[{
        "for", " ", "theta", " ", "from", " ", "0", " ", "to", " ", "1", " ", 
         "Pi"}], ")"}]}]}], ",", " ", 
     RowBox[{"or", " ", "=", 
      RowBox[{"2", "Pi", " ", 
       RowBox[{"(", 
        RowBox[{
        "for", " ", "theta", " ", "from", " ", "0", " ", "to", " ", "2", " ", 
         "Pi"}], ")"}]}]}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"s\[Theta]", " ", "=", " ", 
     RowBox[{"periodicity", "/", "No"}]}], ";"}], "  ", 
   RowBox[{"(*", 
    RowBox[{"Angular", " ", "resolution"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"sx", " ", "=", " ", "1"}], ";"}], "          ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Spatial", " ", "resolution"}], ",", " ", 
     StyleBox[
      RowBox[{"not", " ", "used", " ", "in", " ", "this", " ", "notebook"}],
      FontColor->RGBColor[0.6, 0.4, 0.2]], 
     StyleBox[",",
      FontColor->RGBColor[0.6, 0.4, 0.2]], 
     StyleBox[" ",
      FontColor->RGBColor[0.6, 0.4, 0.2]], 
     StyleBox[
      RowBox[{
       RowBox[{"every", " ", "sx"}], "=", 
       RowBox[{"1", " ", "is", " ", "assumed"}]}],
      FontColor->RGBColor[0.6, 0.4, 0.2]]}], "*)"}], "\n", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Set", " ", "Options"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"SetOptions", "[", 
     RowBox[{"SE2FiniteDifferences", ",", 
      RowBox[{"\"\<Periodicity\>\"", "->", " ", 
       RowBox[{"(", "periodicity", ")"}]}]}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"os", "=", 
     RowBox[{"ConstantArray", "[", 
      RowBox[{"0", ",", 
       RowBox[{"{", 
        RowBox[{"No", ",", "ySelect", ",", "Ny"}], "}"}]}], "]"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.624945131553623*^9, 3.6249451319208727`*^9}, {
   3.624945161985224*^9, 3.6249451653214817`*^9}, 3.624949614870289*^9, 
   3.624949740445407*^9, {3.624950364090351*^9, 3.6249503898908143`*^9}, 
   3.624950448650448*^9, {3.624950495165639*^9, 3.624950495217674*^9}, 
   3.6249508409889708`*^9, 3.6249513022397013`*^9, 3.624954676615217*^9, 
   3.624954748031515*^9, 3.6249693732948637`*^9, 3.6249694658379197`*^9, {
   3.6250317012872024`*^9, 3.6250317257559805`*^9}, 3.6250318301436987`*^9, 
   3.625040271516988*^9, 3.6251176337634983`*^9, 3.6252147537220798`*^9, 
   3.6252169915145626`*^9, 3.625218649872223*^9, {3.6252195690869074`*^9, 
   3.625219569182971*^9}, 3.6252203329985323`*^9, {3.625222628031225*^9, 
   3.625222632710331*^9}, 3.625222986312934*^9, {3.6252249799362917`*^9, 
   3.625225002900473*^9}, 3.6252257342036953`*^9, 3.625228907361856*^9, 
   3.625231694897396*^9, {3.6252821840401955`*^9, 3.625282185422537*^9}, {
   3.625315802167776*^9, 3.625315802402194*^9}, {3.62531829713197*^9, 
   3.6253182972100706`*^9}, {3.62531993484264*^9, 3.6253199349363937`*^9}, 
   3.6253323826524377`*^9, {3.625366737346525*^9, 3.6253667379559355`*^9}, {
   3.6253712732587986`*^9, 3.62537128107899*^9}, 3.625372707968023*^9, 
   3.6253730341067*^9, {3.6253734033956156`*^9, 3.625373411256999*^9}, 
   3.6253741062261734`*^9, 3.625374385428779*^9, {3.625374567222395*^9, 
   3.6253745857149935`*^9}, 3.625374672888541*^9, {3.6253780802830095`*^9, 
   3.625378084841679*^9}, {3.6254039987916765`*^9, 3.625404079486368*^9}, {
   3.6254619483342047`*^9, 3.6254619804620404`*^9}, {3.6254629383582172`*^9, 
   3.625462940037594*^9}, {3.6254631896831427`*^9, 3.6254632078090363`*^9}, {
   3.625463281825509*^9, 3.625463292732304*^9}, 3.6254696802733526`*^9, {
   3.6254697138537893`*^9, 3.625469725713749*^9}, {3.625469797811081*^9, 
   3.6254697993267794`*^9}, 3.625470239100869*^9, 3.625478532675105*^9, {
   3.625478683778561*^9, 3.6254786838566647`*^9}, 3.6254788103501225`*^9, {
   3.6254789061159143`*^9, 3.625478908303775*^9}, 3.6254794202212963`*^9, 
   3.6254891519277*^9, 3.6254892740287657`*^9, {3.6255497394376564`*^9, 
   3.625549739884958*^9}, {3.6255499669171844`*^9, 3.6255499669802265`*^9}, 
   3.6255502590342693`*^9, {3.625550405024269*^9, 3.6255504080562844`*^9}, 
   3.62598559597268*^9, 3.6260713353133307`*^9, 3.6260720756429687`*^9, 
   3.626072819563247*^9, 3.62607881727878*^9, {3.6260789303922963`*^9, 
   3.6260789304704213`*^9}, {3.626079705711183*^9, 3.626079706711237*^9}, {
   3.6260803562298074`*^9, 3.626080369714921*^9}, {3.6260806031712523`*^9, 
   3.6260806037494555`*^9}, {3.6260823824095097`*^9, 3.62608238598782*^9}, {
   3.626093124928266*^9, 3.626093125615822*^9}, {3.626096489332111*^9, 
   3.626096490550897*^9}, {3.6260971478535967`*^9, 3.6260971484786463`*^9}, 
   3.626582258752741*^9, 3.6265824941337414`*^9, 3.6266116310346603`*^9, {
   3.6266658553890424`*^9, 3.6266658554610424`*^9}, 3.6266661871520424`*^9, {
   3.626666975102042*^9, 3.626666975885042*^9}, {3.628321858397415*^9, 
   3.628321891301302*^9}, {3.628326418056525*^9, 3.6283264181503043`*^9}, 
   3.6283281212149243`*^9, {3.634569243861385*^9, 3.6345692449406004`*^9}, 
   3.6352394908693237`*^9, {3.635244735846283*^9, 3.63524474114318*^9}, {
   3.6352448562852387`*^9, 3.6352449382764854`*^9}, {3.6352449755115004`*^9, 
   3.635245061105542*^9}, {3.635245331811201*^9, 3.6352453319205775`*^9}, {
   3.635246850280826*^9, 3.6352468503433237`*^9}, {3.6352468866090317`*^9, 
   3.6352468866715317`*^9}, {3.6352485344825935`*^9, 3.635248535388919*^9}, {
   3.6352511711630383`*^9, 3.635251171241164*^9}, {3.635251305310001*^9, 
   3.6352513088725133`*^9}, 3.63525353712506*^9, {3.6352543950282993`*^9, 
   3.6352543953095503`*^9}, 3.635254901968296*^9, {3.635255177782792*^9, 
   3.635255177845235*^9}, 3.635481310074271*^9, {3.636180012859438*^9, 
   3.6361800190836782`*^9}, 3.636182433469011*^9, {3.636182680495011*^9, 
   3.6361826805730104`*^9}, 3.6361829477542105`*^9, {3.63618312329648*^9, 
   3.6361831254023585`*^9}, {3.6361899350223627`*^9, 3.6361899363015547`*^9}, 
   3.636193066507264*^9, {3.6362667641064386`*^9, 3.6362667675908422`*^9}, {
   3.636266803520385*^9, 3.6362668035359435`*^9}, 3.636268192702372*^9, {
   3.636363668059152*^9, 3.636363668106043*^9}, {3.6363774501299086`*^9, 
   3.636377451009323*^9}, {3.827550779430331*^9, 3.8275507829448967`*^9}, {
   3.827640573599739*^9, 3.8276405749658613`*^9}, {3.827811047316004*^9, 
   3.8278110483047514`*^9}, {3.828152456307746*^9, 3.828152467898822*^9}, {
   3.8281569880972915`*^9, 3.8281569918671074`*^9}, {3.8286055872485504`*^9, 
   3.82860558968379*^9}, {3.8319944814955378`*^9, 3.8319944894840555`*^9}, {
   3.871374355389465*^9, 3.871374373192091*^9}, {3.8714658019157953`*^9, 
   3.871465802299467*^9}, 3.8714658378159704`*^9, {3.8714659243158965`*^9, 
   3.871465925495992*^9}, 3.8714659845191936`*^9, {3.871466177579902*^9, 
   3.8714661786383853`*^9}, {3.927612942791539*^9, 3.9276129877480073`*^9}, {
   3.928217697319748*^9, 3.9282176985303526`*^9}},
 CellLabel->
  "In[786]:=",ExpressionUUID->"5f75c1d1-87f1-4506-b00d-9f4d6ad9527b"]
}, Closed]],

Cell[CellGroupData[{

Cell["From end points to start points on lifted vessel trees", "Chapter",
 CellChangeTimes->{{3.8713742882773046`*^9, 
  3.8713743127096663`*^9}},ExpressionUUID->"f2cf6634-0cb7-43dc-b16f-\
e6b62cf551f3"],

Cell[CellGroupData[{

Cell["Coordinate conversion", "Subsection",
 CellChangeTimes->{{3.6364356019938498`*^9, 
  3.6364356064314165`*^9}},ExpressionUUID->"1d24b0c7-bf80-4a41-a197-\
d54e551aab3e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SeedPointConversionGraphicsToArray", "[", 
   RowBox[{
   "g0_", ",", "Nx_", ",", "Ny_", ",", "s\[Theta]_", ",", "periodicity_"}], 
   "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Mod", "[", 
       RowBox[{
        RowBox[{"#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
        ",", 
        RowBox[{"periodicity", "/", "s\[Theta]"}], ",", "1"}], "]"}], ",", 
      RowBox[{"Mod", "[", 
       RowBox[{
        RowBox[{"#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
        ",", "Nx", ",", "1"}], "]"}], ",", 
      RowBox[{"Mod", "[", 
       RowBox[{
        RowBox[{"#", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
        ",", "Ny", ",", "1"}], "]"}]}], "}"}], "&"}], "@", 
   RowBox[{"Round", "@", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"g0", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}],
          ")"}], "/", "s\[Theta]"}], "+", "1"}], ",", 
      RowBox[{"g0", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
      ",", 
      RowBox[{"g0", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
     "}"}]}]}]}]], "Code",
 CellChangeTimes->{{3.6364337668468122`*^9, 3.636433835249631*^9}, {
  3.6651356369876966`*^9, 3.6651356444869556`*^9}, {3.6651356962560973`*^9, 
  3.665135696927986*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"a2413ffe-6e3c-4240-be97-8324c1a98fa2"],

Cell[BoxData[
 RowBox[{"Dimensions", "[", "startAndBifurcationPoints", "]"}]], "Input",
 CellChangeTimes->{{3.665135443960734*^9, 3.665135445152845*^9}},
 CellLabel->
  "In[796]:=",ExpressionUUID->"69f14586-f522-4d94-bb71-a269bc245a4a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"g0ListStartAndBifurcation", "=", 
   RowBox[{"Map", "[", 
    RowBox[{"Flatten", ",", 
     RowBox[{"startAndBifurcationPoints", "\[LeftDoubleBracket]", 
      RowBox[{"All", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "3"}], "}"}]}], "\[RightDoubleBracket]"}], ",", 
     RowBox[{"{", "1", "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"g1ListEnd", "=", 
    RowBox[{"Map", "[", 
     RowBox[{"Flatten", ",", 
      RowBox[{"endPoints", "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "3"}], "}"}]}], "\[RightDoubleBracket]"}], ",", 
      RowBox[{"{", "1", "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"g0dListStartAndBifurcation", "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"SeedPointConversionGraphicsToArray", "[", 
       RowBox[{
       "#", ",", "Nx", ",", "Ny", ",", "s\[Theta]", ",", "periodicity"}], 
       "]"}], "&"}], ",", "g0ListStartAndBifurcation", ",", 
     RowBox[{"{", "1", "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"g1dListEnd", "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"SeedPointConversionGraphicsToArray", "[", 
       RowBox[{
       "#", ",", "Nx", ",", "Ny", ",", "s\[Theta]", ",", "periodicity"}], 
       "]"}], "&"}], ",", "g1ListEnd", ",", 
     RowBox[{"{", "1", "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.636433652329668*^9, 3.636433694002096*^9}, {
  3.63643373233078*^9, 3.6364337491903777`*^9}, {3.6376618496451197`*^9, 
  3.637661885017646*^9}, {3.6376626272726645`*^9, 3.637662628227087*^9}, {
  3.6376629292713966`*^9, 3.6376629296435785`*^9}, {3.665133786113971*^9, 
  3.6651337867051764`*^9}, {3.665133824789706*^9, 3.6651338295961237`*^9}, {
  3.6651338740696697`*^9, 3.6651338996257715`*^9}, {3.6651339826886*^9, 
  3.6651339864148445`*^9}},
 CellLabel->
  "In[797]:=",ExpressionUUID->"0f80ebb3-33e1-44c0-ac4d-a9d4a9693b45"],

Cell[CellGroupData[{

Cell["Determine centerline and orientations of centerline", "Subsubsection",
 CellChangeTimes->{{3.6379164064157114`*^9, 
  3.6379164144033766`*^9}},ExpressionUUID->"6c918c77-536a-40c4-99df-\
1a4d1bfec620"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"nrOfAveragePoints", "=", "8"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"should", " ", "be", " ", "even"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"centerlinesAndAngles", "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Select", " ", "first", " ", "and", " ", "second", " ", "wall"}], 
        "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"trackFirstWall", "=", 
         RowBox[{"Transpose", "[", 
          RowBox[{"\"\<firstWall\>\"", "/.", "#"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"trackSecondWall", "=", 
         RowBox[{"Transpose", "[", 
          RowBox[{"\"\<secondWall\>\"", "/.", "#"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
         "Average", " ", "both", " ", "walls", " ", "to", " ", "obtain", " ", 
          "center", " ", "points"}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
         "Make", " ", "a", " ", "list", " ", "of", " ", "the", " ", "center", 
          " ", 
          RowBox[{"points", ":"}]}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"centerPointList", "=", 
         RowBox[{"Table", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"Mean", "[", 
              RowBox[{"{", 
               RowBox[{"#", ",", 
                RowBox[{"First", "[", 
                 RowBox[{"Nearest", "[", 
                  RowBox[{"trackSecondWall", ",", "#"}], "]"}], "]"}]}], 
               "}"}], "]"}], "&"}], "@", 
            RowBox[{
            "trackFirstWall", "\[LeftDoubleBracket]", "pointNr", 
             "\[RightDoubleBracket]"}]}], "\[IndentingNewLine]", ",", 
           RowBox[{"{", 
            RowBox[{"pointNr", ",", "1", ",", 
             RowBox[{"Length", "[", "trackFirstWall", "]"}], ",", "1"}], 
            "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{
          "From", " ", "this", " ", "list", " ", "compute", " ", "the", " ", 
           "average", " ", "direction", " ", "vector"}], ",", " ", 
          RowBox[{"and", " ", "corresponding", " ", "angle"}]}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "centerPointList", "]"}], "<", 
           "nrOfAveragePoints"}], ",", "\[IndentingNewLine]", 
          RowBox[{"averageVectors", "=", 
           RowBox[{"ConstantArray", "[", 
            RowBox[{
             RowBox[{"Normalize", "[", 
              RowBox[{
               RowBox[{
               "centerPointList", "\[LeftDoubleBracket]", "1", 
                "\[RightDoubleBracket]"}], "-", 
               RowBox[{"centerPointList", "\[LeftDoubleBracket]", 
                RowBox[{"-", "1"}], "\[RightDoubleBracket]"}]}], "]"}], ",", 
             RowBox[{"Length", "[", "centerPointList", "]"}]}], "]"}]}], 
          "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"averageVectors", "=", 
            RowBox[{"Normalize", "/@", 
             RowBox[{"ListConvolve", "[", 
              RowBox[{
               RowBox[{"Table", "[", 
                RowBox[{
                 FractionBox[
                  RowBox[{"{", "1", "}"}], "nrOfAveragePoints"], ",", 
                 RowBox[{"{", "nrOfAveragePoints", "}"}]}], "]"}], ",", 
               RowBox[{
                RowBox[{"centerPointList", "\[LeftDoubleBracket]", 
                 RowBox[{"2", ";;", 
                  RowBox[{"-", "1"}]}], "\[RightDoubleBracket]"}], "-", 
                RowBox[{"centerPointList", "\[LeftDoubleBracket]", 
                 RowBox[{"1", ";;", 
                  RowBox[{"-", "2"}]}], "\[RightDoubleBracket]"}]}]}], 
              "]"}]}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"averageVectors", "=", 
            RowBox[{"Join", "[", 
             RowBox[{
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{
                "averageVectors", "\[LeftDoubleBracket]", "1", 
                 "\[RightDoubleBracket]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"Floor", "[", 
                  FractionBox["nrOfAveragePoints", "2"], "]"}], "}"}]}], 
               "]"}], ",", "averageVectors", ",", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"averageVectors", "\[LeftDoubleBracket]", 
                 RowBox[{"-", "1"}], "\[RightDoubleBracket]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"Floor", "[", 
                  FractionBox["nrOfAveragePoints", "2"], "]"}], "}"}]}], 
               "]"}]}], "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"averageAngle", "=", 
         RowBox[{"ArcTan", "[", 
          RowBox[{
           RowBox[{"averageVectors", "\[LeftDoubleBracket]", 
            RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", " ", 
           RowBox[{"averageVectors", "\[LeftDoubleBracket]", 
            RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}]}], "]"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Output", " ", "start", " ", "point"}], ",", " ", 
          RowBox[{"direction", " ", "vector", " ", "and", " ", "angle"}]}], 
         "*)"}], "\[IndentingNewLine]", 
        RowBox[{"Flatten", "/@", 
         RowBox[{"Transpose", "[", 
          RowBox[{"{", 
           RowBox[{"centerPointList", ",", "averageAngle"}], "}"}], "]"}]}]}],
        ")"}], "&"}], ",", "vesselAnnotationsData"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.637571376722161*^9, 3.6375714391064887`*^9}, {
   3.6375714970443068`*^9, 3.637571510733118*^9}, 3.6375715541069317`*^9, 
   3.637571869331643*^9, {3.637571904850258*^9, 3.6375719098608217`*^9}, {
   3.637572073906564*^9, 3.6375720788098755`*^9}, {3.637649949821848*^9, 
   3.6376499886374035`*^9}, {3.6376501731113033`*^9, 3.637650371667511*^9}, 
   3.6376504619003067`*^9, {3.6376505202390757`*^9, 3.6376505399124737`*^9}, {
   3.6376507972493343`*^9, 3.6376508146234455`*^9}, {3.6376508941010833`*^9, 
   3.6376508942972355`*^9}, {3.6376509250776167`*^9, 3.637650926084341*^9}, {
   3.6376510252590656`*^9, 3.6376510387065787`*^9}, {3.637651071317529*^9, 
   3.6376511324717064`*^9}, {3.637651199479637*^9, 3.6376512458124204`*^9}, {
   3.6376515352181773`*^9, 3.6376515401685133`*^9}, {3.6376516982364764`*^9, 
   3.6376517393934407`*^9}, 3.665125770316044*^9, 3.66513429040596*^9, {
   3.6651355573653545`*^9, 3.6651355584122887`*^9}, {3.66513561904144*^9, 
   3.6651356198383427`*^9}, 3.852219377530529*^9, 3.85221951072491*^9},
 CellLabel->
  "In[801]:=",ExpressionUUID->"c828423d-759c-4cfc-8b59-c102cc844862"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"centerlinesAndAngles", "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"SeedPointConversionGraphicsToArray", "[", 
       RowBox[{
       "#", ",", "Nx", ",", "Ny", ",", "s\[Theta]", ",", "periodicity"}], 
       "]"}], "&"}], ",", "centerlinesAndAngles", ",", 
     RowBox[{"{", "2", "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"seedsIndex", "=", 
    RowBox[{
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"SeedPointConversionGraphicsToArray", "[", 
         RowBox[{
          RowBox[{"Join", "[", 
           RowBox[{"#", ",", 
            RowBox[{"{", "1", "}"}]}], "]"}], ",", "Nx", ",", "Ny", ",", 
          "s\[Theta]", ",", "periodicity"}], "]"}], "&"}], ",", "seeds"}], 
      "]"}], "\[LeftDoubleBracket]", 
     RowBox[{"All", ",", 
      RowBox[{"2", ";;", "3"}]}], "\[RightDoubleBracket]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"centerlinesAndAngles", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Select", "[", 
      RowBox[{"#", ",", 
       RowBox[{
        RowBox[{
         RowBox[{"#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
         "<", "ySelect"}], "&"}]}], "]"}], "&"}], "/@", 
    "centerlinesAndAngles"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"seedsIndex", "=", 
   RowBox[{"Select", "[", 
    RowBox[{"seedsIndex", ",", 
     RowBox[{
      RowBox[{
       RowBox[{"#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
       "<", "ySelect"}], "&"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.637651834673237*^9, 3.6376518392465067`*^9}, {
   3.637661485392063*^9, 3.637661537733298*^9}, {3.6376615722566257`*^9, 
   3.63766157381209*^9}, {3.6651343275260973`*^9, 3.6651343378583746`*^9}, {
   3.6651343744392853`*^9, 3.6651344484344425`*^9}, 3.6651346359545555`*^9, {
   3.8459724418731155`*^9, 3.845972448989989*^9}, {3.8459724999003706`*^9, 
   3.845972506186886*^9}, {3.845972594987457*^9, 3.8459725975180984`*^9}, {
   3.845972786544052*^9, 3.8459727878267417`*^9}, {3.8459728836310854`*^9, 
   3.8459728850268545`*^9}, {3.846559845241331*^9, 3.846559847583546*^9}, {
   3.84779201476608*^9, 3.8477920167012525`*^9}, {3.852218955991128*^9, 
   3.852218963882434*^9}},
 CellLabel->
  "In[803]:=",ExpressionUUID->"21efcc76-89bd-4a76-ab8f-a3437d6e67b7"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Select points", "Subsection",
 CellChangeTimes->{{3.637657683292612*^9, 
  3.6376576855526075`*^9}},ExpressionUUID->"447d80d8-c07a-46b5-8d46-\
fe5c1b1c4916"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"g0ListTiers", "=", 
   RowBox[{"Map", "[", 
    RowBox[{"Flatten", ",", 
     RowBox[{"startPoints", "\[LeftDoubleBracket]", 
      RowBox[{"All", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "3"}], "}"}]}], "\[RightDoubleBracket]"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"g1ListTiers", "=", 
   RowBox[{"Map", "[", 
    RowBox[{"Flatten", ",", 
     RowBox[{"endPoints", "\[LeftDoubleBracket]", 
      RowBox[{"All", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "3"}], "}"}]}], "\[RightDoubleBracket]"}]}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.636433652329668*^9, 3.636433694002096*^9}, {
  3.63643373233078*^9, 3.6364337491903777`*^9}, {3.6651337903040724`*^9, 
  3.6651337909447775`*^9}, {3.6651345458192797`*^9, 3.6651345622340174`*^9}},
 CellLabel->
  "In[807]:=",ExpressionUUID->"c280649e-db11-43bb-a61a-5f2edaae149e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"g0dListTiers", "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"SeedPointConversionGraphicsToArray", "[", 
       RowBox[{
       "#", ",", "Nx", ",", "Ny", ",", "s\[Theta]", ",", "periodicity"}], 
       "]"}], "&"}], ",", "g0ListTiers"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"g1dListTiers", "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"SeedPointConversionGraphicsToArray", "[", 
       RowBox[{
       "#", ",", "Nx", ",", "Ny", ",", "s\[Theta]", ",", "periodicity"}], 
       "]"}], "&"}], ",", "g1ListTiers"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6364338419527936`*^9, 3.636433871640727*^9}, {
  3.6651345502023077`*^9, 3.665134555374387*^9}, {3.6651357204043593`*^9, 
  3.6651357210137515`*^9}},
 CellLabel->
  "In[809]:=",ExpressionUUID->"5f4c821f-5ce2-4f78-8263-b952988c68f9"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Calculate Ground Truth Cost Function", "Chapter",
 CellChangeTimes->{{3.87137192293781*^9, 3.8713719274337025`*^9}, {
  3.8713736891815443`*^9, 
  3.8713736930868835`*^9}},ExpressionUUID->"185074f2-58aa-4893-abbc-\
576795ecb0c9"],

Cell[CellGroupData[{

Cell["\<\
Create lift by placing delta peaks at the centerline position and orientation\
\>", "Section",
 CellChangeTimes->{{3.6379164064157114`*^9, 3.637916458682798*^9}, {
  3.637987042429432*^9, 
  3.63798704457016*^9}},ExpressionUUID->"23acdb82-1568-468e-8f62-\
37a8a5c1c479"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"radiusBlurFilter", "=", "2"}], 
  RowBox[{"(*", "2", "*)"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lift", "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{"No", ",", "Nx", ",", "Ny"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Map", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"lift", "\[LeftDoubleBracket]", 
         RowBox[{"Sequence", "@@", "#"}], "\[RightDoubleBracket]"}], "=", 
        "1"}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
           "<=", 
          FractionBox["No", "2"]}], " ", ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"lift", "\[LeftDoubleBracket]", 
            RowBox[{"Sequence", "@@", 
             RowBox[{"(", 
              RowBox[{"#", "+", 
               RowBox[{"{", 
                RowBox[{
                 FractionBox["No", "2"], ",", "0", ",", "0"}], "}"}]}], 
              ")"}]}], "\[RightDoubleBracket]"}], "=", "1"}], ";"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"lift", "\[LeftDoubleBracket]", 
           RowBox[{"Sequence", "@@", 
            RowBox[{"(", 
             RowBox[{"#", "-", 
              RowBox[{"{", 
               RowBox[{
                FractionBox["No", "2"], ",", "0", ",", "0"}], "}"}]}], 
             ")"}]}], "\[RightDoubleBracket]"}], "=", "1"}]}], "]"}]}], ")"}],
      "&"}], ",", "\[IndentingNewLine]", "centerlinesAndAngles", ",", 
    RowBox[{"{", "2", "}"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"lift", "=", 
     RowBox[{"GaussianFilter", "[", 
      RowBox[{"lift", ",", "radiusBlurFilter"}], "]"}]}], ";"}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.6376505703874693`*^9, 3.6376505929318256`*^9}, {
   3.637650677855898*^9, 3.6376507235525694`*^9}, {3.6376513060220947`*^9, 
   3.637651347187981*^9}, 3.637651847137966*^9, {3.6376518977843504`*^9, 
   3.637651909873603*^9}, {3.637657211868204*^9, 3.637657226071316*^9}, {
   3.637657590400847*^9, 3.6376575925459037`*^9}, {3.637667637908661*^9, 
   3.6376676518378325`*^9}, {3.637916393679236*^9, 3.6379164221609726`*^9}, {
   3.637987126745903*^9, 3.6379871444498625`*^9}, 3.82781109452129*^9, {
   3.8278111317119875`*^9, 3.82781113279117*^9}, {3.827813661850422*^9, 
   3.827813662308159*^9}, 3.828152563199275*^9, 3.828605620229334*^9, {
   3.9104244937605543`*^9, 3.9104245018195763`*^9}, 3.9104283021906815`*^9, 
   3.910430451913012*^9, {3.9108519888344927`*^9, 3.9108519899980693`*^9}, {
   3.9229555761248035`*^9, 3.922955581414219*^9}, 3.9276163509700937`*^9},
 CellLabel->
  "In[811]:=",ExpressionUUID->"a50e7429-70b8-4266-9496-7966f2eaf57b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"liftElevator", "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{"No", ",", "Nx", ",", "Ny"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Map", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"liftElevator", "\[LeftDoubleBracket]", 
         RowBox[{"Sequence", "@@", "#"}], "\[RightDoubleBracket]"}], "=", 
        "1"}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
           "<=", 
          RowBox[{"No", "/", "2"}]}], " ", ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"liftElevator", "\[LeftDoubleBracket]", 
            RowBox[{"Sequence", "@@", 
             RowBox[{"(", 
              RowBox[{"#", "+", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"No", "/", "2"}], ",", "0", ",", "0"}], "}"}]}], 
              ")"}]}], "\[RightDoubleBracket]"}], "=", "1"}], ";"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"liftElevator", "\[LeftDoubleBracket]", 
           RowBox[{"Sequence", "@@", 
            RowBox[{"(", 
             RowBox[{"#", "-", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"No", "/", "2"}], ",", "0", ",", "0"}], "}"}]}], 
             ")"}]}], "\[RightDoubleBracket]"}], "=", "1"}]}], "]"}]}], ")"}],
      "&"}], ",", "\[IndentingNewLine]", "centerlinesAndAngles", ",", 
    RowBox[{"{", "2", "}"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Map", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"liftElevator", "\[LeftDoubleBracket]", 
        RowBox[{"All", ",", 
         RowBox[{"Sequence", "@@", "#"}]}], "\[RightDoubleBracket]"}], "=", 
       "1"}], ";"}], "&"}], ",", "seedsIndex"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"liftElevator", "=", 
     RowBox[{"GaussianFilter", "[", 
      RowBox[{"liftElevator", ",", "radiusBlurFilter"}], "]"}]}], ";"}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.6376505703874693`*^9, 3.6376505929318256`*^9}, {
   3.637650677855898*^9, 3.6376507235525694`*^9}, {3.6376513060220947`*^9, 
   3.637651347187981*^9}, 3.637651847137966*^9, {3.6376518977843504`*^9, 
   3.637651909873603*^9}, {3.637657211868204*^9, 3.637657226071316*^9}, {
   3.637657590400847*^9, 3.6376575925459037`*^9}, {3.637661451590773*^9, 
   3.6376614752931576`*^9}, {3.6376615440990224`*^9, 3.637661544629841*^9}, {
   3.6376615763082895`*^9, 3.637661598405514*^9}, {3.637666652553603*^9, 
   3.637666652678602*^9}, {3.6376673936491594`*^9, 3.637667493914549*^9}, {
   3.6376675560524125`*^9, 3.6376675656726313`*^9}, 3.6376676152477036`*^9, {
   3.637987123386367*^9, 3.637987147387498*^9}, 3.910424523736122*^9, 
   3.927616354054573*^9},
 CellLabel->
  "In[814]:=",ExpressionUUID->"d3ff47c3-ceec-49c1-b315-66458e7d9f18"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"liftElevatorBifurcations", "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{"No", ",", "Nx", ",", "Ny"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Map", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"liftElevatorBifurcations", "\[LeftDoubleBracket]", 
         RowBox[{"Sequence", "@@", "#"}], "\[RightDoubleBracket]"}], "=", 
        "1"}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
           "<=", 
          RowBox[{"No", "/", "2"}]}], " ", ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"liftElevatorBifurcations", "\[LeftDoubleBracket]", 
            RowBox[{"Sequence", "@@", 
             RowBox[{"(", 
              RowBox[{"#", "+", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"No", "/", "2"}], ",", "0", ",", "0"}], "}"}]}], 
              ")"}]}], "\[RightDoubleBracket]"}], "=", "1"}], ";"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"liftElevatorBifurcations", "\[LeftDoubleBracket]", 
           RowBox[{"Sequence", "@@", 
            RowBox[{"(", 
             RowBox[{"#", "-", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"No", "/", "2"}], ",", "0", ",", "0"}], "}"}]}], 
             ")"}]}], "\[RightDoubleBracket]"}], "=", "1"}]}], "]"}]}], ")"}],
      "&"}], ",", "\[IndentingNewLine]", "centerlinesAndAngles", ",", 
    RowBox[{"{", "2", "}"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Map", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"liftElevatorBifurcations", "\[LeftDoubleBracket]", 
        RowBox[{"All", ",", 
         RowBox[{"Sequence", "@@", "#"}]}], "\[RightDoubleBracket]"}], "=", 
       "2"}], ";"}], "&"}], ",", "seedsIndex"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"liftElevatorBifurcations", "=", 
     RowBox[{"Rescale", "[", 
      RowBox[{"GaussianFilter", "[", 
       RowBox[{"liftElevatorBifurcations", ",", "radiusBlurFilter"}], "]"}], 
      "]"}]}], ";"}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.6376505703874693`*^9, 3.6376505929318256`*^9}, {
   3.637650677855898*^9, 3.6376507235525694`*^9}, {3.6376513060220947`*^9, 
   3.637651347187981*^9}, 3.637651847137966*^9, {3.6376518977843504`*^9, 
   3.637651909873603*^9}, {3.637657211868204*^9, 3.637657226071316*^9}, {
   3.637657590400847*^9, 3.6376575925459037`*^9}, {3.637661451590773*^9, 
   3.6376614752931576`*^9}, {3.6376615440990224`*^9, 3.637661544629841*^9}, {
   3.6376615763082895`*^9, 3.637661598405514*^9}, {3.637666652553603*^9, 
   3.637666652678602*^9}, {3.6376673936491594`*^9, 3.637667493914549*^9}, {
   3.6376675560524125`*^9, 3.6376675656726313`*^9}, 3.6376676152477036`*^9, {
   3.637987123386367*^9, 3.637987147387498*^9}, {3.831568414886436*^9, 
   3.83156843402491*^9}, {3.83156850196632*^9, 3.8315685177867603`*^9}, {
   3.8315685634704256`*^9, 3.8315685968756104`*^9}, 3.91042453245315*^9, 
   3.92761636037718*^9},
 CellLabel->
  "In[817]:=",ExpressionUUID->"fc6afbf8-5d07-43f5-b391-305f75ba7be5"],

Cell[BoxData[
 RowBox[{"GraphicsRow", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Image3D", "[", 
      RowBox[{"lift", ",", 
       RowBox[{"BoxRatios", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"1", ",", "1", ",", "0.5"}], "}"}]}]}], "]"}], ",", 
     RowBox[{"Image3D", "[", 
      RowBox[{"liftElevator", ",", 
       RowBox[{"BoxRatios", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"1", ",", "1", ",", "0.5"}], "}"}]}]}], "]"}], ",", 
     RowBox[{"Image3D", "[", 
      RowBox[{"liftElevatorBifurcations", ",", 
       RowBox[{"BoxRatios", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"1", ",", "1", ",", "0.5"}], "}"}]}]}], "]"}]}], "}"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"All", ",", "300"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.637657268821263*^9, {3.6376573236261787`*^9, 3.6376573522007265`*^9}, {
   3.637661613446001*^9, 3.637661616023898*^9}, {3.6379870625866203`*^9, 
   3.637987093134943*^9}, {3.637987222640225*^9, 3.637987225577823*^9}, {
   3.6379872853923063`*^9, 3.6379872880330753`*^9}, {3.6651232231491547`*^9, 
   3.6651232236803875`*^9}, {3.8315684439637895`*^9, 3.831568448536682*^9}, {
   3.8316334769349704`*^9, 3.8316334821598387`*^9}, 3.856494293040949*^9},
 CellLabel->
  "In[820]:=",ExpressionUUID->"d2949db6-008f-4fd9-94d3-5796e6307c1b"]
}, Closed]],

Cell[CellGroupData[{

Cell["Construct cost", "Section",
 CellChangeTimes->{{3.637916481561216*^9, 
  3.6379164833499985`*^9}},ExpressionUUID->"f6ef710c-a3c1-4bc2-bc79-\
c2a0235ae6dd"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Lambda]", "=", "400"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"p", "=", "2"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"V", "=", 
   RowBox[{"Rescale", "[", "lift", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"costLift", "=", 
   FractionBox["1", 
    RowBox[{"1", "+", 
     RowBox[{"\[Lambda]", " ", 
      SuperscriptBox["V", 
       RowBox[{"p", " "}]]}]}]]}], ";"}]}], "Input",
 CellChangeTimes->{{3.637657513369492*^9, 3.637657529720753*^9}, {
  3.6376584133584585`*^9, 3.637658413576046*^9}, {3.6376584862070875`*^9, 
  3.637658488992645*^9}, {3.8275503555082564`*^9, 3.82755035555513*^9}, {
  3.827550518073368*^9, 3.827550518113578*^9}, {3.8280657089371815`*^9, 
  3.8280657095065513`*^9}},
 CellLabel->
  "In[821]:=",ExpressionUUID->"b0081a05-ff0e-4057-9075-6dfd4928739f"],

Cell[BoxData[
 RowBox[{"Row", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"ImageAdjust", "[", 
     RowBox[{"Image", "[", 
      RowBox[{"imhalf", ",", 
       RowBox[{"ImageSize", "\[Rule]", "300"}]}], "]"}], "]"}], ",", 
    RowBox[{"ImageAdjust", "[", 
     RowBox[{"Image", "[", 
      RowBox[{
       RowBox[{
       "costLift", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
       ",", 
       RowBox[{"ImageSize", "\[Rule]", "300"}]}], "]"}], "]"}], ",", 
    RowBox[{"ImageAdjust", "[", 
     RowBox[{"Image", "[", 
      RowBox[{
       RowBox[{"Map", "[", 
        RowBox[{"Min", ",", 
         RowBox[{"Transpose", "[", 
          RowBox[{"costLift", ",", 
           RowBox[{"{", 
            RowBox[{"3", ",", "1", ",", "2"}], "}"}]}], "]"}], ",", 
         RowBox[{"{", "2", "}"}]}], "]"}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "300"}]}], "]"}], "]"}], ",", 
    RowBox[{"Image3D", "[", 
     RowBox[{
      RowBox[{"Rescale", "[", 
       RowBox[{"-", "costLift"}], "]"}], ",", 
      RowBox[{"BoxRatios", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"1", ",", "1", ",", "0.5"}], "}"}]}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "300"}]}], "]"}]}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.637657555299677*^9, 3.6376575653436995`*^9}, {
  3.6376578507257237`*^9, 3.637657853445543*^9}, {3.665134471977529*^9, 
  3.665134472477547*^9}},
 CellLabel->
  "In[825]:=",ExpressionUUID->"fd7726dd-b980-4d64-98bc-6283c9f61c6e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Lambda]", "=", "400"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"p", "=", "2"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"V", "=", 
   RowBox[{"Rescale", "[", "liftElevator", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"costLiftElevator", "=", 
   FractionBox["1", 
    RowBox[{"1", "+", 
     RowBox[{"\[Lambda]", " ", 
      SuperscriptBox["V", 
       RowBox[{"p", " "}]]}]}]]}], ";"}]}], "Input",
 CellChangeTimes->{{3.637657513369492*^9, 3.637657529720753*^9}, {
   3.6376584133584585`*^9, 3.637658413576046*^9}, {3.6376584862070875`*^9, 
   3.637658488992645*^9}, {3.637661639989121*^9, 3.6376616460463066`*^9}, {
   3.8275506064411526`*^9, 3.8275506094663534`*^9}, 3.8275506953651385`*^9, {
   3.8275509202371597`*^9, 3.8275509210903344`*^9}, 3.8275831660718727`*^9},
 CellLabel->
  "In[826]:=",ExpressionUUID->"c1b44ee4-025f-4de6-9350-29518cf00814"],

Cell[BoxData[
 RowBox[{"Row", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"ImageAdjust", "[", 
     RowBox[{"Image", "[", 
      RowBox[{"imhalf", ",", 
       RowBox[{"ImageSize", "\[Rule]", "300"}]}], "]"}], "]"}], ",", 
    RowBox[{"ImageAdjust", "[", 
     RowBox[{"Image", "[", 
      RowBox[{
       RowBox[{
       "costLiftElevator", "\[LeftDoubleBracket]", "1", 
        "\[RightDoubleBracket]"}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "300"}]}], "]"}], "]"}], ",", 
    RowBox[{"ImageAdjust", "[", 
     RowBox[{"Image", "[", 
      RowBox[{
       RowBox[{"Map", "[", 
        RowBox[{"Min", ",", 
         RowBox[{"Transpose", "[", 
          RowBox[{"costLiftElevator", ",", 
           RowBox[{"{", 
            RowBox[{"3", ",", "1", ",", "2"}], "}"}]}], "]"}], ",", 
         RowBox[{"{", "2", "}"}]}], "]"}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "300"}]}], "]"}], "]"}], ",", 
    RowBox[{"Image3D", "[", 
     RowBox[{
      RowBox[{"Rescale", "[", 
       RowBox[{"-", "costLiftElevator"}], "]"}], ",", 
      RowBox[{"BoxRatios", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"2", ",", "1", ",", "0.2"}], "}"}]}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "300"}]}], "]"}]}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.637657555299677*^9, 3.6376575653436995`*^9}, {
  3.6376578507257237`*^9, 3.637657853445543*^9}, {3.63766166225002*^9, 
  3.6376616732018642`*^9}, {3.665134479552128*^9, 3.6651344805052376`*^9}, {
  3.8281517333281717`*^9, 3.828151746690529*^9}},
 CellLabel->
  "In[830]:=",ExpressionUUID->"600ff998-a388-47fd-989e-1c6a2c8f73c0"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Lambda]", "=", "400"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"p", "=", "2"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"V", "=", 
   RowBox[{"Rescale", "[", "liftElevatorBifurcations", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"costLiftElevatorBifurcations", "=", 
   FractionBox["1", 
    RowBox[{"1", "+", 
     RowBox[{"\[Lambda]", " ", 
      SuperscriptBox["V", 
       RowBox[{"p", " "}]]}]}]]}], ";"}]}], "Input",
 CellChangeTimes->{{3.637657513369492*^9, 3.637657529720753*^9}, {
   3.6376584133584585`*^9, 3.637658413576046*^9}, {3.6376584862070875`*^9, 
   3.637658488992645*^9}, {3.637661639989121*^9, 3.6376616460463066`*^9}, {
   3.8275506064411526`*^9, 3.8275506094663534`*^9}, 3.8275506953651385`*^9, {
   3.8275509202371597`*^9, 3.8275509210903344`*^9}, 3.8275831660718727`*^9, {
   3.831568622625779*^9, 3.8315686279917107`*^9}},
 CellLabel->
  "In[831]:=",ExpressionUUID->"df766053-ac38-4675-9af9-19acf8602648"],

Cell[BoxData[
 RowBox[{"Row", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"ImageAdjust", "[", 
     RowBox[{"Image", "[", 
      RowBox[{"imhalf", ",", 
       RowBox[{"ImageSize", "\[Rule]", "300"}]}], "]"}], "]"}], ",", 
    RowBox[{"ImageAdjust", "[", 
     RowBox[{"Image", "[", 
      RowBox[{
       RowBox[{
       "costLiftElevatorBifurcations", "\[LeftDoubleBracket]", "1", 
        "\[RightDoubleBracket]"}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "300"}]}], "]"}], "]"}], ",", 
    RowBox[{"ImageAdjust", "[", 
     RowBox[{"Image", "[", 
      RowBox[{
       RowBox[{"Map", "[", 
        RowBox[{"Min", ",", 
         RowBox[{"Transpose", "[", 
          RowBox[{"costLiftElevatorBifurcations", ",", 
           RowBox[{"{", 
            RowBox[{"3", ",", "1", ",", "2"}], "}"}]}], "]"}], ",", 
         RowBox[{"{", "2", "}"}]}], "]"}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "300"}]}], "]"}], "]"}], ",", 
    RowBox[{"Image3D", "[", 
     RowBox[{
      RowBox[{"Rescale", "[", 
       RowBox[{"-", "costLiftElevatorBifurcations"}], "]"}], ",", 
      RowBox[{"BoxRatios", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"2", ",", "1", ",", "0.2"}], "}"}]}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "300"}]}], "]"}]}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.637657555299677*^9, 3.6376575653436995`*^9}, {
  3.6376578507257237`*^9, 3.637657853445543*^9}, {3.63766166225002*^9, 
  3.6376616732018642`*^9}, {3.665134479552128*^9, 3.6651344805052376`*^9}, {
  3.8281517333281717`*^9, 3.828151746690529*^9}, {3.831568636519785*^9, 
  3.8315686460385942`*^9}},
 CellLabel->
  "In[835]:=",ExpressionUUID->"4d9278e5-c563-4f97-808c-676ae31dea89"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Orientation Scores", "Chapter",
 CellChangeTimes->{{3.90558826270372*^9, 
  3.9055882649837255`*^9}},ExpressionUUID->"98c5111d-6504-4a9b-b163-\
ac3009843f20"],

Cell[CellGroupData[{

Cell["Cakewavelets", "Section",
 CellChangeTimes->{{3.905494011342417*^9, 
  3.9054940136158934`*^9}},ExpressionUUID->"5ffa6200-b0b5-45fd-baec-\
02c2af4c8a7c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Size", ":"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"size", "=", "301"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sTheta", "=", 
     RowBox[{"2", 
      RowBox[{"\[Pi]", "/", "No"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"periodicity", "=", 
     RowBox[{"2", "\[Pi]"}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
    "In", " ", "Mathematica", " ", "you", " ", "can", " ", "type", " ", 
     "\"\<Pi\>\"", " ", "or", " ", "\"\<[esc]pi[esc]\>\""}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"assr", "=", "1"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"cws", "=", 
     RowBox[{"CakeWaveletStack", "[", 
      RowBox[{"size", ",", "sTheta", ",", "\[IndentingNewLine]", 
       RowBox[{"\"\<InflectionPoint\>\"", "\[Rule]", "100"}], ",", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
         "this", " ", "is", " ", "the", " ", "radius", " ", "of", " ", "the", 
          " ", "disk", " ", "in", " ", "the", " ", "fourier", " ", "domain"}],
          ",", " ", 
         RowBox[{
         "lowering", " ", "this", " ", "removes", " ", "more", " ", "high", 
          " ", "frequencies"}]}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"\"\<AngularSubSampleRate\>\"", "\[Rule]", "assr"}], ",", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
         "With", " ", "this", " ", "parameter", " ", "the", " ", "wavelets", 
          " ", "still", " ", "have", " ", "an", " ", "angular", " ", "width", 
          " ", 
          RowBox[{"(", 
           RowBox[{"in", " ", "Fourier", " ", "domain"}], ")"}], " ", "of", 
          " ", "sTheta"}], ",", " ", 
         RowBox[{
         "but", " ", "more", " ", "wavelets", " ", "are", " ", "used", " ", 
          "to", " ", "cover", " ", "the", " ", "domain", " ", "0", " ", "to", 
          " ", "periodicity", " ", 
          RowBox[{"(", 
           RowBox[{
           "there", " ", "is", " ", "overlap", " ", "of", " ", "the", " ", 
            "cakes"}], ")"}]}]}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"\"\<Periodicity\>\"", "\[Rule]", "periodicity"}]}], "]"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.6699516456007147`*^9, 3.669951716839571*^9}, {
   3.669954029206094*^9, 3.669954095047618*^9}, {3.6699541264757414`*^9, 
   3.669954290227112*^9}, {3.90549433159899*^9, 3.905494331787574*^9}, {
   3.905496322076161*^9, 3.9054963252512093`*^9}, {3.905496379340312*^9, 
   3.905496381549016*^9}, {3.905496636932788*^9, 3.9054966375820837`*^9}, {
   3.9054967056812515`*^9, 3.9054967058072186`*^9}, 3.9054970226740136`*^9, {
   3.9054970564625998`*^9, 3.9054970650677795`*^9}},
 CellLabel->
  "In[836]:=",ExpressionUUID->"828d8904-ccce-4f57-aa86-b950a9e61aac"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"(*", 
   RowBox[{
   "Usually", " ", "we", " ", "remove", " ", "the", " ", "lower", " ", 
    "frequencies", " ", "in", " ", "the", " ", "image"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"imHP", "=", 
     RowBox[{"imhalf", "-", 
      RowBox[{"GaussianFilter", "[", 
       RowBox[{"imhalf", ",", "32"}], "]"}]}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{"HP", ":", " ", "\"\<High-Pass\>\""}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"ImageAdjust", "[", 
    RowBox[{"Image", "[", "imHP", "]"}], "]"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.905494062860077*^9, 3.9054940643078623`*^9}, {
  3.9055886729905825`*^9, 3.905588677581869*^9}},
 CellLabel->
  "In[841]:=",ExpressionUUID->"a1a7f697-e933-4b1d-9242-719a8982a571"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"(*", 
   RowBox[{
   "Usually", " ", "we", " ", "remove", " ", "the", " ", "lower", " ", 
    "frequencies", " ", "in", " ", "the", " ", "image"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"maskHP", "=", 
     RowBox[{"maskhalf", "-", 
      RowBox[{"GaussianFilter", "[", 
       RowBox[{"maskhalf", ",", "32"}], "]"}]}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{"HP", ":", " ", "\"\<High-Pass\>\""}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"ImageAdjust", "[", 
    RowBox[{"Image", "[", "maskHP", "]"}], "]"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.9054946981573553`*^9, 3.9054947266446304`*^9}, {
  3.905588708821539*^9, 3.9055887129796576`*^9}},
 CellLabel->
  "In[842]:=",ExpressionUUID->"5125239e-319f-435b-9e7b-8a81566b0ae4"]
}, Closed]],

Cell[CellGroupData[{

Cell["Orientation Scores", "Section",
 CellChangeTimes->{{3.9035247466768227`*^9, 
  3.9035247504145436`*^9}},ExpressionUUID->"3527b40f-68dd-4436-89c8-\
a53596ea29b6"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"osErik", "=", 
    RowBox[{"WaveletTransform2DErik", "[", 
     RowBox[{"cws", ",", "imHP"}], "]"}]}], ";"}], "*)"}]], "Input",
 CellChangeTimes->{{3.9054945083550663`*^9, 3.905494535380582*^9}, {
   3.9060054519015837`*^9, 3.906005452424637*^9}, 3.906097874717969*^9},
 CellLabel->
  "In[843]:=",ExpressionUUID->"92619747-15e0-42cd-8dfa-05349e1a7365"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Denoising", "Chapter",
 CellChangeTimes->{{3.8733666985866876`*^9, 
  3.8733666996800737`*^9}},ExpressionUUID->"b6dc5ffb-df49-448c-96a5-\
3891d17c8709"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"DoLeftTVF", "[", 
    RowBox[{
    "os_", ",", "\[Alpha]_", ",", " ", "t_", ",", " ", "dt_", ",", " ", "Ds_",
      ",", " ", "Da_", ",", " ", "source_", ",", " ", 
     RowBox[{"\[Kappa]_", ":", "1"}]}], "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"out", " ", "=", "os"}], ",", " ", 
       RowBox[{"progress", "=", "0.0"}], ",", " ", "diff", ",", " ", "grad", 
       ",", " ", "grad1", ",", " ", "grad2", ",", " ", "grad3", ",", " ", 
       "gradNorm", ",", " ", "gradGN1", ",", " ", "gradGN2", ",", " ", 
       "gradGN3", ",", " ", "gradGN", ",", 
       RowBox[{"\[Lambda]", "=", "50"}], ",", " ", "L1", ",", " ", "L2", ",", 
       " ", "img"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"img", "=", 
       RowBox[{"InverseOrientationScoreTransform", "[", "out", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Monitor", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"L1", " ", "=", " ", 
          RowBox[{"{", 
           RowBox[{"ImageDistance", "[", 
            RowBox[{"source", ",", " ", "img", ",", " ", 
             RowBox[{"DistanceFunction", "\[Rule]", "ManhattanDistance"}]}], 
            "]"}], "}"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"L2", " ", "=", " ", 
          RowBox[{"{", 
           RowBox[{"ImageDistance", "[", 
            RowBox[{"source", ",", " ", "img", ",", " ", 
             RowBox[{"DistanceFunction", "\[Rule]", "EuclideanDistance"}]}], 
            "]"}], "}"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"out", " ", "=", " ", 
          RowBox[{"Affix", "[", 
           RowBox[{"out", ",", " ", 
            RowBox[{"\"\<Data\>\"", "\[Rule]", " ", 
             RowBox[{"\[Lambda]", " ", "*", " ", 
              RowBox[{"out", "[", "\"\<Data\>\"", "]"}]}]}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Do", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"grad", " ", "=", " ", 
             RowBox[{
              RowBox[{"OrientationScoreTensor", "[", 
               RowBox[{"out", ",", " ", "\"\<Gradient\>\""}], "]"}], "[", 
              "\"\<Data\>\"", "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"grad1", " ", "=", " ", 
             RowBox[{"Ds", "*", 
              RowBox[{"grad", "\[LeftDoubleBracket]", 
               RowBox[{"All", ",", "All", ",", "All", ",", "1"}], 
               "\[RightDoubleBracket]"}]}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"grad2", " ", "=", " ", 
             RowBox[{"Ds", "*", 
              RowBox[{"\[Kappa]", "^", "2"}], "*", 
              RowBox[{"grad", "\[LeftDoubleBracket]", 
               RowBox[{"All", ",", "All", ",", "All", ",", "2"}], 
               "\[RightDoubleBracket]"}]}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"grad3", " ", "=", " ", 
             RowBox[{"Da", "*", 
              RowBox[{"grad", "\[LeftDoubleBracket]", 
               RowBox[{"All", ",", "All", ",", "All", ",", "3"}], 
               "\[RightDoubleBracket]"}]}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"gradNorm", " ", "=", " ", 
             RowBox[{"Sqrt", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"grad1", "^", "2"}], "/", "Ds"}], "+", 
               RowBox[{
                RowBox[{"grad2", "^", "2"}], "/", 
                RowBox[{"(", 
                 RowBox[{"Ds", "*", 
                  RowBox[{"\[Kappa]", "^", "2"}]}], ")"}]}], "+", 
               RowBox[{
                RowBox[{"grad3", "^", "2"}], "/", "Da"}], "+", 
               RowBox[{"0.001", "^", "2"}]}], "]"}]}], ";", 
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"gradNorm", " ", "=", " ", 
             RowBox[{"GaussianFilter", "[", 
              RowBox[{"gradNorm", ",", " ", 
               RowBox[{"{", 
                RowBox[{"{", 
                 RowBox[{"1", ",", "1", ",", "0"}], "}"}], "}"}], ",", " ", 
               RowBox[{"Padding", "\[Rule]", "\"\<Fixed\>\""}]}], "]"}]}], 
            ";", "\[IndentingNewLine]", 
            RowBox[{"gradNorm", " ", "=", " ", 
             RowBox[{"GaussianFilter", "[", 
              RowBox[{"gradNorm", ",", " ", 
               RowBox[{"{", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "0", ",", 
                  RowBox[{"1", "/", "2"}]}], "}"}], "}"}], ",", " ", 
               RowBox[{"Padding", "\[Rule]", " ", "\"\<Periodic\>\""}]}], 
              "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"gradGN1", " ", "=", " ", 
             RowBox[{
              RowBox[{"OrientationScoreTensor", "[", 
               RowBox[{
                RowBox[{"Affix", "[", 
                 RowBox[{"out", ",", " ", 
                  RowBox[{"\"\<Data\>\"", "\[Rule]", " ", 
                   RowBox[{"grad1", "/", "gradNorm"}]}]}], "]"}], ",", " ", 
                "\"\<Gradient\>\""}], "]"}], "[", "\"\<Data\>\"", "]"}]}], 
            ";", "\[IndentingNewLine]", 
            RowBox[{"gradGN2", " ", "=", " ", 
             RowBox[{
              RowBox[{"OrientationScoreTensor", "[", 
               RowBox[{
                RowBox[{"Affix", "[", 
                 RowBox[{"out", ",", " ", 
                  RowBox[{"\"\<Data\>\"", "\[Rule]", " ", 
                   RowBox[{"grad2", "/", "gradNorm"}]}]}], "]"}], ",", " ", 
                "\"\<Gradient\>\""}], "]"}], "[", "\"\<Data\>\"", "]"}]}], 
            ";", "\[IndentingNewLine]", 
            RowBox[{"gradGN3", " ", "=", " ", 
             RowBox[{
              RowBox[{"OrientationScoreTensor", "[", 
               RowBox[{
                RowBox[{"Affix", "[", 
                 RowBox[{"out", ",", " ", 
                  RowBox[{"\"\<Data\>\"", "\[Rule]", " ", 
                   RowBox[{"grad3", "/", "gradNorm"}]}]}], "]"}], ",", " ", 
                "\"\<Gradient\>\""}], "]"}], "[", "\"\<Data\>\"", "]"}]}], 
            ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"gradGN", " ", "=", " ", 
             RowBox[{"MapThread", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"#1", ",", "#2", ",", "#3"}], "}"}], "&"}], ",", 
               RowBox[{"{", 
                RowBox[{"gradGN1", ",", " ", "gradGN2", ",", " ", "gradGN3"}],
                 "}"}], ",", "4"}], "]"}]}], ";", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", 
            RowBox[{"diff", " ", "=", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"gradGN", "\[LeftDoubleBracket]", 
                RowBox[{"All", ",", "All", ",", "All", ",", "1", ",", "1"}], 
                "\[RightDoubleBracket]"}], "\[IndentingNewLine]", "+", 
               RowBox[{"\[Alpha]", "*", 
                RowBox[{"gradGN", "\[LeftDoubleBracket]", 
                 RowBox[{"All", ",", "All", ",", "All", ",", "2", ",", "2"}], 
                 "\[RightDoubleBracket]"}]}], "\[IndentingNewLine]", "+", 
               RowBox[{"\[Alpha]", "*", 
                RowBox[{"gradGN", "\[LeftDoubleBracket]", 
                 RowBox[{"All", ",", "All", ",", "All", ",", "3", ",", "3"}], 
                 "\[RightDoubleBracket]"}]}]}], ")"}]}], ";", 
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"out", " ", "=", " ", 
             RowBox[{"Affix", "[", 
              RowBox[{"out", ",", " ", 
               RowBox[{"\"\<Data\>\"", "\[Rule]", " ", 
                RowBox[{
                 RowBox[{"out", "[", "\"\<Data\>\"", "]"}], " ", "+", " ", 
                 RowBox[{"dt", "*", "diff"}]}]}]}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"img", " ", "=", " ", 
             RowBox[{"InverseOrientationScoreTransform", "[", 
              RowBox[{"Affix", "[", 
               RowBox[{"out", ",", " ", 
                RowBox[{"\"\<Data\>\"", "\[Rule]", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"out", "[", "\"\<Data\>\"", "]"}], "/", 
                   "\[Lambda]"}], ")"}]}]}], "]"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"L1", ",", " ", 
              RowBox[{"ImageDistance", "[", 
               RowBox[{"source", ",", " ", "img", ",", " ", 
                RowBox[{
                "DistanceFunction", "\[Rule]", "ManhattanDistance"}]}], 
               "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"L2", ",", " ", 
              RowBox[{"ImageDistance", "[", 
               RowBox[{"source", ",", " ", "img", ",", " ", 
                RowBox[{
                "DistanceFunction", "\[Rule]", "EuclideanDistance"}]}], 
               "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
            RowBox[{"progress", " ", "+=", " ", 
             RowBox[{"dt", "/", "t"}]}], ";"}], "\[IndentingNewLine]", ",", 
           " ", 
           RowBox[{"Round", "[", 
            RowBox[{"t", "/", "dt"}], "]"}]}], "\[IndentingNewLine]", "]"}], 
         ";"}], "\[IndentingNewLine]", ",", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"ProgressIndicator", "[", "progress", "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Image", "[", 
           RowBox[{"img", ",", " ", 
            RowBox[{"ImageSize", "\[Rule]", "800"}]}], "]"}]}], "}"}]}], 
       "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Affix", "[", 
          RowBox[{"out", ",", " ", 
           RowBox[{"\"\<Data\>\"", "\[Rule]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"out", "[", "\"\<Data\>\"", "]"}], "/", "\[Lambda]"}], 
             ")"}]}]}], "]"}], ",", "L1", ",", "L2"}], "}"}], "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGCQBGIQHaW80OjNt9eOru84bUD0BN+oUBD94p5vJIj+f/hh
HIjeIDgrHURPmvOoCkQfm8dWDaLvZ36bDKL1rC9PAdHXfKXngOh1y1XANENS
5RoQ3aDdBaZfTPffBaLXf+wA0yICwo9BNNfiUDC97YLUaxD9b70ymJbJ1H7w
CUh/EzQD0yHxhnyfgXTzMS8w/SE4f+k3IC1V8mglmJ5+fx2I/nnKcRuIntLr
aVH0/bWjf/laSxB9UOtdGIg2KPkFpquaYqe7/3jtWGL7fxaIniIXJi7z67Vj
96crciB60Y7Hr9N53jg6F2/6BKI5ZjtKZQLpbVYBYFrrbt3xOiDttm8JmD5Q
av2rEUhzhXuB6SWhEzg3AOni3PfcIPrZoSUi5yXfOjrd75ME0U/WVaaD6Mc9
i8A0AAq06ms=
  "],
 CellLabel->
  "In[844]:=",ExpressionUUID->"9269c7e6-4d85-4f8e-9893-5ddd1803d827"],

Cell[BoxData[
 RowBox[{"<<", "LieAnalysis`"}]], "Input",
 CellChangeTimes->{{3.9061095144191217`*^9, 3.9061095194663815`*^9}},
 CellLabel->
  "In[845]:=",ExpressionUUID->"3f0396d5-4971-4328-865d-cb4cd9473c5b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"os", " ", "=", " ", 
   RowBox[{"OrientationScoreTransform", "[", 
    RowBox[{"imhalf", ",", " ", 
     RowBox[{"\"\<Orientations\>\"", "\[Rule]", " ", "No"}], ",", " ", 
     RowBox[{"\"\<WaveletSize\>\"", "\[Rule]", " ", "75"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.753334599245699*^9, 3.753334641122751*^9}, {
  3.873430206835767*^9, 3.8734302297517986`*^9}, {3.8739447914886894`*^9, 
  3.873944791562791*^9}, {3.873982551410702*^9, 3.8739825515090094`*^9}, {
  3.8746435388680897`*^9, 3.8746435397510147`*^9}},
 CellLabel->
  "In[846]:=",ExpressionUUID->"ca48192d-95a1-41bb-9453-6ec614425b3e"],

Cell[BoxData[
 RowBox[{"Dimensions", "@", 
  RowBox[{"os", "[", "\"\<FullData\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.9060053454003754`*^9, 3.9060053840249076`*^9}},
 CellLabel->
  "In[847]:=",ExpressionUUID->"a83e04cd-daf2-4e6b-a958-91942e91d782"],

Cell[BoxData[
 RowBox[{
  RowBox[{"osGFBoarder", " ", "=", " ", 
   RowBox[{"OrientationScoreTransform", "[", 
    RowBox[{"maskhalf", ",", " ", 
     RowBox[{"\"\<Orientations\>\"", "\[Rule]", " ", "No"}], ",", " ", 
     RowBox[{"\"\<WaveletSize\>\"", "\[Rule]", " ", "75"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.9058462170129795`*^9, 3.9058462217248073`*^9}},
 CellLabel->
  "In[848]:=",ExpressionUUID->"3a01e780-c39d-48cd-9167-cebabe59b589"],

Cell[BoxData[
 RowBox[{"Dimensions", "@", 
  RowBox[{"Transpose", "[", 
   RowBox[{"os", ",", 
    RowBox[{"{", 
     RowBox[{"3", ",", "1", ",", "2"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.905845464814905*^9, 3.905845472564751*^9}},
 CellLabel->
  "In[849]:=",ExpressionUUID->"5a81461c-c46a-45ca-acbc-33f67bd35b18"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Ds", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Da", " ", "=", " ", 
   RowBox[{"1", "/", "100"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"t", "=", "0.5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dt", "=", "0.1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"leftTVF", ",", " ", "leftTVFL1", ",", " ", "leftTVFL2"}], "}"}], 
   "=", 
   RowBox[{"DoLeftTVF", "[", 
    RowBox[{
    "os", ",", "1", ",", " ", "t", ",", " ", "dt", ",", " ", "Ds", ",", " ", 
     "Da", ",", " ", 
     RowBox[{"Image", "@", "imhalf"}], ",", " ", "1"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.753337328541938*^9, 3.7533373343324633`*^9}, {
   3.753337532110751*^9, 3.753337552895181*^9}, {3.753338329020829*^9, 
   3.753338333053053*^9}, {3.753338500700077*^9, 3.753338502418478*^9}, {
   3.7533386426835184`*^9, 3.753338645235691*^9}, {3.7533387192977076`*^9, 
   3.7533387211866274`*^9}, {3.7533587836387696`*^9, 
   3.7533588006063156`*^9}, {3.753769439960661*^9, 3.753769442991378*^9}, {
   3.7537757517861605`*^9, 3.7537757547854548`*^9}, 3.7540488566959996`*^9, {
   3.7646007335395985`*^9, 3.764600735252639*^9}, {3.7646540383561325`*^9, 
   3.7646540384761324`*^9}, {3.764748733966696*^9, 3.7647487348774395`*^9}, {
   3.7647495320930595`*^9, 3.76474953508317*^9}, {3.7647517072205105`*^9, 
   3.7647517102253685`*^9}, {3.764766438222141*^9, 3.7647664397591033`*^9}, {
   3.764772648333692*^9, 3.76477265180711*^9}, {3.7647727328929806`*^9, 
   3.764772733242981*^9}, {3.8734303465113554`*^9, 3.8734303771129904`*^9}, {
   3.8734312040955815`*^9, 3.87343120526328*^9}, {3.874035337231275*^9, 
   3.8740353389747396`*^9}, {3.875183468269189*^9, 3.875183469948228*^9}, {
   3.905844171279709*^9, 3.9058441724514904`*^9}, 3.905845481315114*^9, {
   3.9058457356465096`*^9, 3.905845737108096*^9}, {3.9058457772472467`*^9, 
   3.9058457784197693`*^9}, {3.9058459810133667`*^9, 3.9058460091476884`*^9}, 
   3.905846119748084*^9},
 CellLabel->
  "In[850]:=",ExpressionUUID->"c463a3ea-f1d3-4ae5-b7ad-1a2c0fd82899"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"imgLeftTVF", " ", "=", " ", 
   RowBox[{"ImageClip", "[", 
    RowBox[{"InverseOrientationScoreTransform", "[", "leftTVF", "]"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Image", "[", 
  RowBox[{"imgLeftTVF", ",", " ", 
   RowBox[{"ImageSize", "\[Rule]", 
    RowBox[{"Scaled", "[", "0.5", "]"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.753337458408743*^9, 3.753337468643383*^9}, {
  3.753337557900775*^9, 3.7533375657597647`*^9}, {3.905845831780676*^9, 
  3.9058458406408277`*^9}},
 CellLabel->
  "In[855]:=",ExpressionUUID->"67680861-f0fb-44f5-862b-3f499908723c"],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{{3.905494062860077*^9, 3.9054940643078623`*^9}, {
  3.9055886729905825`*^9, 3.905588677581869*^9}, {3.906097940561057*^9, 
  3.9060979449865646`*^9}, {3.906097988473937*^9, 3.9060979972289505`*^9}, {
  3.928831749772611*^9, 3.9288317586215763`*^9}},
 CellLabel->
  "In[857]:=",ExpressionUUID->"75e5fb47-7374-46f2-ad6b-1d467383db9a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"imgLeftTVF", "=", 
    RowBox[{"ImageData", "[", 
     RowBox[{"Image", "[", "imgLeftTVF", "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "Usually", " ", "we", " ", "remove", " ", "the", " ", "lower", " ", 
    "frequencies", " ", "in", " ", "the", " ", "image"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"imgLeftTVFHP", "=", 
    RowBox[{"imgLeftTVF", "-", 
     RowBox[{"GaussianFilter", "[", 
      RowBox[{"imgLeftTVF", ",", "32"}], "]"}]}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"HP", ":", " ", "\"\<High-Pass\>\""}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"ImageAdjust", "[", 
  RowBox[{"Image", "[", "imgLeftTVFHP", "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"osDenoisedErik", "=", 
   RowBox[{"WaveletTransform2DErik", "[", 
    RowBox[{"cws", ",", "imgLeftTVFHP"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.9054945083550663`*^9, 3.905494535380582*^9}, {
   3.9060054519015837`*^9, 3.906005452424637*^9}, 3.906097874717969*^9, {
   3.9060979246757507`*^9, 3.9060979269864187`*^9}, 3.9060979574307137`*^9, {
   3.9061726165126457`*^9, 3.9061726560044785`*^9}, {3.92883176168919*^9, 
   3.9288318436942987`*^9}, {3.9288325801067114`*^9, 3.9288325804079323`*^9}},
 CellLabel->
  "In[858]:=",ExpressionUUID->"253e5369-3429-47e8-bb6f-5f0ab61d106d"],

Cell[BoxData[
 RowBox[{"Image3D", "[", 
  RowBox[{"Rescale", "[", 
   RowBox[{"Abs", "[", 
    RowBox[{"Re", "[", "osDenoisedErik", "]"}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.906171574751444*^9, 3.906171612240672*^9}, {
  3.90617259109296*^9, 3.906172592310408*^9}, {3.9272562184369745`*^9, 
  3.92725623492412*^9}},
 CellLabel->
  "In[862]:=",ExpressionUUID->"5dcb434c-2ecb-4f4d-a000-54c4c56b8863"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Apply the vesselness function and do thinning operator on output\
\>", "Chapter",
 CellChangeTimes->{{3.6628820916351433`*^9, 3.662882096034143*^9}, {
  3.927175073619728*^9, 
  3.9271750812529774`*^9}},ExpressionUUID->"db8ae1e0-b1a4-4342-973b-\
80719a026738"],

Cell[CellGroupData[{

Cell["Vesselness", "Section",
 CellChangeTimes->{{3.927175095552822*^9, 
  3.9271750972536125`*^9}},ExpressionUUID->"2ecfc3c5-2221-4969-af9a-\
af9ad175d9ce"],

Cell[CellGroupData[{

Cell["Hessian Code", "Subsection",
 CellChangeTimes->{{3.9120620535169163`*^9, 
  3.9120620574059916`*^9}},ExpressionUUID->"68be89c5-1704-4cec-826a-\
32bc9a8b5338"],

Cell[CellGroupData[{

Cell["Documentation", "Subsubsection",
 CellChangeTimes->{{3.910930656536928*^9, 
  3.9109306583400955`*^9}},ExpressionUUID->"654f99eb-1a69-4286-9b8b-\
4708add21052"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ExternalRegularization", "::", "usage"}], "=", 
    "\"\<ExternalRegularization[tensorIn, orientations, \[Sigma]sExt, \
\[Sigma]aExt]\n\treturns a regularised version of tensorIn, where tensorIn is \
a rank 2 tensor on SE(2), \n\twith dimensions {3, 3, Nx, Ny, No}, \
orientations contains the angular coordinate of each \n\tslice in tensorIn, \
and \[Sigma]sExt and \[Sigma]aExt are the standard deviations of the external \
\n\tregularisation in the spatial directions in pixels and in the angular \
direction in radians,\n\trespectively.\>\""}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"OrientationScoreHessian", "::", "usage"}], "=", 
    "\"\<OrientationScoreHessian[U, \[Sigma]s, \[Sigma]a] \n\treturns the \
Hessian of the scalar field U, with dimensions {Nx, Ny, No}, where the \n\t\
derivatives are taken at standard deviations \[Sigma]s and \[Sigma]a in the \
spatial direction in pixels\n\tand in the angular direction in radians, \
respectively.\>\""}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"LeftInvariantDerivatives", "::", "usage"}], "=", 
    "\"\<LeftInvariantDerivatives[U, derivativeindex, \[Sigma]s, \[Sigma]a] \n\
\treturns the left invariant derivatives represented by derivativeindex of \
the scalar field U, \n\twith dimensions {Nx, Ny, No}, where the derivatives \
are taken at standard deviations \[Sigma]s and \n\t\[Sigma]a in the spatial \
directions in pixels and in the angular direction in radians, respectively. \n\
\tExample: if derivativeindex = {12, 13}, then it returns \
{\!\(\*SubscriptBox[\(\[ScriptCapitalA]\), \(12\)]\)U, \!\(\*SubscriptBox[\(\
\[ScriptCapitalA]\), \(13\)]\)U}.\>\""}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"LeftInvariantDerivative", "::", "usage"}], "=", 
   "\"\<LeftInvariantDerivative[U, derivativeindex, \[Sigma]s, \[Sigma]a] \n\t\
returns the left invariant derivative represented by derivativeindex of the \
scalar field U, \n\twith dimensions {Nx, Ny, No}, where the derivatives are \
taken at standard deviations \[Sigma]s and \n\t\[Sigma]a in the spatial \
direction in pixels and angular direction in radians, respectively.\n\t\
Example: if derivativeindex = 12, then it returns \!\(\*SubscriptBox[\(\
\[ScriptCapitalA]\), \(12\)]\)U.\>\""}], ";"}]}], "Input",
 CellChangeTimes->{{3.9145562249787993`*^9, 3.9145563161141243`*^9}, {
   3.914556354492192*^9, 3.9145563546259418`*^9}, {3.9145563964778223`*^9, 
   3.914556403384923*^9}, {3.914556500908801*^9, 3.9145566623360095`*^9}, {
   3.91455669777105*^9, 3.9145567696186676`*^9}, 3.9145568119106054`*^9, {
   3.9145568703847265`*^9, 3.9145568816875057`*^9}, {3.914557171131405*^9, 
   3.914557234226368*^9}, {3.914557305366747*^9, 3.914557311248738*^9}, {
   3.914557364270966*^9, 3.9145575638928013`*^9}, {3.9145575947917366`*^9, 
   3.9145576018886747`*^9}, {3.9145576887850733`*^9, 
   3.9145577129858503`*^9}, {3.9145590987545147`*^9, 
   3.9145591589392414`*^9}, {3.9145790547162895`*^9, 3.9145791494802756`*^9}, 
   3.915091909287184*^9, 3.9158532548985443`*^9},
 CellLabel->
  "In[863]:=",ExpressionUUID->"387f4d4a-5dae-41c7-ac0d-d824d5b3e1b8"]
}, Closed]],

Cell[CellGroupData[{

Cell["Implementation ", "Subsubsection",
 CellChangeTimes->{{3.663066272193674*^9, 3.663066351219674*^9}, {
   3.9110131775496407`*^9, 3.9110131869146595`*^9}, {3.911534692721732*^9, 
   3.9115347329425535`*^9}, 
   3.9131978183804827`*^9},ExpressionUUID->"3f5e5aef-df03-45c7-b297-\
2fba5cde2d21"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Adapted", " ", "from", " ", 
     RowBox[{"LieAnalysis", "\\", "Common", "\\", 
      RowBox[{"OrientationScoreTensor", ".", "m"}]}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"LieAnalysis", "\\", "Common", "\\", 
     RowBox[{"GaussianDerivative", ".", 
      RowBox[{"m", "\n", "**", " ", 
       RowBox[{"Author", ":", " ", 
        RowBox[{
         RowBox[{"F", ".", "C", ".", " ", "Martin"}], " ", "<", 
         RowBox[{"f", ".", "c", ".", 
          RowBox[{"martin", "@", "tue"}], ".", "nl"}], ">"}]}]}]}]}]}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"CreatePeriodicOrientationAxes", "[", 
      RowBox[{"U_", ",", "periodicitylocal_"}], "]"}], ":=", 
     RowBox[{"Switch", "[", 
      RowBox[{
      "periodicitylocal", ",", "\[IndentingNewLine]", "Pi", ",", "U", ",", 
       "\[IndentingNewLine]", 
       RowBox[{"-", "Pi"}], ",", 
       RowBox[{"Join", "[", 
        RowBox[{"U", ",", 
         RowBox[{"-", 
          RowBox[{"Conjugate", "[", "U", "]"}]}], ",", "3"}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"2", "Pi"}], ",", "U"}], "\[IndentingNewLine]", "]"}]}], ";"}],
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Reorder", "[", 
      RowBox[{"os_", ",", "order_"}], "]"}], ":=", 
     RowBox[{"Which", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"MatchQ", "[", 
          RowBox[{"order", ",", "\"\<OrientationFirst\>\""}], "]"}], "&&", 
         RowBox[{
          RowBox[{"Depth", "[", "os", "]"}], "==", "4"}]}], ")"}], ",", 
       RowBox[{"Transpose", "[", 
        RowBox[{"os", ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", "3", ",", "1"}], "}"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"MatchQ", "[", 
          RowBox[{"order", ",", "\"\<SpatialFirst\>\""}], "]"}], "&&", 
         RowBox[{
          RowBox[{"Depth", "[", "os", "]"}], "==", "4"}]}], ")"}], ",", 
       RowBox[{"Transpose", "[", 
        RowBox[{"os", ",", 
         RowBox[{"{", 
          RowBox[{"3", ",", "1", ",", "2"}], "}"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"MatchQ", "[", 
          RowBox[{"order", ",", "\"\<OrientationFirst\>\""}], "]"}], "&&", 
         RowBox[{
          RowBox[{"Depth", "[", "os", "]"}], "==", "5"}]}], ")"}], ",", 
       RowBox[{"Transpose", "[", 
        RowBox[{"os", ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", "3", ",", "4", ",", "1"}], "}"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"MatchQ", "[", 
          RowBox[{"order", ",", "\"\<SpatialFirst\>\""}], "]"}], "&&", 
         RowBox[{
          RowBox[{"Depth", "[", "os", "]"}], "==", "5"}]}], ")"}], ",", 
       RowBox[{"Transpose", "[", 
        RowBox[{"os", ",", 
         RowBox[{"{", 
          RowBox[{"4", ",", "1", ",", "2", ",", "3"}], "}"}]}], "]"}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"OrderTheDerivatives", "[", "order_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{"(*", 
       RowBox[{"Define", " ", "substitution", " ", "rules"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"thetaXi", "=", 
          RowBox[{
           RowBox[{"prior___", "~~", "\"\<31\>\"", "~~", "post___"}], ":>", 
           RowBox[{
           "prior", "<>", "\"\<2\>\"", "<>", "post", "<>", "\"\<+\>\"", "<>", 
            "prior", "<>", "\"\<13\>\"", "<>", "post"}]}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"thetaEta", "=", 
          RowBox[{
           RowBox[{"prior___", "~~", "\"\<32\>\"", "~~", "post___"}], ":>", 
           RowBox[{
           "prior", "<>", "\"\<23\>\"", "<>", "post", "<>", "\"\<-\>\"", "<>",
             "prior", "<>", "\"\<1\>\"", "<>", "post"}]}]}], ",", 
         "\[IndentingNewLine]", "orderTerms", ",", "derivativeOrderReWritten",
          ",", "previousResult", ",", "result"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"Save", " ", "the", " ", "original"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"result", "=", 
         RowBox[{"ToString", "[", "order", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
         "Repeat", " ", "the", " ", "process", " ", "untill", " ", "theta", 
          " ", "is", " ", "the", " ", "first", " ", "derivative"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"While", "[", 
         RowBox[{
          RowBox[{"previousResult", "=!=", "result"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{"Update", " ", "the", " ", "iteration", " ", "condition"}],
            "*)"}], "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"previousResult", "=", "result"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"orderTerms", "=", 
            RowBox[{"StringSplit", "[", 
             RowBox[{"result", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"\"\<+\>\"", "->", "\"\<+\>\""}], ",", 
                RowBox[{"\"\<-\>\"", "->", "\"\<-\>\""}]}], "}"}]}], "]"}]}], 
           ";", "\[IndentingNewLine]", 
           RowBox[{"(*", "Substitute", "*)"}], "\[IndentingNewLine]", 
           RowBox[{"derivativeOrderReWritten", "=", 
            RowBox[{
             RowBox[{
              RowBox[{"StringReplace", "[", 
               RowBox[{"#", ",", 
                RowBox[{"{", 
                 RowBox[{"thetaEta", ",", "thetaXi"}], "}"}]}], "]"}], "&"}], 
             "/@", "orderTerms"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"result", "=", 
            RowBox[{"StringJoin", "[", "derivativeOrderReWritten", "]"}]}], 
           ";"}]}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"Return", " ", "the", " ", "reordered", " ", "result"}], 
         "*)"}], "\[IndentingNewLine]", 
        RowBox[{"Return", "[", "result", "]"}]}]}], "\[IndentingNewLine]", 
      "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.913266316355891*^9, 3.9132663462724314`*^9}, {
   3.91326640534489*^9, 3.913266636777845*^9}, {3.913266674560602*^9, 
   3.913266722627385*^9}, {3.9132669622233953`*^9, 3.9132670732534933`*^9}, {
   3.9132671211399665`*^9, 3.9132671649539127`*^9}, {3.9132672411455283`*^9, 
   3.9132672760560665`*^9}, {3.9132673229054155`*^9, 3.91326741022259*^9}, {
   3.913267459599203*^9, 3.9132674991929502`*^9}, {3.9132675293763933`*^9, 
   3.9132675406618032`*^9}, 3.91326758256355*^9, {3.913267651409629*^9, 
   3.9132677523339977`*^9}, {3.9132677839326763`*^9, 
   3.9132678501899595`*^9}, {3.9132681033267813`*^9, 3.913268167003166*^9}, {
   3.91326820008107*^9, 3.913268229649136*^9}, {3.91327122257629*^9, 
   3.9132712388128424`*^9}, {3.913271305614857*^9, 3.9132713096550045`*^9}, {
   3.9132714007209396`*^9, 3.913271438219386*^9}, {3.913271471794546*^9, 
   3.913271687057373*^9}, {3.9132718667825594`*^9, 3.9132718932613125`*^9}, {
   3.913271988783467*^9, 3.913272198510557*^9}, {3.9132724898160343`*^9, 
   3.9132724911786633`*^9}, {3.9132725366691036`*^9, 3.91327254403657*^9}, {
   3.9132726166706543`*^9, 3.9132726207260313`*^9}, {3.9132726589382734`*^9, 
   3.9132726702227354`*^9}, {3.9132727004239497`*^9, 
   3.9132728547053595`*^9}, {3.91327292413078*^9, 3.9132729703181458`*^9}, {
   3.913273013275709*^9, 3.91327304740345*^9}, {3.913273210974222*^9, 
   3.913273235181641*^9}, {3.913273266034292*^9, 3.9132733635673656`*^9}, {
   3.9132734794371634`*^9, 3.9132735834269814`*^9}, {3.9132736554048004`*^9, 
   3.91327368728664*^9}, {3.913273717493252*^9, 3.9132738091796474`*^9}, 
   3.9132738608048077`*^9, {3.913273901382612*^9, 3.913273930821867*^9}, {
   3.9132739768741016`*^9, 3.9132739973489017`*^9}, {3.9132740512128773`*^9, 
   3.9132740838971834`*^9}, {3.9132741481474323`*^9, 
   3.9132742250857553`*^9}, {3.9132743816972446`*^9, 
   3.9132743865246487`*^9}, {3.913276533308627*^9, 3.913276546926363*^9}, {
   3.9132780892350836`*^9, 3.9132780945227833`*^9}, {3.913278138582215*^9, 
   3.9132781415891047`*^9}, {3.9132781865500307`*^9, 
   3.9132781917764177`*^9}, {3.913278222782586*^9, 3.913278234306244*^9}, {
   3.9132783069330306`*^9, 3.913278357169004*^9}, {3.913278407891507*^9, 
   3.913278412069999*^9}, {3.913278548349722*^9, 3.913278612841592*^9}, {
   3.913279365820752*^9, 3.913279404780896*^9}, {3.913279556550499*^9, 
   3.9132795782372966`*^9}, {3.9132796544061255`*^9, 
   3.9132796923508096`*^9}, {3.913279893494243*^9, 3.913279899866739*^9}, {
   3.9132800877692966`*^9, 3.9132801403592076`*^9}, {3.9132802085237455`*^9, 
   3.9132802146227303`*^9}, {3.913280291737883*^9, 3.913280307475136*^9}, {
   3.913280339523716*^9, 3.9132803614629474`*^9}, {3.9132804493770237`*^9, 
   3.913280456142724*^9}, {3.9132805086156015`*^9, 3.913280517259898*^9}, {
   3.913280583455991*^9, 3.9132806421471643`*^9}, {3.9132806960247374`*^9, 
   3.9132807142075825`*^9}, {3.9132817010783505`*^9, 3.9132817471291304`*^9}, 
   3.9132818137389565`*^9, {3.913281854469602*^9, 3.913281876846076*^9}, {
   3.9132819941431875`*^9, 3.9132820014013443`*^9}, 3.9132820468635254`*^9, {
   3.9132821648403645`*^9, 3.9132821736611214`*^9}, {3.9132822235060635`*^9, 
   3.913282247668455*^9}, {3.9132823511892624`*^9, 3.9132823902271585`*^9}, {
   3.913282663890301*^9, 3.913282671615747*^9}, {3.913282724504727*^9, 
   3.913282801823016*^9}, {3.913282897867173*^9, 3.913282906038251*^9}, {
   3.913283176794826*^9, 3.913283181279191*^9}, 3.9132833015350647`*^9, {
   3.9132833412113667`*^9, 3.9132833593146043`*^9}, 3.9132861772336035`*^9, {
   3.9133483626804237`*^9, 3.913348395529066*^9}, {3.913359867574653*^9, 
   3.913359909174513*^9}, {3.9133604335575495`*^9, 3.9133604535641484`*^9}, {
   3.91336113050226*^9, 3.9133611372493143`*^9}, {3.9133612268639193`*^9, 
   3.9133612363109913`*^9}},
 CellLabel->
  "In[867]:=",ExpressionUUID->"12f0b6f8-a99c-4873-8f60-f45d9bea24a6"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"GaussianDerivative", "[", 
     RowBox[{"data_", ",", "\[Sigma]s_", ",", "orders_", ",", 
      RowBox[{"padding_", ":", "\"\<Periodic\>\""}]}], "]"}], ":=", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", "derivative", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"Compute", " ", "the", " ", "derivative", 
        RowBox[{"(", "s", ")"}], " ", "depending", " ", "on", " ", "input"}], 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"derivative", "=", 
        RowBox[{"GaussianFilter", "[", 
         RowBox[{"data", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"4", " ", "\[Sigma]s"}], "+", "1"}], ",", "\[Sigma]s"}], 
           "}"}], ",", "orders", ",", 
          RowBox[{"Padding", "->", "padding"}], ",", 
          RowBox[{"Method", "->", "\"\<Gaussian\>\""}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"Return", " ", "the", " ", "derivative"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "derivative", "]"}], ";"}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.913266316355891*^9, 3.9132663462724314`*^9}, {
   3.91326640534489*^9, 3.913266636777845*^9}, {3.913266674560602*^9, 
   3.913266722627385*^9}, {3.9132669622233953`*^9, 3.9132670732534933`*^9}, {
   3.9132671211399665`*^9, 3.9132671649539127`*^9}, {3.9132672411455283`*^9, 
   3.9132672760560665`*^9}, {3.9132673229054155`*^9, 3.91326741022259*^9}, {
   3.913267459599203*^9, 3.9132674991929502`*^9}, {3.9132675293763933`*^9, 
   3.9132675406618032`*^9}, 3.91326758256355*^9, {3.913267651409629*^9, 
   3.9132677523339977`*^9}, {3.9132677839326763`*^9, 
   3.9132678501899595`*^9}, {3.9132681033267813`*^9, 3.913268167003166*^9}, {
   3.91326820008107*^9, 3.913268229649136*^9}, {3.91327122257629*^9, 
   3.9132712388128424`*^9}, {3.913271305614857*^9, 3.9132713096550045`*^9}, {
   3.9132714007209396`*^9, 3.913271438219386*^9}, {3.913271471794546*^9, 
   3.913271687057373*^9}, {3.9132718667825594`*^9, 3.9132718932613125`*^9}, {
   3.913271988783467*^9, 3.913272198510557*^9}, {3.9132724898160343`*^9, 
   3.9132724911786633`*^9}, {3.9132725366691036`*^9, 3.91327254403657*^9}, {
   3.9132726166706543`*^9, 3.9132726207260313`*^9}, {3.9132726589382734`*^9, 
   3.9132726702227354`*^9}, {3.9132727004239497`*^9, 
   3.9132728547053595`*^9}, {3.91327292413078*^9, 3.9132729703181458`*^9}, {
   3.913273013275709*^9, 3.91327304740345*^9}, {3.913273210974222*^9, 
   3.913273235181641*^9}, {3.913273266034292*^9, 3.9132733635673656`*^9}, {
   3.9132734794371634`*^9, 3.9132735834269814`*^9}, {3.9132736554048004`*^9, 
   3.91327368728664*^9}, {3.913273717493252*^9, 3.9132738091796474`*^9}, 
   3.9132738608048077`*^9, {3.913273901382612*^9, 3.913273930821867*^9}, {
   3.9132739768741016`*^9, 3.9132739973489017`*^9}, {3.9132740512128773`*^9, 
   3.9132740838971834`*^9}, {3.9132741481474323`*^9, 
   3.9132742250857553`*^9}, {3.9132743816972446`*^9, 
   3.9132743865246487`*^9}, {3.913276533308627*^9, 3.913276546926363*^9}, {
   3.9132780892350836`*^9, 3.9132780945227833`*^9}, {3.913278138582215*^9, 
   3.9132781415891047`*^9}, {3.9132781865500307`*^9, 
   3.9132781917764177`*^9}, {3.913278222782586*^9, 3.913278234306244*^9}, {
   3.9132783069330306`*^9, 3.913278357169004*^9}, {3.913278407891507*^9, 
   3.913278412069999*^9}, {3.913278548349722*^9, 3.913278612841592*^9}, {
   3.913279365820752*^9, 3.913279404780896*^9}, {3.913279556550499*^9, 
   3.9132795782372966`*^9}, {3.9132796544061255`*^9, 
   3.9132796923508096`*^9}, {3.913279893494243*^9, 3.913279899866739*^9}, {
   3.9132800877692966`*^9, 3.9132801403592076`*^9}, {3.9132802085237455`*^9, 
   3.9132802146227303`*^9}, {3.913280291737883*^9, 3.913280307475136*^9}, {
   3.913280339523716*^9, 3.9132803614629474`*^9}, {3.9132804493770237`*^9, 
   3.913280456142724*^9}, {3.9132805086156015`*^9, 3.913280517259898*^9}, {
   3.913280583455991*^9, 3.9132806421471643`*^9}, {3.9132806960247374`*^9, 
   3.9132807142075825`*^9}, {3.9132817010783505`*^9, 3.9132817471291304`*^9}, 
   3.9132818137389565`*^9, {3.913281854469602*^9, 3.913281876846076*^9}, {
   3.9132819941431875`*^9, 3.9132820014013443`*^9}, 3.9132820468635254`*^9, {
   3.9132821648403645`*^9, 3.9132821736611214`*^9}, {3.9132822235060635`*^9, 
   3.913282247668455*^9}, {3.9132823511892624`*^9, 3.9132823902271585`*^9}, {
   3.913282663890301*^9, 3.913282671615747*^9}, {3.913282724504727*^9, 
   3.913282801823016*^9}, {3.913282897867173*^9, 3.913282906038251*^9}, {
   3.913283176794826*^9, 3.913283181279191*^9}, 3.9132833015350647`*^9, {
   3.9132833412113667`*^9, 3.9132833593146043`*^9}, 3.9132861772336035`*^9, {
   3.9133483626804237`*^9, 3.913348395529066*^9}, 3.9133484270053825`*^9, {
   3.913348480857382*^9, 3.9133484941904516`*^9}, {3.914039370171339*^9, 
   3.9140394412065554`*^9}},
 CellLabel->
  "In[870]:=",ExpressionUUID->"4fd18640-9805-4e0a-9578-2ed627121b7b"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"OrientationDerivative", "[", 
    RowBox[{
    "U_", ",", "scaled\[Sigma]s_", ",", "scaled\[Sigma]OD_", ",", 
     "angularresolution_", ",", "order_"}], "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"periodicU", ",", 
       RowBox[{"periodicitylocal", "=", 
        RowBox[{"2", "\[Pi]"}]}], ",", "blurredU", ",", "derivative"}], "}"}],
      ",", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Compute", " ", "the", " ", "theta"}], "-", "derivative"}], 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"periodicU", "=", 
       RowBox[{"CreatePeriodicOrientationAxes", "[", 
        RowBox[{"U", ",", "periodicitylocal"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"periodicU", "=", 
       RowBox[{"Reorder", "[", 
        RowBox[{"periodicU", ",", "\"\<OrientationFirst\>\""}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"Blur", " ", "the", " ", "spatial", " ", "directions"}], 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Can", "'"}], "t", " ", "we", " ", "blur", " ", "in", " ", 
        "spatial", " ", "directions", " ", "while", " ", "differentiating", 
        " ", "in", " ", "the", " ", "angular", " ", 
        RowBox[{"direction", "?"}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"blurredU", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"GaussianFilter", "[", 
          RowBox[{"#", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"4", 
               RowBox[{"{", 
                RowBox[{"scaled\[Sigma]s", ",", "scaled\[Sigma]s"}], "}"}]}], 
              "+", "1"}], ",", 
             RowBox[{"{", 
              RowBox[{"scaled\[Sigma]s", ",", "scaled\[Sigma]s"}], "}"}]}], 
            "}"}], ",", 
           RowBox[{"Padding", "->", "\"\<Fixed\>\""}]}], "]"}], "&"}], "/@", 
        "periodicU"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Derivative", " ", "in", " ", "y"}], "-", "direction"}], 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"derivative", "=", 
       RowBox[{"GaussianDerivative", "[", 
        RowBox[{"blurredU", ",", 
         RowBox[{"{", 
          RowBox[{"scaled\[Sigma]OD", ",", "0.125", ",", "0.125"}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"order", ",", "0", ",", "0"}], "}"}], ",", 
         "\"\<Periodic\>\""}], "]"}]}], ";", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"TODO", ":", 
         RowBox[{
         "spatial", " ", "standard", " ", "deviation", " ", "0.125", " ", 
          "is", " ", "used", " ", "instead", " ", "of", " ", "0.0"}]}], ",", 
        " ", 
        RowBox[{
        "because", " ", "Mathematica", " ", "has", " ", "a", " ", "bug", " ", 
         "for", " ", "the", " ", "case", " ", "0.0", " ", "with", " ", 
         RowBox[{
          RowBox[{"SetOptions", "[", 
           RowBox[{"GaussianFilter", ",", 
            RowBox[{"Method", "->", "\"\<Gaussian\>\""}]}], "]"}], ".", " ", 
          "Standard"}], " ", "deviation", " ", "0.125", " ", "is", " ", 
         "still", " ", "small", " ", "enough", " ", "to", " ", "be", " ", 
         "ignored"}], ",", 
        RowBox[{
         RowBox[{
         "but", " ", "large", " ", "enough", " ", "for", " ", "Mathematica", 
          " ", "to", " ", "be", " ", "stable"}], ".."}]}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"Cut", " ", 
        RowBox[{"off", " ", "'"}], 
        RowBox[{"extra", "'"}], " ", "period"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"derivative", "=", 
       RowBox[{"If", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"MatchQ", "[", 
          RowBox[{"periodicity", ",", 
           RowBox[{"Pi", "|", 
            RowBox[{"-", "Pi"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"derivative", "[", 
          RowBox[{"[", 
           RowBox[{"1", ";;", 
            RowBox[{
             RowBox[{"Dimensions", "[", "U", "]"}], "[", 
             RowBox[{"[", "3", "]"}], "]"}]}], "]"}], "]"}], ",", 
         "\[IndentingNewLine]", "derivative"}], "\[IndentingNewLine]", 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "scale", " ", "with", " ", "the", " ", "angular", " ", "resolution"}], 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"derivative", "=", 
       RowBox[{"derivative", "/", 
        RowBox[{"(", 
         RowBox[{"angularresolution", "^", "order"}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
        "Reorder", " ", "that", " ", "the", " ", "spatial", " ", "dimensions",
          " ", "are", " ", "first", " ", "x"}], ",", "y", ",", "theta"}], 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"derivative", "=", 
       RowBox[{"Reorder", "[", 
        RowBox[{"derivative", ",", "\"\<SpatialFirst\>\""}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"Return", " ", "the", " ", "derivative"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "derivative", "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.913266316355891*^9, 3.9132663462724314`*^9}, {
   3.91326640534489*^9, 3.913266636777845*^9}, {3.913266674560602*^9, 
   3.913266722627385*^9}, {3.9132669622233953`*^9, 3.9132670732534933`*^9}, {
   3.9132671211399665`*^9, 3.9132671649539127`*^9}, {3.9132672411455283`*^9, 
   3.9132672760560665`*^9}, {3.9132673229054155`*^9, 3.91326741022259*^9}, {
   3.913267459599203*^9, 3.9132674991929502`*^9}, {3.9132675293763933`*^9, 
   3.9132675406618032`*^9}, 3.91326758256355*^9, {3.913267651409629*^9, 
   3.9132677523339977`*^9}, {3.9132677839326763`*^9, 
   3.9132678501899595`*^9}, {3.9132681033267813`*^9, 3.913268167003166*^9}, {
   3.91326820008107*^9, 3.913268229649136*^9}, {3.91327122257629*^9, 
   3.9132712388128424`*^9}, {3.913271305614857*^9, 3.9132713096550045`*^9}, {
   3.9132714007209396`*^9, 3.913271438219386*^9}, {3.913271471794546*^9, 
   3.913271687057373*^9}, {3.9132718667825594`*^9, 3.9132718932613125`*^9}, {
   3.913271988783467*^9, 3.913272198510557*^9}, {3.9132724898160343`*^9, 
   3.9132724911786633`*^9}, {3.9132725366691036`*^9, 3.91327254403657*^9}, {
   3.9132726166706543`*^9, 3.9132726207260313`*^9}, {3.9132726589382734`*^9, 
   3.9132726702227354`*^9}, {3.9132727004239497`*^9, 
   3.9132728547053595`*^9}, {3.91327292413078*^9, 3.9132729703181458`*^9}, {
   3.913273013275709*^9, 3.91327304740345*^9}, {3.913273210974222*^9, 
   3.913273235181641*^9}, {3.913273266034292*^9, 3.9132733635673656`*^9}, {
   3.9132734794371634`*^9, 3.9132735834269814`*^9}, {3.9132736554048004`*^9, 
   3.91327368728664*^9}, {3.913273717493252*^9, 3.9132738091796474`*^9}, 
   3.9132738608048077`*^9, {3.913273901382612*^9, 3.913273930821867*^9}, {
   3.9132739768741016`*^9, 3.9132739973489017`*^9}, {3.9132740512128773`*^9, 
   3.9132740838971834`*^9}, {3.9132741481474323`*^9, 
   3.9132742250857553`*^9}, {3.9132743816972446`*^9, 
   3.9132743865246487`*^9}, {3.913276533308627*^9, 3.913276546926363*^9}, {
   3.9132780892350836`*^9, 3.9132780945227833`*^9}, {3.913278138582215*^9, 
   3.9132781415891047`*^9}, {3.9132781865500307`*^9, 
   3.9132781917764177`*^9}, {3.913278222782586*^9, 3.913278234306244*^9}, {
   3.9132783069330306`*^9, 3.913278357169004*^9}, {3.913278407891507*^9, 
   3.913278412069999*^9}, {3.913278548349722*^9, 3.913278612841592*^9}, {
   3.913279365820752*^9, 3.913279404780896*^9}, {3.913279556550499*^9, 
   3.9132795782372966`*^9}, {3.9132796544061255`*^9, 
   3.9132796923508096`*^9}, {3.913279893494243*^9, 3.913279899866739*^9}, {
   3.9132800877692966`*^9, 3.9132801403592076`*^9}, {3.9132802085237455`*^9, 
   3.9132802146227303`*^9}, {3.913280291737883*^9, 3.913280307475136*^9}, {
   3.913280339523716*^9, 3.9132803614629474`*^9}, {3.9132804493770237`*^9, 
   3.913280456142724*^9}, {3.9132805086156015`*^9, 3.913280517259898*^9}, {
   3.913280583455991*^9, 3.9132806421471643`*^9}, {3.9132806960247374`*^9, 
   3.9132807142075825`*^9}, {3.9132817010783505`*^9, 3.9132817471291304`*^9}, 
   3.9132818137389565`*^9, {3.913281854469602*^9, 3.913281876846076*^9}, {
   3.9132819941431875`*^9, 3.9132820014013443`*^9}, 3.9132820468635254`*^9, {
   3.9132821648403645`*^9, 3.9132821736611214`*^9}, {3.9132822235060635`*^9, 
   3.913282247668455*^9}, {3.9132823511892624`*^9, 3.9132823902271585`*^9}, {
   3.913282663890301*^9, 3.913282671615747*^9}, {3.913282724504727*^9, 
   3.913282801823016*^9}, {3.913282897867173*^9, 3.913282906038251*^9}, {
   3.913283176794826*^9, 3.913283181279191*^9}, 3.9132833015350647`*^9, {
   3.9132833412113667`*^9, 3.9132833593146043`*^9}, 3.9132861772336035`*^9, {
   3.9133483626804237`*^9, 3.913348395529066*^9}, 3.9133484270053825`*^9, {
   3.913348480857382*^9, 3.9133484941904516`*^9}, 3.9133604766151905`*^9, {
   3.9140389222226095`*^9, 3.914038935712634*^9}, {3.9140390770403986`*^9, 
   3.9140390838990173`*^9}, {3.9140395058301644`*^9, 
   3.9140395772890787`*^9}, {3.914579189467939*^9, 3.914579209223483*^9}, {
   3.915089647258377*^9, 3.9150896706033983`*^9}, {3.915852805788727*^9, 
   3.915852809760234*^9}},
 CellLabel->
  "In[871]:=",ExpressionUUID->"367e2b7e-be2b-4b79-9e16-d0af6dabd010"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"SpatialDerivative", "[", 
    RowBox[{
    "U_", ",", "scaled\[Sigma]s_", ",", "scaled\[Sigma]OD_", ",", 
     "direction_", ",", "angles_"}], "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"periodicU", ",", 
       RowBox[{"periodicitylocal", "=", 
        RowBox[{"2", "\[Pi]"}]}], ",", "dx", ",", "dy", ",", "derivative"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Blur", " ", "the", " ", "OS", " ", "in", " ", "thera"}], "-", 
       "direction"}], "*)"}], 
     RowBox[{"(*", 
      RowBox[{"TODO", ":", 
       RowBox[{"remove", " ", "redundant", " ", "steps"}]}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"?", " ", 
       RowBox[{"why", " ", "?"}]}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"periodicU", "=", 
       RowBox[{"CreatePeriodicOrientationAxes", "[", 
        RowBox[{"U", ",", "periodicitylocal"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"periodicU", "=", 
       RowBox[{"If", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"MatchQ", "[", 
          RowBox[{"periodicitylocal", ",", 
           RowBox[{"Pi", "|", 
            RowBox[{"-", "Pi"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"periodicU", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "All", ",", 
            RowBox[{"1", ";;", 
             RowBox[{
              RowBox[{"Dimensions", "[", "U", "]"}], "[", 
              RowBox[{"[", "3", "]"}], "]"}]}]}], "]"}], "]"}], ",", 
         "\[IndentingNewLine]", "periodicU"}], "\[IndentingNewLine]", "]"}]}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"(*", "Reorder", "*)"}], 
      RowBox[{"(*", 
       RowBox[{
       "Why", " ", "do", " ", "we", " ", "even", " ", "need", " ", "to", " ", 
        RowBox[{"reorder", "?"}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"periodicU", "=", 
       RowBox[{"Reorder", "[", 
        RowBox[{"periodicU", ",", "\"\<OrientationFirst\>\""}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Compute", " ", "the", " ", "x", " ", "and", " ", "y"}], "-", 
        "derivative"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"dx", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"GaussianDerivative", "[", 
          RowBox[{"#", ",", 
           RowBox[{"{", 
            RowBox[{"scaled\[Sigma]s", ",", "scaled\[Sigma]s"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "0"}], "}"}], ",", "\"\<Fixed\>\""}], "]"}], 
         "&"}], "/@", "periodicU"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"dy", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"GaussianDerivative", "[", 
          RowBox[{"#", ",", 
           RowBox[{"{", 
            RowBox[{"scaled\[Sigma]s", ",", "scaled\[Sigma]s"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "1"}], "}"}], ",", "\"\<Fixed\>\""}], "]"}], 
         "&"}], "/@", "periodicU"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Rotate", " ", "to", " ", "the", " ", "\[Eta]"}], ",", " ", 
        RowBox[{"\[Xi]", " ", "frame"}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"derivative", "=", 
       RowBox[{"Switch", "[", 
        RowBox[{"direction", ",", "\[IndentingNewLine]", 
         RowBox[{"(*", "A1", "*)"}], "1", ",", 
         RowBox[{"MapThread", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"#1", " ", 
               RowBox[{"Cos", "[", "#3", "]"}]}], "+", 
              RowBox[{"#2", " ", 
               RowBox[{"Sin", "[", "#3", "]"}]}]}], ")"}], "&"}], ",", 
           RowBox[{"{", 
            RowBox[{"dx", ",", "dy", ",", "angles"}], "}"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", "A2", "*)"}], "2", ",", 
         RowBox[{"MapThread", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "#1"}], " ", 
               RowBox[{"Sin", "[", "#3", "]"}]}], "+", 
              RowBox[{"#2", " ", 
               RowBox[{"Cos", "[", "#3", "]"}]}]}], ")"}], "&"}], ",", 
           RowBox[{"{", 
            RowBox[{"dx", ",", "dy", ",", "angles"}], "}"}]}], "]"}]}], 
        "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Reorder", " ", "x"}], ",", " ", "y", ",", " ", "\[Theta]"}], 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"derivative", "=", 
       RowBox[{"Reorder", "[", 
        RowBox[{"derivative", ",", "\"\<SpatialFirst\>\""}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"Return", " ", "the", " ", "derivative"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "derivative", "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.913266316355891*^9, 3.9132663462724314`*^9}, {
   3.91326640534489*^9, 3.913266636777845*^9}, {3.913266674560602*^9, 
   3.913266722627385*^9}, {3.9132669622233953`*^9, 3.9132670732534933`*^9}, {
   3.9132671211399665`*^9, 3.9132671649539127`*^9}, {3.9132672411455283`*^9, 
   3.9132672760560665`*^9}, {3.9132673229054155`*^9, 3.91326741022259*^9}, {
   3.913267459599203*^9, 3.9132674991929502`*^9}, {3.9132675293763933`*^9, 
   3.9132675406618032`*^9}, 3.91326758256355*^9, {3.913267651409629*^9, 
   3.9132677523339977`*^9}, {3.9132677839326763`*^9, 
   3.9132678501899595`*^9}, {3.9132681033267813`*^9, 3.913268167003166*^9}, {
   3.91326820008107*^9, 3.913268229649136*^9}, {3.91327122257629*^9, 
   3.9132712388128424`*^9}, {3.913271305614857*^9, 3.9132713096550045`*^9}, {
   3.9132714007209396`*^9, 3.913271438219386*^9}, {3.913271471794546*^9, 
   3.913271687057373*^9}, {3.9132718667825594`*^9, 3.9132718932613125`*^9}, {
   3.913271988783467*^9, 3.913272198510557*^9}, {3.9132724898160343`*^9, 
   3.9132724911786633`*^9}, {3.9132725366691036`*^9, 3.91327254403657*^9}, {
   3.9132726166706543`*^9, 3.9132726207260313`*^9}, {3.9132726589382734`*^9, 
   3.9132726702227354`*^9}, {3.9132727004239497`*^9, 
   3.9132728547053595`*^9}, {3.91327292413078*^9, 3.9132729703181458`*^9}, {
   3.913273013275709*^9, 3.91327304740345*^9}, {3.913273210974222*^9, 
   3.913273235181641*^9}, {3.913273266034292*^9, 3.9132733635673656`*^9}, {
   3.9132734794371634`*^9, 3.9132735834269814`*^9}, {3.9132736554048004`*^9, 
   3.91327368728664*^9}, {3.913273717493252*^9, 3.9132738091796474`*^9}, 
   3.9132738608048077`*^9, {3.913273901382612*^9, 3.913273930821867*^9}, {
   3.9132739768741016`*^9, 3.9132739973489017`*^9}, {3.9132740512128773`*^9, 
   3.9132740838971834`*^9}, {3.9132741481474323`*^9, 
   3.9132742250857553`*^9}, {3.9132743816972446`*^9, 
   3.9132743865246487`*^9}, {3.913276533308627*^9, 3.913276546926363*^9}, {
   3.9132780892350836`*^9, 3.9132780945227833`*^9}, {3.913278138582215*^9, 
   3.9132781415891047`*^9}, {3.9132781865500307`*^9, 
   3.9132781917764177`*^9}, {3.913278222782586*^9, 3.913278234306244*^9}, {
   3.9132783069330306`*^9, 3.913278357169004*^9}, {3.913278407891507*^9, 
   3.913278412069999*^9}, {3.913278548349722*^9, 3.913278612841592*^9}, {
   3.913279365820752*^9, 3.913279404780896*^9}, {3.913279556550499*^9, 
   3.9132795782372966`*^9}, {3.9132796544061255`*^9, 
   3.9132796923508096`*^9}, {3.913279893494243*^9, 3.913279899866739*^9}, {
   3.9132800877692966`*^9, 3.9132801403592076`*^9}, {3.9132802085237455`*^9, 
   3.9132802146227303`*^9}, {3.913280291737883*^9, 3.913280307475136*^9}, {
   3.913280339523716*^9, 3.9132803614629474`*^9}, {3.9132804493770237`*^9, 
   3.913280456142724*^9}, {3.9132805086156015`*^9, 3.913280517259898*^9}, {
   3.913280583455991*^9, 3.9132806421471643`*^9}, {3.9132806960247374`*^9, 
   3.9132807142075825`*^9}, {3.9132817010783505`*^9, 3.9132817471291304`*^9}, 
   3.9132818137389565`*^9, {3.913281854469602*^9, 3.913281876846076*^9}, {
   3.9132819941431875`*^9, 3.9132820014013443`*^9}, 3.9132820468635254`*^9, {
   3.9132821648403645`*^9, 3.9132821736611214`*^9}, {3.9132822235060635`*^9, 
   3.913282247668455*^9}, {3.9132823511892624`*^9, 3.9132823902271585`*^9}, {
   3.913282663890301*^9, 3.913282671615747*^9}, {3.913282724504727*^9, 
   3.913282801823016*^9}, {3.913282897867173*^9, 3.913282906038251*^9}, {
   3.913283176794826*^9, 3.913283181279191*^9}, 3.9132833015350647`*^9, {
   3.9132833412113667`*^9, 3.9132833593146043`*^9}, 3.9132861772336035`*^9, {
   3.9133483626804237`*^9, 3.913348395529066*^9}, 3.9133484270053825`*^9, 
   3.913348480857382*^9, {3.9140392996044044`*^9, 3.914039313782251*^9}, {
   3.9140395992904444`*^9, 3.91403965619209*^9}, 3.9158527783833466`*^9},
 CellLabel->
  "In[872]:=",ExpressionUUID->"46421821-0a7c-4a2c-869d-c658f2561e9a"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"LeftInvariantDerivativeCorrectOrder", "[", 
    RowBox[{
    "U_", ",", "orders_", ",", "\[Sigma]s_", ",", "\[Sigma]OD_", ",", 
     "angularresolution_", ",", "angles_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "derivative", ",", "n", ",", "scaled\[Sigma]s", ",", "angularorder", 
       ",", 
       RowBox[{"periodicitylocal", "=", 
        RowBox[{"2", "\[Pi]"}]}], ",", "spatialorders"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "scale", " ", "\[Sigma]s", " ", "to", " ", "the", " ", "number", " ", 
       "of", " ", "derivatives"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"n", "=", 
       RowBox[{
        RowBox[{"Count", "[", 
         RowBox[{"orders", ",", 
          RowBox[{"1", "|", "2"}]}], "]"}], "+", "1"}]}], ";", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{
        "\[Theta]", " ", "derivatives", " ", "are", " ", "always", " ", 
         "computed", " ", "in", " ", "1", " ", "step"}], ",", " ", 
        RowBox[{"independent", " ", "of", " ", "the", " ", "order"}]}], " ", 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"scaled\[Sigma]s", "=", " ", 
       RowBox[{"\[Sigma]s", "/", 
        RowBox[{"Sqrt", "[", "n", "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"Compute", " ", "angular", " ", "derivative", 
        RowBox[{"(", "s", ")"}], " ", "if", " ", "any"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"angularorder", "=", 
       RowBox[{"Count", "[", 
        RowBox[{"orders", ",", "3"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"derivative", "=", 
       RowBox[{"OrientationDerivative", "[", 
        RowBox[{
        "U", ",", "scaled\[Sigma]s", ",", "\[Sigma]OD", ",", 
         "angularresolution", ",", "angularorder"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"spatialorders", "=", 
       RowBox[{"DeleteCases", "[", 
        RowBox[{"orders", ",", "3"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"Compute", " ", "spatial", " ", "derivative", 
        RowBox[{"(", "s", ")"}], " ", "if", " ", "any"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"Do", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"derivative", "=", 
          RowBox[{"SpatialDerivative", "[", 
           RowBox[{
           "derivative", ",", "scaled\[Sigma]s", ",", "0", ",", "direction", 
            ",", "angles"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"periodicitylocal", "=", 
          RowBox[{"Switch", "[", 
           RowBox[{"periodicity", ",", "Pi", ",", 
            RowBox[{"-", "Pi"}], ",", 
            RowBox[{"-", "Pi"}], ",", "Pi", ",", 
            RowBox[{"2", "Pi"}], ",", 
            RowBox[{"2", "Pi"}]}], "]"}]}]}], ",", 
        RowBox[{"{", 
         RowBox[{"direction", ",", "spatialorders"}], "}"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "derivative", "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.913360020754381*^9, 3.9133601658056726`*^9}, {
  3.9133619453997784`*^9, 3.913361965439348*^9}, {3.9133621320632772`*^9, 
  3.9133621411031446`*^9}, {3.9133626140234995`*^9, 3.9133626292555237`*^9}, {
  3.913363793631291*^9, 3.9133637981969385`*^9}, {3.91404543607929*^9, 
  3.9140454390940013`*^9}, {3.914579218741389*^9, 3.91457922095512*^9}, {
  3.9145794316854362`*^9, 3.914579451124174*^9}, {3.9145794824377146`*^9, 
  3.91457948591933*^9}, {3.9150895816129074`*^9, 3.9150895836642675`*^9}, {
  3.9158527624233027`*^9, 3.9158527638219604`*^9}, {3.9179644922953463`*^9, 
  3.9179644964685473`*^9}},
 CellLabel->
  "In[873]:=",ExpressionUUID->"845a3cf4-4226-454e-8322-03c70c1de3b4"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"LeftInvariantDerivativeWrongOrder", "[", 
    RowBox[{"U_", ",", "orders_", ",", "\[Sigma]s_", ",", "\[Sigma]OD_"}], 
    "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "derivativestring", ",", "reorders", ",", "operators", ",", 
       "derivatives", ",", "derivative"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"Recompute", " ", "Order"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"derivativestring", "=", 
       RowBox[{"StringSplit", "[", 
        RowBox[{
         RowBox[{"OrderTheDerivatives", "[", "orders", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\"\<+\>\"", "->", "\"\<+\>\""}], ",", 
           RowBox[{"\"\<-\>\"", "->", "\"\<-\>\""}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"reorders", ",", "operators"}], "}"}], "=", 
       RowBox[{"GatherBy", "[", 
        RowBox[{"derivativestring", ",", 
         RowBox[{
          RowBox[{"MatchQ", "[", 
           RowBox[{"#", ",", 
            RowBox[{"\"\<-\>\"", "|", "\"\<+\>\""}]}], "]"}], "&"}]}], 
        "]"}]}], ";", 
      RowBox[{"(*", 
       RowBox[{
       "legal", " ", "derivative", " ", "orders", " ", "that", " ", "need", 
        " ", "to", " ", "be", " ", "computed"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"derivatives", "=", 
       RowBox[{"LeftInvariantDerivatives", "[", 
        RowBox[{"U", ",", 
         RowBox[{"ToExpression", 
          RowBox[{"(*", "FromDigits", "*)"}], "@", "reorders"}], ",", 
         "\[Sigma]s", ",", "\[Sigma]OD"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"derivative", "=", 
       RowBox[{"Plus", "@@", 
        RowBox[{"Prepend", "[", 
         RowBox[{
          RowBox[{"MapThread", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"#2", "==", "\"\<-\>\""}], ",", 
               RowBox[{"-", "#1"}], ",", "#1"}], "]"}], "&"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"derivatives", "[", 
               RowBox[{"[", 
                RowBox[{"2", ";;", 
                 RowBox[{"-", "1"}]}], "]"}], "]"}], ",", "operators"}], 
             "}"}]}], "]"}], ",", 
          RowBox[{"derivatives", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "derivative", "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.913360203809423*^9, 3.913360204336856*^9}, {
  3.9133609130295057`*^9, 3.91336096983055*^9}, {3.9133610043199205`*^9, 
  3.9133610264547396`*^9}, {3.9133611470337715`*^9, 3.913361148480099*^9}, {
  3.9133613338054748`*^9, 3.9133614487503986`*^9}, {3.9133618930305796`*^9, 
  3.913361904390707*^9}, {3.9133619734785852`*^9, 3.9133619821822243`*^9}, {
  3.9133626413450937`*^9, 3.9133626514468718`*^9}, {3.913363671678951*^9, 
  3.913363674911066*^9}, {3.913363790269661*^9, 3.913363792136504*^9}, {
  3.91343899232438*^9, 3.913439028094017*^9}, {3.9134391303484693`*^9, 
  3.913439152338135*^9}, {3.9134402926931224`*^9, 3.913440299161191*^9}, {
  3.91404542414684*^9, 3.914045430002695*^9}, {3.915089565030402*^9, 
  3.9150895687509537`*^9}, {3.915852757089932*^9, 3.9158527588154755`*^9}},
 CellLabel->
  "In[874]:=",ExpressionUUID->"8a2161c3-0c7e-4cfc-b12d-d1526483f9be"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"LeftInvariantDerivative", "[", 
    RowBox[{
    "U_", ",", "derivativeindex_", ",", "\[Sigma]s_", ",", "\[Sigma]a_"}], 
    "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"temporaryprint", ",", "No", ",", 
       RowBox[{"periodicitylocal", "=", 
        RowBox[{"2", "\[Pi]"}]}], ",", "angularresolution", ",", "angles", 
       ",", "\[Sigma]OD", ",", "orders", ",", "derivative", ",", "n", ",", 
       "scaled\[Sigma]s", ",", "angularorder"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"temporaryprint", "=", 
       RowBox[{"PrintTemporary", "[", 
        RowBox[{
        "\"\<Current derivative index is \>\"", ",", "derivativeindex"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"orientation", " ", "angles"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"No", "=", 
       RowBox[{
        RowBox[{"Dimensions", "[", "U", "]"}], "[", 
        RowBox[{"[", "3", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"angularresolution", "=", 
       RowBox[{"periodicitylocal", "/", "No"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"angles", "=", 
       RowBox[{"Range", "[", 
        RowBox[{"0", ",", 
         RowBox[{"periodicitylocal", "-", "angularresolution"}], ",", 
         "angularresolution"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "Convert", " ", "to", " ", "discrete", " ", "orientation", " ", 
        "sigma"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"\[Sigma]OD", "=", 
       RowBox[{"\[Sigma]a", "/", "angularresolution"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "list", " ", "of", " ", "derivatives", " ", "that", " ", "need", " ", 
        "to", " ", "be", " ", "computed"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"orders", "=", 
       RowBox[{"Reverse", "[", 
        RowBox[{"IntegerDigits", "[", "derivativeindex", "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
        "When", " ", "we", " ", "compute", " ", "a", " ", "higher", " ", 
         "order", " ", "derivative", " ", "with", " ", "both", " ", "spatial",
          " ", "and", " ", "orientational", " ", "derivatives"}], ",", " ", 
        RowBox[{
        "we", " ", "need", " ", "to", " ", "reorder", " ", "the", " ", 
         "derivatives", " ", "using", " ", "the", " ", "commutator", " ", 
         "relations", " ", "so", " ", "that", " ", "the", " ", 
         "orientational", " ", "derivative", " ", "is", " ", "calculated", 
         " ", 
         RowBox[{"first", ".", " ", "More"}], " ", "information", " ", 
         "about", " ", "this", " ", "can", " ", "be", " ", "found", " ", "in",
          " ", 
         RowBox[{"Sec", ".", " ", "5.3"}], " ", "of", " ", 
         RowBox[{
          TemplateBox[{
            RowBox[{"Erik", " ", 
              RowBox[{"Franken", "'"}], "s", " ", "PhD", " ", "thesis"}], {
             URL[
             "https://research.tue.nl/en/publications/enhancement-of-crossing-\
elongated-structures-in-images"], None}, 
            "https://research.tue.nl/en/publications/enhancement-of-crossing-\
elongated-structures-in-images", "HyperlinkActionRecycled", {
            "HyperlinkActive"}, BaseStyle -> {"Hyperlink"}, HyperlinkAction -> 
            "Recycled"},
           "HyperlinkTemplate"], "."}]}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"MatchQ", "[", 
         RowBox[{"orders", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"3", "..."}], ",", 
            RowBox[{
             RowBox[{"Except", "[", "3", "]"}], "..."}]}], "}"}]}], "]"}], 
        ",", 
        RowBox[{"(*", 
         RowBox[{
         "All", " ", "orientational", " ", "derivatives", " ", "are", " ", 
          "computed", " ", 
          RowBox[{"first", "."}]}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"derivative", "=", 
         RowBox[{"LeftInvariantDerivativeCorrectOrder", "[", 
          RowBox[{
          "U", ",", "orders", ",", "\[Sigma]s", ",", "\[Sigma]OD", ",", 
           "angularresolution", ",", "angles"}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"derivative", "=", 
         RowBox[{"LeftInvariantDerivativeWrongOrder", "[", 
          RowBox[{
          "U", ",", "derivativeindex", ",", "\[Sigma]s", ",", "\[Sigma]OD"}], 
          "]"}]}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"Return", " ", "Derivatives"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"NotebookDelete", "[", "temporaryprint", "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "derivative", "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"LeftInvariantDerivatives", "[", 
   RowBox[{
   "U_", ",", "derivativeindex_", ",", "\[Sigma]s_", ",", "\[Sigma]a_"}], 
   "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"LeftInvariantDerivative", "[", 
     RowBox[{"U", ",", "#", ",", "\[Sigma]s", ",", "\[Sigma]a"}], "]"}], 
    "&"}], "/@", "derivativeindex"}]}]}], "Input",
 CellChangeTimes->{{3.913266316355891*^9, 3.9132663462724314`*^9}, {
   3.91326640534489*^9, 3.913266636777845*^9}, {3.913266674560602*^9, 
   3.913266722627385*^9}, {3.9132669622233953`*^9, 3.9132670732534933`*^9}, {
   3.9132671211399665`*^9, 3.9132671649539127`*^9}, {3.9132672411455283`*^9, 
   3.9132672760560665`*^9}, {3.9132673229054155`*^9, 3.91326741022259*^9}, {
   3.913267459599203*^9, 3.9132674991929502`*^9}, {3.9132675293763933`*^9, 
   3.9132675406618032`*^9}, 3.91326758256355*^9, {3.913267651409629*^9, 
   3.9132677523339977`*^9}, {3.9132677839326763`*^9, 
   3.9132678501899595`*^9}, {3.9132681033267813`*^9, 3.913268167003166*^9}, {
   3.91326820008107*^9, 3.913268229649136*^9}, {3.91327122257629*^9, 
   3.9132712388128424`*^9}, {3.913271305614857*^9, 3.9132713096550045`*^9}, {
   3.9132714007209396`*^9, 3.913271438219386*^9}, {3.913271471794546*^9, 
   3.913271687057373*^9}, {3.9132718667825594`*^9, 3.9132718932613125`*^9}, {
   3.913271988783467*^9, 3.913272198510557*^9}, {3.9132724898160343`*^9, 
   3.9132724911786633`*^9}, {3.9132725366691036`*^9, 3.91327254403657*^9}, {
   3.9132726166706543`*^9, 3.9132726207260313`*^9}, {3.9132726589382734`*^9, 
   3.9132726702227354`*^9}, {3.9132727004239497`*^9, 
   3.9132728547053595`*^9}, {3.91327292413078*^9, 3.9132729703181458`*^9}, {
   3.913273013275709*^9, 3.91327304740345*^9}, {3.913273210974222*^9, 
   3.913273235181641*^9}, {3.913273266034292*^9, 3.9132733635673656`*^9}, {
   3.9132734794371634`*^9, 3.9132735834269814`*^9}, {3.9132736554048004`*^9, 
   3.91327368728664*^9}, {3.913273717493252*^9, 3.9132738091796474`*^9}, 
   3.9132738608048077`*^9, {3.913273901382612*^9, 3.913273930821867*^9}, {
   3.9132739768741016`*^9, 3.9132739973489017`*^9}, {3.9132740512128773`*^9, 
   3.9132740838971834`*^9}, {3.9132741481474323`*^9, 
   3.9132742250857553`*^9}, {3.9132743816972446`*^9, 
   3.9132743865246487`*^9}, {3.913276533308627*^9, 3.913276546926363*^9}, {
   3.9132780892350836`*^9, 3.9132780945227833`*^9}, {3.913278138582215*^9, 
   3.9132781415891047`*^9}, {3.9132781865500307`*^9, 
   3.9132781917764177`*^9}, {3.913278222782586*^9, 3.913278234306244*^9}, {
   3.9132783069330306`*^9, 3.913278357169004*^9}, {3.913278407891507*^9, 
   3.913278412069999*^9}, {3.913278548349722*^9, 3.913278612841592*^9}, {
   3.913279365820752*^9, 3.913279404780896*^9}, {3.913279556550499*^9, 
   3.9132795782372966`*^9}, {3.9132796544061255`*^9, 
   3.9132796923508096`*^9}, {3.913279893494243*^9, 3.913279899866739*^9}, {
   3.9132800877692966`*^9, 3.9132801403592076`*^9}, {3.9132802085237455`*^9, 
   3.9132802146227303`*^9}, {3.913280291737883*^9, 3.913280307475136*^9}, {
   3.913280339523716*^9, 3.9132803614629474`*^9}, {3.9132804493770237`*^9, 
   3.913280456142724*^9}, {3.9132805086156015`*^9, 3.913280517259898*^9}, {
   3.913280583455991*^9, 3.9132806421471643`*^9}, {3.9132806960247374`*^9, 
   3.9132807142075825`*^9}, {3.9132817010783505`*^9, 3.9132817471291304`*^9}, 
   3.9132818137389565`*^9, {3.913281854469602*^9, 3.913281876846076*^9}, {
   3.9132819941431875`*^9, 3.9132820014013443`*^9}, 3.9132820468635254`*^9, {
   3.9132821648403645`*^9, 3.9132821736611214`*^9}, {3.9132822235060635`*^9, 
   3.913282247668455*^9}, {3.9132823511892624`*^9, 3.9132823902271585`*^9}, {
   3.913282663890301*^9, 3.913282671615747*^9}, {3.913282724504727*^9, 
   3.913282801823016*^9}, {3.913282897867173*^9, 3.913282906038251*^9}, {
   3.913283176794826*^9, 3.913283181279191*^9}, 3.9132833015350647`*^9, {
   3.9132833412113667`*^9, 3.9132833593146043`*^9}, 3.9132861772336035`*^9, {
   3.9133483626804237`*^9, 3.913348395529066*^9}, {3.9133484270053825`*^9, 
   3.913348431093735*^9}, {3.9133587860299063`*^9, 3.9133588350151777`*^9}, {
   3.9133588675415916`*^9, 3.913358949931817*^9}, {3.913359063096943*^9, 
   3.9133590696894937`*^9}, 3.9133597230143375`*^9, {3.9133599664158173`*^9, 
   3.9133600023290963`*^9}, {3.9133600931678624`*^9, 3.913360094247072*^9}, {
   3.913360167795355*^9, 3.9133602445193644`*^9}, 3.913361066894164*^9, 
   3.9133613115034037`*^9, {3.9133618650981345`*^9, 3.913361878311364*^9}, 
   3.9133619130095253`*^9, {3.913362147633233*^9, 3.9133621477982936`*^9}, {
   3.913362269864027*^9, 3.913362284528604*^9}, {3.9133630403917494`*^9, 
   3.913363048722866*^9}, {3.9133632154824247`*^9, 3.913363254438673*^9}, {
   3.913363313928294*^9, 3.913363322105999*^9}, {3.913363785767273*^9, 
   3.9133638179753823`*^9}, {3.9133641183812027`*^9, 
   3.9133641332873764`*^9}, {3.9133643563829055`*^9, 3.9133643590708675`*^9}, 
   3.913364422190098*^9, {3.913364484101824*^9, 3.91336448553356*^9}, {
   3.9133650634325404`*^9, 3.913365088624405*^9}, {3.9140451976978626`*^9, 
   3.9140452334089904`*^9}, {3.914045413867149*^9, 3.9140454191208243`*^9}, {
   3.9150895388166957`*^9, 3.915089552389288*^9}, {3.9158526818269925`*^9, 
   3.915852685000721*^9}, {3.9158527248438296`*^9, 3.915852753368204*^9}},
 CellLabel->
  "In[875]:=",ExpressionUUID->"e0401b75-656c-4494-826a-fba2d8bcf73c"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"OrientationScoreHessian", "[", 
    RowBox[{"U_", ",", "\[Sigma]s_", ",", "\[Sigma]a_"}], "]"}], ":=", 
   RowBox[{"Block", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"H", ",", "derivatives"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"derivatives", "=", 
       RowBox[{"LeftInvariantDerivatives", "[", 
        RowBox[{"U", ",", 
         RowBox[{"{", 
          RowBox[{
          "11", ",", "21", ",", "31", ",", "12", ",", "22", ",", "32", ",", 
           "13", ",", "23", ",", "33"}], "}"}], ",", "\[Sigma]s", ",", 
         "\[Sigma]a"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"H", "=", 
       RowBox[{"ArrayReshape", "[", 
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"derivatives", ",", 
           RowBox[{"{", 
            RowBox[{"4", ",", "1", ",", "2", ",", "3"}], "}"}]}], "]"}], ",", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"Dimensions", "[", "U", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"3", ",", "3"}], "}"}]}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "H", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.913266316355891*^9, 3.9132663462724314`*^9}, {
   3.91326640534489*^9, 3.913266636777845*^9}, {3.913266674560602*^9, 
   3.913266722627385*^9}, {3.9132669622233953`*^9, 3.9132670732534933`*^9}, {
   3.9132671211399665`*^9, 3.9132671649539127`*^9}, {3.9132672411455283`*^9, 
   3.9132672760560665`*^9}, {3.9132673229054155`*^9, 3.91326741022259*^9}, {
   3.913267459599203*^9, 3.9132674991929502`*^9}, {3.9132675293763933`*^9, 
   3.9132675406618032`*^9}, 3.91326758256355*^9, {3.913267651409629*^9, 
   3.9132677523339977`*^9}, {3.9132677839326763`*^9, 
   3.9132678501899595`*^9}, {3.9132681033267813`*^9, 3.913268167003166*^9}, {
   3.91326820008107*^9, 3.913268229649136*^9}, {3.91327122257629*^9, 
   3.9132712388128424`*^9}, {3.913271305614857*^9, 3.9132713096550045`*^9}, {
   3.9132714007209396`*^9, 3.913271438219386*^9}, {3.913271471794546*^9, 
   3.913271687057373*^9}, {3.9132718667825594`*^9, 3.9132718932613125`*^9}, {
   3.913271988783467*^9, 3.913272198510557*^9}, {3.9132724898160343`*^9, 
   3.9132724911786633`*^9}, {3.9132725366691036`*^9, 3.91327254403657*^9}, {
   3.9132726166706543`*^9, 3.9132726207260313`*^9}, {3.9132726589382734`*^9, 
   3.9132726702227354`*^9}, {3.9132727004239497`*^9, 
   3.9132728547053595`*^9}, {3.91327292413078*^9, 3.9132729703181458`*^9}, {
   3.913273013275709*^9, 3.91327304740345*^9}, {3.913273210974222*^9, 
   3.913273235181641*^9}, {3.913273266034292*^9, 3.9132733635673656`*^9}, {
   3.9132734794371634`*^9, 3.9132735834269814`*^9}, {3.9132736554048004`*^9, 
   3.91327368728664*^9}, {3.913273717493252*^9, 3.9132738091796474`*^9}, 
   3.9132738608048077`*^9, {3.913273901382612*^9, 3.913273930821867*^9}, {
   3.9132739768741016`*^9, 3.9132739973489017`*^9}, {3.9132740512128773`*^9, 
   3.9132740838971834`*^9}, {3.9132741481474323`*^9, 
   3.9132742250857553`*^9}, {3.9132743816972446`*^9, 
   3.9132743865246487`*^9}, {3.913276533308627*^9, 3.913276546926363*^9}, {
   3.9132780892350836`*^9, 3.9132780945227833`*^9}, {3.913278138582215*^9, 
   3.9132781415891047`*^9}, {3.9132781865500307`*^9, 
   3.9132781917764177`*^9}, {3.913278222782586*^9, 3.913278234306244*^9}, {
   3.9132783069330306`*^9, 3.913278357169004*^9}, {3.913278407891507*^9, 
   3.913278412069999*^9}, {3.913278548349722*^9, 3.913278612841592*^9}, {
   3.913279365820752*^9, 3.913279404780896*^9}, {3.913279556550499*^9, 
   3.9132795782372966`*^9}, {3.9132796544061255`*^9, 
   3.9132796923508096`*^9}, {3.913279893494243*^9, 3.913279899866739*^9}, {
   3.9132800877692966`*^9, 3.9132801403592076`*^9}, {3.9132802085237455`*^9, 
   3.9132802146227303`*^9}, {3.913280291737883*^9, 3.913280307475136*^9}, {
   3.913280339523716*^9, 3.9132803614629474`*^9}, {3.9132804493770237`*^9, 
   3.913280456142724*^9}, {3.9132805086156015`*^9, 3.913280517259898*^9}, {
   3.913280583455991*^9, 3.9132806421471643`*^9}, {3.9132806960247374`*^9, 
   3.9132807142075825`*^9}, {3.9132817010783505`*^9, 3.9132817471291304`*^9}, 
   3.9132818137389565`*^9, {3.913281854469602*^9, 3.913281876846076*^9}, {
   3.9132819941431875`*^9, 3.9132820014013443`*^9}, 3.9132820468635254`*^9, {
   3.9132821648403645`*^9, 3.9132821736611214`*^9}, {3.9132822235060635`*^9, 
   3.913282247668455*^9}, {3.9132823511892624`*^9, 3.9132823902271585`*^9}, {
   3.913282663890301*^9, 3.913282671615747*^9}, {3.913282724504727*^9, 
   3.913282801823016*^9}, {3.913282897867173*^9, 3.913282906038251*^9}, {
   3.913283176794826*^9, 3.913283181279191*^9}, 3.9132833015350647`*^9, {
   3.9132833412113667`*^9, 3.9132833593146043`*^9}, 3.9132861772336035`*^9, {
   3.9133483626804237`*^9, 3.913348395529066*^9}, {3.9133484270053825`*^9, 
   3.913348431093735*^9}, {3.9133577060966005`*^9, 3.9133577225168724`*^9}, {
   3.9133670200694647`*^9, 3.913367036956009*^9}, {3.9133671596242833`*^9, 
   3.9133671685837607`*^9}, {3.913367376753078*^9, 3.9133673801703596`*^9}, {
   3.9133680495605907`*^9, 3.913368051557822*^9}, 3.9133682340402884`*^9},
 CellLabel->
  "In[877]:=",ExpressionUUID->"7b91c1b4-6cd2-4ef2-ba5b-1d3e5fc7db3a"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Adapted", " ", "from", " ", 
    RowBox[{"LieAnalysis", "\\", "Common", "\\", 
     RowBox[{"ExternalRegularization", ".", "m"}]}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"LieAnalysis", "\\", "Common", "\\", 
    RowBox[{"CoordinateSystemConversions", ".", 
     RowBox[{"m", "\n", "**", " ", 
      RowBox[{"Author", ":", " ", 
       RowBox[{
        RowBox[{"F", ".", "C", ".", " ", "Martin"}], " ", "<", 
        RowBox[{"f", ".", "c", ".", 
         RowBox[{"martin", "@", "tue"}], ".", "nl"}], ">"}]}]}]}]}]}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.9131987912047167`*^9, 3.9131987913157196`*^9}, {
   3.9132605839622393`*^9, 3.9132605845440063`*^9}, {3.913260722995036*^9, 
   3.9132607307987604`*^9}, {3.9132608047773733`*^9, 
   3.9132609062833877`*^9}, {3.9132610135813046`*^9, 
   3.9132611106559763`*^9}, {3.9132611598708687`*^9, 3.91326116347782*^9}, {
   3.913261227519309*^9, 3.913261256491106*^9}, {3.9132613686350555`*^9, 
   3.9132613701965103`*^9}, {3.913261456827197*^9, 3.9132617482914867`*^9}, {
   3.913266146033348*^9, 3.913266152483122*^9}, 3.913274365276992*^9, {
   3.9132765521264124`*^9, 3.913276555781418*^9}, {3.913348441482709*^9, 
   3.91334844720072*^9}, {3.9187271595316234`*^9, 3.9187271762329144`*^9}, {
   3.9187275268875427`*^9, 3.9187275296336465`*^9}, 3.91872763878554*^9, {
   3.918727678430316*^9, 3.9187277514758043`*^9}, {3.918728084084567*^9, 
   3.9187281677056*^9}, {3.9187281987305727`*^9, 3.9187282212540727`*^9}, {
   3.918728411324391*^9, 3.918728416395115*^9}, {3.9187926437594175`*^9, 
   3.918792650689191*^9}},
 CellLabel->
  "In[878]:=",ExpressionUUID->"41b3f9fe-0983-40d2-96da-241751ef29f7"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ExternalRegularization", "[", 
    RowBox[{
    "tensorIn_", ",", "orientations_", ",", "\[Sigma]sExt_", ",", 
     "\[Sigma]aExt_"}], "]"}], ":=", 
   RowBox[{"Block", "[", " ", 
    RowBox[{"(*", 
     RowBox[{
     "Not", " ", "sure", " ", "why", " ", "Block", " ", "instead", " ", "of", 
      " ", "Module"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"tensor", "=", "tensorIn"}], ",", "\[IndentingNewLine]", 
       RowBox[{"periodicitylocal", "=", 
        RowBox[{"2", "\[Pi]"}]}], ",", "\[IndentingNewLine]", 
       "angularresolution", ",", "\[IndentingNewLine]", "\[Sigma]ODExt", ",", 
       "\[IndentingNewLine]", "\[Sigma]s"}], "\[IndentingNewLine]", "}"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"angularresolution", "=", 
       RowBox[{"periodicitylocal", "/", 
        RowBox[{
         RowBox[{"Dimensions", "[", "tensor", "]"}], "[", 
         RowBox[{"[", "3", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"\[Sigma]ODExt", "=", 
       RowBox[{"\[Sigma]aExt", "/", "angularresolution"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"\[Sigma]s", "=", 
       RowBox[{"{", 
        RowBox[{"\[Sigma]sExt", ",", "\[Sigma]sExt", ",", "\[Sigma]ODExt"}], 
        "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"Apply", " ", "external", " ", "regularization"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"tensor", "=", 
       RowBox[{"Transpose", "[", 
        RowBox[{
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"GaussianFilter", "[", 
             RowBox[{"#", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"4", "\[Sigma]s"}], "+", "1"}], ",", "\[Sigma]s"}], 
               "}"}]}], "]"}], "&"}], ",", 
           RowBox[{"Transpose", "[", 
            RowBox[{"tensor", ",", 
             RowBox[{"{", 
              RowBox[{"2", ",", "3", ",", "4", ",", "1"}], "}"}]}], "]"}]}], 
          "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"4", ",", "1", ",", "2", ",", "3"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"Return", " ", "the", " ", "object"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "tensor", "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9131987912047167`*^9, 3.9131987913157196`*^9}, {
   3.9132605839622393`*^9, 3.9132605845440063`*^9}, {3.913260722995036*^9, 
   3.9132607307987604`*^9}, {3.9132608047773733`*^9, 
   3.9132609062833877`*^9}, {3.9132610135813046`*^9, 
   3.9132611106559763`*^9}, {3.9132611598708687`*^9, 3.91326116347782*^9}, {
   3.913261227519309*^9, 3.913261256491106*^9}, {3.9132613686350555`*^9, 
   3.9132613701965103`*^9}, {3.913261456827197*^9, 3.9132617482914867`*^9}, {
   3.913266146033348*^9, 3.913266152483122*^9}, 3.913274365276992*^9, {
   3.9132765521264124`*^9, 3.913276555781418*^9}, {3.913348441482709*^9, 
   3.9133484523029647`*^9}, 3.9133573363347497`*^9, {3.913364157872963*^9, 
   3.913364170524413*^9}, {3.9133644696699967`*^9, 3.913364472387657*^9}, {
   3.9150894773807507`*^9, 3.9150894980796995`*^9}, {3.915852042022706*^9, 
   3.9158520540076284`*^9}, 3.9158520894623804`*^9, {3.9158525249066334`*^9, 
   3.9158526513013415`*^9}, {3.9187270602878675`*^9, 
   3.9187270897883234`*^9}, {3.9187273239473195`*^9, 3.918727331281267*^9}, {
   3.9187279103030796`*^9, 3.918727983901002*^9}, {3.918728426733127*^9, 
   3.918728431736085*^9}, 3.918790795370791*^9, {3.918792624128806*^9, 
   3.918792635115245*^9}},
 CellLabel->
  "In[879]:=",ExpressionUUID->"2ff546d9-4171-4f0b-a522-90b403ce980c"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Vesselness Code", "Subsection",
 CellChangeTimes->{{3.9145594624444656`*^9, 
  3.9145594656379857`*^9}},ExpressionUUID->"8bbffd92-8ae1-4706-a711-\
75b886c42820"],

Cell[CellGroupData[{

Cell["Documentation", "Subsubsection",
 CellChangeTimes->{{3.91319793039741*^9, 
  3.9131979332272635`*^9}},ExpressionUUID->"461cda36-ade4-475a-b494-\
2e9a87b7ebb0"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"SingleScaleVesselnessExtReg", "::", "usage"}], "=", 
    "\"\<SingleScaleVesselnessExtReg[U, mask, \[Xi], \[Zeta], \[Sigma]s, \
\[Sigma]a]\n\treturns the vesselness of the scalar field U, with dimensions \
{Nx, Ny, No}, masked with mask,\n\tat spatial standard deviation \[Sigma]s in \
pixels and angular standard deviation \[Sigma]a in radians, with\n\tleft \
invariant metric tensor field defined by parameters \[Xi] and \[Zeta] as G \
=\!\(\*TagBox[RowBox[{\"(\", \"\[NoBreak]\", GridBox[{{SuperscriptBox[\"\[Xi]\
\", \"2\"], \"0\", \"0\"},{\"0\", FractionBox[SuperscriptBox[\"\[Xi]\", \
\"2\"], SuperscriptBox[\"\[Zeta]\", \"2\"]], \"0\"},{\"0\", \"0\", \"1\"}
},GridBoxAlignment->{\"Columns\" -> {{Center}}, \"Rows\" -> \
{{Baseline}}},GridBoxSpacings->{\"Columns\" -> {
Offset[0.27999999999999997`], {
Offset[0.7]}, 
Offset[0.27999999999999997`]}, \"Rows\" -> {
Offset[0.2], {
Offset[0.4]}, 
Offset[0.2]}}], \"\[NoBreak]\", \")\"}],Function[BoxForm`e$, 
MatrixForm[BoxForm`e$]]]\). The \n\targuments \[Sigma]sExt and \[Sigma]aExt, \
default 0, define the standard deviations of the external \n\tregularisation \
on the spatial components in pixels and the angular component in radians,\n\t\
respectively.\>\""}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"MultiScaleVesselnessExtReg", "::", "usage"}], "=", 
    "\"\<MultiScaleVesselnessExtReg[U, mask, \[Xi], \[Zeta], \[Sigma]s, \
\[Sigma]a]\n\treturns the vesselness of the scalar field U, with dimensions \
{Nx, Ny, No}, masked with mask,\n\tat spatial standard deviations \[Sigma]s \
in pixels and angular standard deviation \[Sigma]a in radians, with\n\tleft \
invariant metric tensor field defined by parameters \[Xi] and \[Zeta] as G \
=\!\(\*TagBox[RowBox[{\"(\", \"\[NoBreak]\", GridBox[{{SuperscriptBox[\"\[Xi]\
\", \"2\"], \"0\", \"0\"},{\"0\", FractionBox[SuperscriptBox[\"\[Xi]\", \
\"2\"], SuperscriptBox[\"\[Zeta]\", \"2\"]], \"0\"},{\"0\", \"0\", \"1\"}
},GridBoxAlignment->{\"Columns\" -> {{Center}}, \"Rows\" -> \
{{Baseline}}},GridBoxSpacings->{\"Columns\" -> {
Offset[0.27999999999999997`], {
Offset[0.7]}, 
Offset[0.27999999999999997`]}, \"Rows\" -> {
Offset[0.2], {
Offset[0.4]}, 
Offset[0.2]}}], \"\[NoBreak]\", \")\"}],Function[BoxForm`e$, 
MatrixForm[BoxForm`e$]]]\). The \n\targuments \[Sigma]sExt and \[Sigma]aExt, \
default 0, define the standard deviations of the external \n\tregularisation \
on the spatial components in pixels and the angular component in radians,\n\t\
respectively.\>\""}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MergeVesselnessFilters", "::", "usage"}], "=", 
   "\"\<MergeVesselnessFilters[vesselnessfilters]\n\treturns a single \
vesselness filter defined by integrating over the scales in vesselnessfilter \
\n\tand normalising.\>\""}], ";"}]}], "Input",
 CellChangeTimes->{{3.9132607944292555`*^9, 3.913260794907592*^9}, {
   3.913262533879789*^9, 3.913262606348717*^9}, {3.9132626392088847`*^9, 
   3.9132627266059914`*^9}, 3.9132627742595778`*^9, {3.91326281882034*^9, 
   3.9132628268635144`*^9}, {3.913262876097571*^9, 3.913262913478367*^9}, {
   3.913262949844576*^9, 3.913263013537442*^9}, {3.9132630517028093`*^9, 
   3.913263101065271*^9}, {3.913352290516512*^9, 3.9133523358923664`*^9}, {
   3.914559489339059*^9, 3.914559595518489*^9}, {3.914559631683718*^9, 
   3.9145598107944455`*^9}, {3.9145799117208557`*^9, 
   3.9145799895214252`*^9}, {3.91509397594214*^9, 3.915093982189191*^9}, {
   3.915094033598173*^9, 3.9150941281670384`*^9}, 3.9158534687413826`*^9},
 CellLabel->
  "In[880]:=",ExpressionUUID->"c4019279-2a52-4fe5-a399-80b7a27fe82a"]
}, Closed]],

Cell[CellGroupData[{

Cell["Implementation", "Subsubsection",
 CellChangeTimes->{{3.9133523293450236`*^9, 
  3.9133523313569555`*^9}},ExpressionUUID->"c3e64e1f-3192-4d4f-8943-\
05b13ce514c0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SingleScaleVesselnessExtReg", "[", 
   RowBox[{
   "U_", ",", "mask_", ",", "\[Xi]_", ",", "\[Zeta]_", ",", "\[Sigma]s_", ",",
     "\[Sigma]a_", ",", 
    RowBox[{"\[Sigma]sExt_", ":", "0"}], ",", 
    RowBox[{"\[Sigma]aExt_", ":", "0"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "What", " ", "does", " ", "\[Sigma]1", " ", "mean", " ", "and", " ", 
     "why", " ", "do", " ", "we", " ", "pick", " ", "this", " ", 
     RowBox[{"defaults", "?"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "Nx", ",", "Ny", ",", "No", ",", "H", ",", "M", ",", "orientations", ",",
       "Hess", ",", "\[Lambda]1", ",", "c", ",", "Q", ",", "S", ",", "R", ",", 
      RowBox[{"\[Sigma]1", "=", "0.5"}], ",", "\[Sigma]2", ",", "vesselness", 
      ",", "Qgreater0", ",", "newvesselnessfilter", ",", 
      "maskedvesselnessfilter"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{"Dimensions", " ", "of", " ", "orientation", " ", "score"}], 
     "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Nx", ",", "Ny", ",", "No"}], "}"}], "=", 
      RowBox[{"Dimensions", "[", "U", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"temporaryprint", "=", 
      RowBox[{
      "PrintTemporary", "[", "\"\<Computing structural derivatives\>\"", 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"structuralDerivatives", "=", 
      RowBox[{"Transpose", "[", 
       RowBox[{
        RowBox[{"LeftInvariantDerivatives", "[", 
         RowBox[{"U", ",", 
          RowBox[{"{", 
           RowBox[{"11", ",", "22"}], "}"}], ",", "\[Sigma]s", ",", 
          "\[Sigma]a"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"4", ",", "1", ",", "2", ",", "3"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"orientations", "=", 
      RowBox[{"Range", "[", 
       RowBox[{"0", ",", 
        RowBox[{
         RowBox[{"2", "\[Pi]"}], "-", 
         RowBox[{"2", 
          RowBox[{"\[Pi]", "/", "No"}]}]}], ",", 
        RowBox[{"2", 
         RowBox[{"\[Pi]", "/", "No"}]}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"NotebookDelete", "[", "temporaryprint", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[Sigma]sExt", ",", "\[Sigma]aExt"}], "}"}], " ", "=!=", 
        " ", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"temporaryprint", "=", 
         RowBox[{
         "PrintTemporary", "[", "\"\<Regularising structural derivatives\>\"",
           "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"structuralDerivatives", "=", " ", 
         RowBox[{"ExternalRegularization", "[", 
          RowBox[{
          "structuralDerivatives", ",", " ", "orientations", ",", " ", 
           "\[Sigma]sExt", ",", "\[Sigma]aExt"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"NotebookDelete", "[", "temporaryprint", "]"}]}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"temporaryprint", "=", 
      RowBox[{"PrintTemporary", "[", "\"\<Computing vesselness\>\"", "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
       "It", " ", "would", " ", "be", " ", "more", " ", "correct", " ", "to", 
        " ", "use", " ", "the", " ", "gauge", " ", "derivatives"}], ",", " ", 
       RowBox[{
       "however", " ", "LI", " ", "derivatives", " ", "works", " ", "alright",
         " ", "as", " ", "well", " ", "and", " ", "is", " ", "much", " ", 
        "simpler"}]}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"\[Lambda]1", "=", 
      RowBox[{
       RowBox[{"structuralDerivatives", "\[LeftDoubleBracket]", 
        RowBox[{"All", ",", "All", ",", "All", ",", "1"}], 
        "\[RightDoubleBracket]"}], "/", 
       SuperscriptBox["\[Xi]", "2"]}]}], ";", 
     RowBox[{"(*", 
      RowBox[{
       SubscriptBox["\[ScriptCapitalA]", "11"], "U"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"c", "=", 
      RowBox[{
       RowBox[{"structuralDerivatives", "\[LeftDoubleBracket]", 
        RowBox[{"All", ",", "All", ",", "All", ",", "2"}], 
        "\[RightDoubleBracket]"}], "*", 
       RowBox[{
        SuperscriptBox["\[Zeta]", "2"], "/", 
        SuperscriptBox["\[Xi]", "2"]}]}]}], ";", 
     RowBox[{"(*", 
      RowBox[{
       SubscriptBox["\[ScriptCapitalA]", "22"], "U"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"Q", "=", "c"}], ";", " ", 
     RowBox[{"(*", 
      RowBox[{"convexity", " ", "criterion"}], "*)"}], "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "Determine", " ", "measures", " ", "that", " ", "are", " ", "used", " ",
        "when", " ", "calculating", " ", "the", " ", "vesselness"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"S", "=", 
      RowBox[{
       SuperscriptBox["\[Lambda]1", "2"], "+", 
       SuperscriptBox["c", "2"]}]}], ";", " ", 
     RowBox[{"(*", 
      RowBox[{"structure", " ", "measure"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"R", "=", 
      RowBox[{"\[Lambda]1", "/", "c"}]}], ";", " ", 
     RowBox[{"(*", 
      RowBox[{"anisotropy", " ", "measure"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"\[Sigma]2", "=", 
      RowBox[{"0.2", "*", 
       RowBox[{"Max", "[", 
        RowBox[{"Abs", "[", "S", "]"}], "]"}]}]}], ";", " ", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Max", "[", 
        RowBox[{"Abs", "[", "S", "]"}], "]"}], " ", "ensures", " ", "that", 
       " ", "the", " ", "method", " ", "is", " ", "scaling", " ", 
       "invariant"}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "Calculate", " ", "the", " ", "vesselness", " ", "at", " ", "ALL", " ", 
       "locations", " ", "and", " ", "orientations"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"vesselness", "=", 
      RowBox[{
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["R", "2"]}], "/", 
         RowBox[{"(", 
          RowBox[{"2", 
           SuperscriptBox["\[Sigma]1", "2"]}], ")"}]}], "]"}], "*", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"Exp", "[", 
          RowBox[{
           RowBox[{"-", "S"}], "/", 
           RowBox[{"(", 
            RowBox[{"2", "*", "\[Sigma]2"}], ")"}]}], "]"}]}], ")"}]}]}], ";",
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"Selection", " ", "criterion", " ", "on", " ", "convexity"}], 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"Qgreater0", "=", 
      RowBox[{"1", "-", 
       RowBox[{"UnitStep", "[", 
        RowBox[{"-", "Q"}], "]"}]}]}], ";", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"is", " ", "Q"}], "==", 
       RowBox[{"0", " ", 
        RowBox[{"important", "?"}]}]}], "*)"}], "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "Vesselness", " ", "at", " ", "locations", " ", "that", " ", "meet", 
       " ", "the", " ", "convexity", " ", "criterion"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"newvesselnessfilter", "=", 
      RowBox[{"vesselness", "*", "Qgreater0"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "Cut", " ", "off", " ", "the", " ", "upper", " ", "border", " ", 
       "which", " ", "influences", " ", "the", " ", "vesselness"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"newvesselnessfilter", "[", 
       RowBox[{"[", 
        RowBox[{"1", ";;", "5"}], "]"}], "]"}], "=", 
      RowBox[{"ConstantArray", "[", 
       RowBox[{"0", ",", 
        RowBox[{"{", 
         RowBox[{"5", ",", "Ny", ",", "No"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "Cut", " ", "off", " ", "the", " ", "lower", " ", "border", " ", 
       "which", " ", "influences", " ", "the", " ", "vesselness"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"newvesselnessfilter", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"-", "5"}], ";;"}], "]"}], "]"}], "=", 
      RowBox[{"ConstantArray", "[", 
       RowBox[{"0", ",", 
        RowBox[{"{", 
         RowBox[{"5", ",", "Ny", ",", "No"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "Add", " ", "new", " ", "vesselness", " ", "to", " ", "the", " ", 
       "array", " ", "containing", " ", "vesselness", " ", "filters", " ", 
       "for", " ", "all", " ", "different", " ", "values", " ", "of", " ", 
       "\[Sigma]s"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"maskedvesselnessfilter", "=", 
      RowBox[{"mask", "*", "newvesselnessfilter"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"NotebookDelete", "[", "temporaryprint", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "maskedvesselnessfilter", "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{
  3.913198482656753*^9, {3.913198606247609*^9, 3.913198624768097*^9}, {
   3.9132617744540987`*^9, 3.9132617772684283`*^9}, 3.9132674206394*^9, {
   3.9132750470865946`*^9, 3.913275170039471*^9}, {3.9132752566935835`*^9, 
   3.9132753005236177`*^9}, {3.9132753533557177`*^9, 
   3.9132753822707853`*^9}, {3.9132755813870974`*^9, 
   3.9132757478268404`*^9}, {3.913275798808852*^9, 3.91327580997488*^9}, {
   3.913276063950756*^9, 3.913276225110195*^9}, {3.913276522677698*^9, 
   3.9132765230603437`*^9}, {3.9132768203734713`*^9, 
   3.9132768358114457`*^9}, {3.9132771585818887`*^9, 
   3.9132771587417574`*^9}, {3.9132773276165943`*^9, 3.9132773558454247`*^9}, 
   3.913283317210365*^9, {3.9132853698549376`*^9, 3.9132853723574214`*^9}, {
   3.9132854497055073`*^9, 3.913285451063797*^9}, {3.9132855322768197`*^9, 
   3.9132855347360044`*^9}, {3.9132858415786695`*^9, 3.913285906111375*^9}, {
   3.9132861344102554`*^9, 3.9132861534618487`*^9}, {3.9133512971099143`*^9, 
   3.9133513161570997`*^9}, {3.913351357929556*^9, 3.9133514286502414`*^9}, {
   3.913357224912428*^9, 3.9133572293111467`*^9}, 3.9133572800294437`*^9, 
   3.913357415685244*^9, {3.913357476296212*^9, 3.91335749083329*^9}, {
   3.9133640835753117`*^9, 3.9133640992947717`*^9}, 3.9133645344070005`*^9, 
   3.9133660204188643`*^9, {3.9133661815460634`*^9, 3.913366189145434*^9}, {
   3.913366379135363*^9, 3.9133663842238164`*^9}, 3.9133664284793453`*^9, {
   3.9133665437702694`*^9, 3.9133665552199583`*^9}, {3.913366777543455*^9, 
   3.913366781787729*^9}, {3.9133668230464993`*^9, 3.9133668504453278`*^9}, {
   3.9133691883239365`*^9, 3.913369189202818*^9}, {3.9133694269615765`*^9, 
   3.9133694512125306`*^9}, 3.913956933010992*^9, {3.9139569984482193`*^9, 
   3.9139570010729265`*^9}, 3.9139575042845964`*^9, {3.9140493577673206`*^9, 
   3.9140494219156284`*^9}, {3.914049805582427*^9, 3.9140498064549093`*^9}, {
   3.914050104548688*^9, 3.914050131646821*^9}, {3.914050547737129*^9, 
   3.914050557190193*^9}, {3.914579740160698*^9, 3.9145797423242116`*^9}, {
   3.914579777845722*^9, 3.9145797935689797`*^9}, {3.9150894024421577`*^9, 
   3.9150894529131336`*^9}, {3.917964516031165*^9, 3.9179645319367013`*^9}, {
   3.918726967641693*^9, 3.918727053225834*^9}, {3.9187270972500124`*^9, 
   3.9187271075440865`*^9}, 3.9187272735719233`*^9, {3.918790801719229*^9, 
   3.918790889446359*^9}, 3.91879268328615*^9},
 CellLabel->
  "In[883]:=",ExpressionUUID->"d1908073-5226-44d0-9e22-428ad62187f5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"MultiScaleVesselnessExtReg", "[", 
   RowBox[{
   "U_", ",", "mask_", ",", "\[Xi]_", ",", "\[Zeta]_", ",", "\[Sigma]s_", ",",
     "\[Sigma]a_", ",", 
    RowBox[{"\[Sigma]sExt_", ":", "0"}], ",", 
    RowBox[{"\[Sigma]aExt_", ":", "0"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"vesselness", ",", "newvesselnessfilter", ",", 
      RowBox[{"vesselnessfilter", "=", 
       RowBox[{"{", "}"}]}], ",", "k", ",", "i", ",", "Nx", ",", "Ny", ",", 
      "No"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{"Dimensions", " ", "of", " ", "orientation", " ", "score"}], 
     "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Nx", ",", "Ny", ",", "No"}], "}"}], "=", 
      RowBox[{"Dimensions", "[", "U", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Monitor", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", "=", "1"}], ",", 
         RowBox[{"i", "<=", 
          RowBox[{"Length", "[", "\[Sigma]s", "]"}]}], ",", 
         RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
          "Select", " ", "the", " ", "spatial", " ", "scale", " ", "for", " ",
            "the", " ", "specific", " ", "iteration"}], "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"k", "=", 
           RowBox[{"\[Sigma]s", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"temporaryprint", "=", 
           RowBox[{"PrintTemporary", "[", 
            RowBox[{"\"\<Computing vesselness at scale \>\"", ",", "k"}], 
            "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
           "Calculate", " ", "the", " ", "vesselness", " ", "of", " ", "the", 
            " ", "full", " ", "image"}], "*)"}], "\[IndentingNewLine]", 
          RowBox[{"vesselness", "=", 
           RowBox[{"SingleScaleVesselnessExtReg", "[", 
            RowBox[{
            "U", ",", "mask", ",", "\[Xi]", ",", "\[Zeta]", ",", "k", ",", 
             "\[Sigma]a", ",", "\[Sigma]sExt", ",", "\[Sigma]aExt"}], "]"}]}],
           ";", "\[IndentingNewLine]", 
          RowBox[{"NotebookDelete", "[", "temporaryprint", "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"vesselnessfilter", ",", "vesselness"}], "]"}]}]}], 
        "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Row", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"ProgressIndicator", "[", 
            RowBox[{"i", ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", 
               RowBox[{"Length", "[", "\[Sigma]s", "]"}]}], "}"}]}], "]"}], 
           ",", "i", ",", "\"\</\>\"", ",", 
           RowBox[{"Length", "[", "\[Sigma]s", "]"}]}], "}"}], ",", 
         "\"\< \>\""}], "]"}]}], "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "vesselnessfilter", "]"}]}]}], "\n", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.9108609238058133`*^9, 3.910860930529484*^9}, {
   3.911534028898551*^9, 3.911534034966361*^9}, {3.911534638883432*^9, 
   3.9115346397481055`*^9}, {3.9131978247862015`*^9, 
   3.9131978875594625`*^9}, {3.9131979685203576`*^9, 3.913198095287741*^9}, {
   3.913198126028945*^9, 3.9131981528650584`*^9}, {3.9131982940962057`*^9, 
   3.913198388303872*^9}, 3.913198423551984*^9, {3.913198486542949*^9, 
   3.913198507670722*^9}, 3.9132617980551405`*^9, {3.9132754368516893`*^9, 
   3.913275547816448*^9}, {3.913276251236601*^9, 3.9132762517875586`*^9}, {
   3.9132859205461407`*^9, 3.913286011250038*^9}, {3.913350627419647*^9, 
   3.9133506345710864`*^9}, {3.913351326862296*^9, 3.913351353773332*^9}, {
   3.913351408789881*^9, 3.913351410518016*^9}, 3.913353823866131*^9, {
   3.9133691984842634`*^9, 3.9133692083625507`*^9}, {3.913370366168984*^9, 
   3.913370395811858*^9}, 3.9133705472042074`*^9, {3.9139569253027515`*^9, 
   3.913956927411398*^9}, {3.91395698669654*^9, 3.9139569940772514`*^9}, {
   3.914049479546033*^9, 3.9140495063718815`*^9}, {3.9140505408362846`*^9, 
   3.914050541987454*^9}, {3.9140507379750676`*^9, 3.914050740873905*^9}, 
   3.914050884042922*^9, {3.914051457228774*^9, 3.9140514960841446`*^9}, {
   3.914052121845408*^9, 3.9140521401779537`*^9}, {3.914579802021852*^9, 
   3.9145798976463957`*^9}, 3.915089395961276*^9, 3.9158516609466147`*^9, 
   3.9158519405847893`*^9, {3.917964535645177*^9, 3.9179645386535425`*^9}},
 CellLabel->
  "In[884]:=",ExpressionUUID->"f12ae987-d9f8-440c-8d64-d72b7355b573"],

Cell[BoxData[
 RowBox[{
  RowBox[{"MergeVesselnessFilters", "[", "vesselnessfilters_", "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"vesselnessunnormalised", ",", "vesselnessfilter"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
     "Calculate", " ", "vesselness", " ", "per", " ", "location", " ", "and", 
      " ", "orientation", " ", "by", " ", "taking", " ", "sum", " ", "over", 
      " ", "all", " ", "spatial", " ", "scales"}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"vesselnessunnormalised", "=", 
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{"vesselnessfilters", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{
           RowBox[{"Dimensions", "[", "vesselnessfilters", "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "Calculate", " ", "maximum", " ", "value", " ", "in", " ", "sum1"}], 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"vesselnessfilter", "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"vesselnessunnormalised", "-", 
         RowBox[{"Min", "[", "vesselnessunnormalised", "]"}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Max", "[", "vesselnessunnormalised", "]"}], "-", 
         RowBox[{"Min", "[", "vesselnessunnormalised", "]"}]}], ")"}]}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "vesselnessfilter", "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.913352264154648*^9, 3.9133522807429996`*^9}, {
   3.913352477773391*^9, 3.913352558719881*^9}, 3.913352809940792*^9, 
   3.9133528805889254`*^9, {3.9133542069033513`*^9, 3.9133542188387456`*^9}, {
   3.9140527792940884`*^9, 3.914052801201972*^9}, {3.9140528465487795`*^9, 
   3.914052851160531*^9}},
 CellLabel->
  "In[885]:=",ExpressionUUID->"595a731e-5ee2-4a64-bb52-8f4e63c0ebe2"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Cost Code", "Subsection",
 CellChangeTimes->{{3.914560140713973*^9, 
  3.914560144890857*^9}},ExpressionUUID->"0f15e304-c093-457e-9fef-\
1afd28b09d3f"],

Cell[CellGroupData[{

Cell["Documentation", "Subsubsection",
 CellChangeTimes->{{3.9145601516999598`*^9, 
  3.9145601544594607`*^9}},ExpressionUUID->"a35aff76-3674-462d-8a12-\
166348df8c4c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"AddLifts", "::", "usage"}], "=", 
    "\"\<AddLifts[vesselness, seedsIndex] \n\tadds lifts to the vesselness at \
the points defined by seedsIndex, in order to improve tracking through \
bifurcations.\>\""}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"CostFunction", "::", "usage"}], "=", 
    "\"\<CostFunction[vesselness, \[Lambda], p] \n\treturns the cost function \
associated with the supplied vesselness.\>\""}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"CostFromMultiScaleVesselness", "::", "usage"}], "=", 
   "\"\<CostFromMultiScaleVesselness[vesselness, \[Lambda], p]\n\treturns the \
cost function associated with the supplied vesselness.\>\""}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.914560355593959*^9, 3.914560377767003*^9}, {
  3.914560453294405*^9, 3.9145604857546797`*^9}, {3.9150941822060237`*^9, 
  3.9150942450398808`*^9}},
 CellLabel->
  "In[886]:=",ExpressionUUID->"1c37753f-5123-4254-ac79-15d028c98464"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Implementation", "Subsubsection",
 CellChangeTimes->{{3.9145601569202094`*^9, 
  3.9145601584576693`*^9}},ExpressionUUID->"e2bc870d-09a0-400e-8941-\
a1caff83d77c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"AddLifts", "[", 
   RowBox[{"vesselness_", ",", "seedsIndex_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "Nxl", ",", "Nyl", ",", "Nol", ",", "liftElevators", ",", 
      "vesselnesslift"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Nxl", ",", "Nyl", ",", "Nol"}], "}"}], "=", 
      RowBox[{"Dimensions", "[", "vesselness", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"liftElevators", "=", 
      RowBox[{"ConstantArray", "[", 
       RowBox[{"0", ",", 
        RowBox[{"{", 
         RowBox[{"Nol", ",", "Nxl", ",", "Nyl"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"liftElevators", "\[LeftDoubleBracket]", 
           RowBox[{"All", ",", 
            RowBox[{"Sequence", "@@", 
             RowBox[{"(", "#", ")"}]}]}], "\[RightDoubleBracket]"}], "=", 
          "1"}], ";"}], "&"}], ",", "seedsIndex"}], "]"}], ";", 
     RowBox[{"(*", 
      RowBox[{"What", " ", "is", " ", "this", " ", "supposed", " ", "to", " ", 
       RowBox[{"do", "?"}]}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"liftElevators", "=", 
      RowBox[{"GaussianFilter", "[", 
       RowBox[{"liftElevators", ",", "1.5"}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"Combine", " ", "both", " ", "mobility", " ", "functions"}], 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"vesselnesslift", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Max", "[", "#", "]"}], "&"}], ",", 
        RowBox[{"Transpose", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"4", "*", 
             RowBox[{"Rescale", "[", "vesselness", "]"}]}], ",", 
            RowBox[{"Transpose", "[", 
             RowBox[{
              RowBox[{"Rescale", "[", "liftElevators", "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"3", ",", "1", ",", "2"}], "}"}]}], "]"}]}], "}"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"4", ",", "1", ",", "2", ",", "3"}], "}"}]}], "]"}], ",", 
        RowBox[{"{", "3", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"vesselnesslift", "=", 
      RowBox[{"vesselnesslift", "/", 
       RowBox[{"Max", "[", "vesselnesslift", "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "vesselnesslift", "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{
  3.9133528865395575`*^9, {3.9133530992284718`*^9, 3.9133531045784545`*^9}, {
   3.913353168519992*^9, 3.913353252690937*^9}, {3.9133533053980236`*^9, 
   3.913353310841132*^9}},
 CellLabel->
  "In[889]:=",ExpressionUUID->"86634edb-d014-4828-846d-2258a18b5463"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"CostFunction", "[", 
    RowBox[{"vesselness_", ",", "\[Lambda]_", ",", "p_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "cost", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"cost", "=", 
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"\[Lambda]", "*", 
           SuperscriptBox["vesselness", "p"]}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "cost", "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9133521029671197`*^9, 3.9133521879615993`*^9}, 
   3.913352577283453*^9, {3.913352700230754*^9, 3.9133527043114276`*^9}},
 CellLabel->
  "In[890]:=",ExpressionUUID->"14eaee01-363e-42a2-b449-160366c66731"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"CostFromVesselness", "[", 
    RowBox[{"vesselness_", ",", "\[Lambda]_", ",", "p_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"vesselnesslift", ",", "cost"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"vesselnesslift", "=", 
       RowBox[{"AddLifts", "[", 
        RowBox[{"vesselness", ",", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{"#", 
            RowBox[{"(*", 
             RowBox[{"-", 
              RowBox[{"{", 
               RowBox[{"ySelect", ",", "0"}], "}"}]}], "*)"}], "&"}], ",", 
           RowBox[{"{", "}"}]}], "]"}]}], "]"}]}], ";", 
      RowBox[{"(*", " ", 
       RowBox[{
       "Used", " ", "to", " ", "add", " ", "lifts", " ", "at", " ", 
        "bifurcations", " ", "when", " ", "the", " ", "locations", " ", "of", 
        " ", "these", " ", "bifurcations", " ", "is", " ", "known", " ", 
        RowBox[{"beforehand", ".", " ", "Currently"}], " ", 
        RowBox[{"disabled", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"cost", "=", 
       RowBox[{"CostFunction", "[", 
        RowBox[{"vesselnesslift", ",", "\[Lambda]", ",", "p"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "cost", "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.91335157221082*^9, 3.913351602809481*^9}, {
  3.9133527505441713`*^9, 3.913352758340267*^9}, {3.9133528006913*^9, 
  3.913352826935608*^9}, {3.9133529357749376`*^9, 3.91335294956761*^9}, {
  3.9133529796503253`*^9, 3.9133529860743513`*^9}, {3.913353263344164*^9, 
  3.9133533484916377`*^9}, {3.91508102002754*^9, 3.9150810670240364`*^9}, {
  3.9150900926226997`*^9, 3.9150901013029547`*^9}},
 CellLabel->
  "In[891]:=",ExpressionUUID->"7b5067f1-ae62-43ba-b72a-1607bae26bb9"]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Compute Vesselness", "Section",
 CellChangeTimes->{{3.9145599583919754`*^9, 
  3.91455996107295*^9}},ExpressionUUID->"4488ee5a-d8fb-4c36-8498-\
ccddf30e9bc0"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"\[Xi]vesselness", "=", "1"}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{
   "Metric", " ", "tensor", " ", "parameter", " ", "for", " ", "vesselness"}],
    " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Zeta]vesselness", "=", "1"}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Metric", " ", "tensor", " ", "parameter", " ", "for", " ", 
     RowBox[{"vesselness", ":", " ", 
      RowBox[{"diag", 
       RowBox[{"(", "G", ")"}]}]}]}], "=", 
    RowBox[{"{", 
     RowBox[{
      FractionBox["1", "\[Xi]"], ",", 
      FractionBox["\[Zeta]", "\[Xi]"], ",", "1"}], "}"}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Sigma]svesselness", "=", 
    RowBox[{"1", "+", 
     RowBox[{"0.5", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}]}]}]}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{
   "Spatial", " ", "standard", " ", "deviations", " ", "at", " ", "which", 
    " ", "the", " ", "vesselness", " ", "is", " ", "computed"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Sigma]avesselness", "=", 
    RowBox[{"0.5", "*", 
     SuperscriptBox["0.75", "2"]}]}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{
   "Angular", " ", "standard", " ", "deviation", " ", "at", " ", "which", " ",
     "the", " ", "vesselness", " ", "is", " ", "computed"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Sigma]spatialExt", "=", "0"}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{
   "Standard", " ", "deviation", " ", "for", " ", "spatial", " ", "external", 
    " ", "regularisation", " ", "of", " ", "Hessian", " ", "in", " ", 
    "vesselness", " ", "computation"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Sigma]angularExt", "=", "0"}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{
   "Standard", " ", "deviation", " ", "for", " ", "orientational", " ", 
    "external", " ", "regularisation", " ", "of", " ", "Hessian", " ", "in", 
    " ", "vesselness", " ", "computation"}], " ", "*)"}]}]}], "Input",
 CellChangeTimes->{{3.9140537011372433`*^9, 3.914053746944399*^9}, {
   3.9140537778906593`*^9, 3.914053792214876*^9}, {3.9140549395027885`*^9, 
   3.9140551126301384`*^9}, {3.914055265088069*^9, 3.914055335468361*^9}, 
   3.9145600227830124`*^9, 3.91456019016335*^9, {3.914580021566539*^9, 
   3.9145800406026974`*^9}, {3.914580253024952*^9, 3.914580289945353*^9}, {
   3.9146438043496275`*^9, 3.9146438156372223`*^9}, {3.9187269588344965`*^9, 
   3.918726959399897*^9}, {3.928222049358026*^9, 3.9282220691916122`*^9}, {
   3.928224631810053*^9, 3.9282246366050386`*^9}, {3.928224678773771*^9, 
   3.9282246873681364`*^9}, {3.9282247407072954`*^9, 3.928224740796352*^9}, {
   3.9282247815953503`*^9, 3.9282247887536173`*^9}, {3.928226713956077*^9, 
   3.9282267181912107`*^9}, {3.9282267937780457`*^9, 3.928226795470036*^9}, {
   3.9282268794321423`*^9, 3.928226879558775*^9}, 3.9282269866339464`*^9, {
   3.92822704741838*^9, 3.928227075931075*^9}, {3.9282271067632723`*^9, 
   3.928227111186165*^9}, {3.92822736496088*^9, 3.928227365883726*^9}, {
   3.928227451579561*^9, 3.928227452845058*^9}, {3.928227541046549*^9, 
   3.9282275436635094`*^9}, {3.9282276075012436`*^9, 3.928227613147975*^9}, {
   3.9282281017678027`*^9, 3.9282281018610497`*^9}},
 CellLabel->
  "In[892]:=",ExpressionUUID->"50fe6860-c173-4edd-aa38-6be638556479"],

Cell[BoxData[
 RowBox[{
  RowBox[{"mask", "=", 
   RowBox[{"Erosion", "[", 
    RowBox[{
     RowBox[{"ImageData", "@", 
      RowBox[{"Binarize", "[", 
       RowBox[{"Image", "@", "maskhalf"}], "]"}]}], ",", "1", ",", 
     RowBox[{"Padding", "->", "0."}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9282229624628935`*^9, 3.9282230428618*^9}, 
   3.9282230783410387`*^9, {3.9282231333738375`*^9, 3.9282231334377956`*^9}, {
   3.928223175266271*^9, 3.928223175336282*^9}},
 CellLabel->
  "In[898]:=",ExpressionUUID->"692fbd37-5859-4ce7-9fbd-90969341847f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"computetime", ",", "multiscalevesselness"}], "}"}], "=", 
   RowBox[{"AbsoluteTiming", "[", 
    RowBox[{"MultiScaleVesselnessExtReg", "[", 
     RowBox[{
      RowBox[{"Re", "[", 
       RowBox[{"Transpose", "[", 
        RowBox[{"osDenoisedErik", ",", 
         RowBox[{"{", 
          RowBox[{"3", ",", "1", ",", "2"}], "}"}]}], "]"}], "]"}], ",", 
      "mask", ",", "\[Xi]vesselness", ",", "\[Zeta]vesselness", ",", 
      "\[Sigma]svesselness", ",", "\[Sigma]avesselness", ",", 
      "\[Sigma]spatialExt", ",", "\[Sigma]angularExt"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", "computetime"}], "Input",
 CellChangeTimes->{{3.914560037445935*^9, 3.914560061926683*^9}, {
  3.9145800458262205`*^9, 3.914580049968794*^9}, {3.9282218773486896`*^9, 
  3.928221880980155*^9}},
 CellLabel->
  "In[899]:=",ExpressionUUID->"3e00d0e9-97fa-4890-b483-45bb5286aaaa"],

Cell[BoxData[
 RowBox[{
  RowBox[{"V", "=", 
   RowBox[{"MergeVesselnessFilters", "[", 
    RowBox[{"multiscalevesselness", "[", 
     RowBox[{"[", 
      RowBox[{"1", ";;", "4"}], "]"}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.915094290472288*^9, 3.915094325392597*^9}, 
   3.915094462027727*^9, {3.928226918099758*^9, 3.9282269420760264`*^9}, 
   3.928227008065879*^9, {3.9282271442077336`*^9, 3.9282271451228914`*^9}, 
   3.9282271907647734`*^9},
 CellLabel->
  "In[901]:=",ExpressionUUID->"081c9be4-7e83-468a-8216-9664fd83a2dd"],

Cell[BoxData[
 RowBox[{"Image3D", "[", 
  RowBox[{
   RowBox[{"Rescale", "[", "V", "]"}], ",", 
   RowBox[{"BoxRatios", "->", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1", ",", "0.5"}], "}"}]}], ",", 
   RowBox[{"ViewPoint", "->", "Left"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.914560624858206*^9, 3.914560625258789*^9}, 
   3.9150943398500576`*^9, {3.928222106251042*^9, 3.9282221152929945`*^9}, {
   3.9282222956236677`*^9, 3.928222318037064*^9}},
 CellLabel->
  "In[902]:=",ExpressionUUID->"79e18c64-9724-451f-b4f1-a7c96ded4671"],

Cell[BoxData[
 RowBox[{"Image", "@", 
  RowBox[{"Rescale", "@", 
   RowBox[{"Map", "[", 
    RowBox[{"Min", ",", 
     RowBox[{"-", "V"}], ",", 
     RowBox[{"{", "2", "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.9150943470827103`*^9, 3.9150943556080575`*^9}, {
  3.919502175967085*^9, 3.919502204648041*^9}},
 CellLabel->
  "In[903]:=",ExpressionUUID->"9c1e0769-c38a-45ad-a038-d890eca42f3b"]
}, Closed]],

Cell[CellGroupData[{

Cell["Compute Cost", "Section",
 CellChangeTimes->{{3.91456012041747*^9, 
  3.914560127867725*^9}},ExpressionUUID->"334556c7-8b96-44fc-a202-\
070508d103d6"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"\[Lambda]", "=", "200"}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Cost", " ", "function", " ", "parameter", " ", "giving", " ", "the", " ",
      "cost", " ", "of", " ", "moving", " ", "outside", " ", "of", " ", "a", 
     " ", "vessel", " ", "relative", " ", "to", " ", "moving", " ", "along", 
     " ", "a", " ", 
     RowBox[{"vessel", ":", " ", 
      RowBox[{
      "Higher", " ", "\[Lambda]", " ", "means", " ", "staying", " ", "on", 
       " ", "vessels", " ", "is", " ", "favourable\|01f389"}]}]}], ",", " ", 
    RowBox[{
    "but", " ", "also", " ", "makes", " ", "the", " ", "cost", " ", 
     "function", " ", "less", " ", "coercive\|01f622"}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"p", "=", "3"}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Cost", " ", "function", " ", "parameter", " ", "of", " ", "the", " ", 
     "power", " ", "to", " ", "which", " ", "the", " ", "vesselness", " ", 
     "is", " ", "taken", " ", "in", " ", "the", " ", "cost", " ", 
     RowBox[{"function", ":", " ", 
      RowBox[{
      "Higher", " ", "p", " ", "means", " ", "noise", " ", "is", " ", 
       "ignored\|01f389"}]}]}], ",", " ", 
    RowBox[{
    "but", " ", "also", " ", "small", " ", "vessels", " ", "with", " ", 
     "relatively", " ", "low", " ", "vesselness", " ", "are", " ", 
     "ignored\|01f622"}]}], " ", "*)"}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.9140565664431143`*^9, 3.9140567376296*^9}, {
   3.914056940266196*^9, 3.914056976443555*^9}, {3.9145803062767773`*^9, 
   3.914580309891176*^9}, 3.9150943618533635`*^9, {3.928224196926531*^9, 
   3.928224197119358*^9}, {3.928224511922016*^9, 3.92822457640655*^9}, {
   3.9282247697175574`*^9, 3.928224770219426*^9}, {3.928225906996088*^9, 
   3.928225907085879*^9}, {3.928228138998041*^9, 3.9282281394634185`*^9}, {
   3.9288327854031744`*^9, 3.928832785673484*^9}, {3.9288328471054754`*^9, 
   3.928832847674814*^9}, {3.92883289464557*^9, 3.928832896222133*^9}, 
   3.928832941723787*^9, 3.928833016148234*^9, 3.9288330651099253`*^9, {
   3.928833407459925*^9, 3.9288334099375067`*^9}, 3.9288344366910815`*^9, 
   3.9288346020604534`*^9, 3.928834852482746*^9, 3.9288354093838205`*^9, 
   3.9289849477211237`*^9, 3.9289855308277144`*^9},
 CellLabel->
  "In[904]:=",ExpressionUUID->"e70abd64-78f3-4511-a942-4e9079748346"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"computetime", ",", "CSE2Thick"}], "}"}], "=", 
   RowBox[{"AbsoluteTiming", "[", 
    RowBox[{"CostFromVesselness", "[", 
     RowBox[{"V", ",", "\[Lambda]", ",", "p"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", "computetime"}], "Input",
 CellChangeTimes->{{3.914560288294434*^9, 3.9145603006596727`*^9}, {
  3.9150943697549005`*^9, 3.9150943754013834`*^9}, {3.9282258414989605`*^9, 
  3.928225842021874*^9}},
 CellLabel->
  "In[906]:=",ExpressionUUID->"aa69c104-9cf3-46d0-a9e2-457e23c11fce"],

Cell[BoxData[
 RowBox[{"Image3D", "[", 
  RowBox[{
   RowBox[{"1", "-", 
    RowBox[{"Transpose", "[", 
     RowBox[{"CSE2Thick", ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "3", ",", "1"}], "}"}]}], "]"}]}], ",", 
   RowBox[{"BoxRatios", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "0.5", ",", "1"}], "}"}]}], ",", 
   RowBox[{"ViewPoint", "\[Rule]", "Top"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.928224130951284*^9, 3.928224145738558*^9}, 
   3.9282258466700172`*^9},
 CellLabel->
  "In[908]:=",ExpressionUUID->"20e269a3-af66-48b0-835c-da5f5c570da0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"CSE2", "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Dilation", "[", 
       RowBox[{"#", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
        RowBox[{"Padding", "->", "\"\<Periodic\>\""}]}], "]"}], "&"}], ",", 
     "CSE2Thick", ",", 
     RowBox[{"{", "2", "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.928225488793958*^9, 3.9282255613269215`*^9}, {
  3.9282257427485247`*^9, 3.928225752807972*^9}, {3.928225850048876*^9, 
  3.9282258552674737`*^9}},
 CellLabel->
  "In[909]:=",ExpressionUUID->"75be2a75-66e7-46c8-88db-abac63985bce"],

Cell[BoxData[
 RowBox[{"Image3D", "[", 
  RowBox[{
   RowBox[{"1", "-", "CSE2"}], ",", 
   RowBox[{"BoxRatios", "->", 
    RowBox[{"{", 
     RowBox[{"1", ",", " ", "1", ",", " ", "0.5"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9282256013773956`*^9, 3.9282256140875053`*^9}, {
  3.928225646179598*^9, 3.928225676296472*^9}, {3.928225860218341*^9, 
  3.928225863795553*^9}},
 CellLabel->
  "In[910]:=",ExpressionUUID->"afef0957-4185-46ce-ab12-27b1b03598ed"],

Cell[BoxData[
 RowBox[{"Image", "[", 
  RowBox[{"Rescale", "[", 
   RowBox[{"Map", "[", 
    RowBox[{"Min", ",", "CSE2", ",", 
     RowBox[{"{", "2", "}"}]}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.914580145539709*^9, 3.9145801687224483`*^9}, {
  3.9195021789674225`*^9, 3.919502209715913*^9}, {3.9282241623224716`*^9, 
  3.928224177673389*^9}, {3.928225821779357*^9, 3.928225829123887*^9}},
 CellLabel->
  "In[911]:=",ExpressionUUID->"8df6339f-7e21-4248-b73d-9d42bac80599"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Thinning and dilation", "Chapter",
 CellChangeTimes->{{3.928552636762683*^9, 
  3.9285526416858*^9}},ExpressionUUID->"4d87868c-72c0-49a5-801e-8a7d380bc9ad"],

Cell[CellGroupData[{

Cell["Prerequisites (Code from Gijs Bellaard)", "Section",
 CellChangeTimes->{{3.862475521745652*^9, 3.862475522612938*^9}, {
  3.862479499974881*^9, 3.862479500140279*^9}, {3.8643626420219593`*^9, 
  3.8643626536287646`*^9}, {3.8902801069141474`*^9, 3.8902801177906246`*^9}, {
  3.8902801629632187`*^9, 
  3.89028016486298*^9}},ExpressionUUID->"373af919-e40b-46f8-ad52-\
25ff1bcde1a6"],

Cell[CellGroupData[{

Cell["Rotating a 3D stack of 2D images", "Subsection",
 CellChangeTimes->{{3.8649719208862734`*^9, 
  3.8649719306224003`*^9}},ExpressionUUID->"7abba3a3-835a-4c68-b75a-\
13a45a6711f7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"List3DInterpolation2D", " ", "=", " ", "\[IndentingNewLine]", 
   RowBox[{"Compile", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"img", ",", "_Real", ",", "3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"y", ",", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"xn", ",", "_Integer"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"yn", ",", "_Integer"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"padding", ",", "_Real"}], "}"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Block", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x0", "=", 
          RowBox[{"Floor", "[", "x", "]"}]}], ",", 
         RowBox[{"y0", "=", 
          RowBox[{"Floor", "[", "y", "]"}]}], ",", 
         RowBox[{"dx", "=", 
          RowBox[{"x", "-", "x0"}]}], ",", 
         RowBox[{"dy", "=", 
          RowBox[{"y", "-", "y0"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Which", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"0", "<", "x0", "<", "xn"}], "\[And]", 
          RowBox[{"0", "<", "y0", "<", "yn"}]}], ",", "\[IndentingNewLine]", 
         "\t", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", "dx"}], ")"}], 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", "dy"}], ")"}], " ", 
              RowBox[{"img", "\[LeftDoubleBracket]", 
               RowBox[{"x0", ",", "y0", ",", "All"}], 
               "\[RightDoubleBracket]"}]}], "+", 
             RowBox[{"dy", " ", 
              RowBox[{"img", "\[LeftDoubleBracket]", 
               RowBox[{"x0", ",", 
                RowBox[{"y0", "+", "1"}], ",", "All"}], 
               "\[RightDoubleBracket]"}]}]}], ")"}]}], "+", 
          RowBox[{"dx", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", "dy"}], ")"}], " ", 
              RowBox[{"img", "\[LeftDoubleBracket]", 
               RowBox[{
                RowBox[{"x0", "+", "1"}], ",", "y0", ",", "All"}], 
               "\[RightDoubleBracket]"}]}], "+", 
             RowBox[{"dy", " ", 
              RowBox[{"img", "\[LeftDoubleBracket]", 
               RowBox[{
                RowBox[{"x0", "+", "1"}], ",", 
                RowBox[{"y0", "+", "1"}], ",", "All"}], 
               "\[RightDoubleBracket]"}]}]}], ")"}]}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"x", "\[Equal]", "xn"}], " ", "\[And]", " ", 
          RowBox[{"0", "<", "y0", "<", "yn"}]}], ",", "\[IndentingNewLine]", 
         "\t", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", "dy"}], ")"}], " ", 
           RowBox[{"img", "\[LeftDoubleBracket]", 
            RowBox[{"x0", ",", "y0", ",", "All"}], 
            "\[RightDoubleBracket]"}]}], "+", 
          RowBox[{"dy", " ", 
           RowBox[{"img", "\[LeftDoubleBracket]", 
            RowBox[{"x0", ",", 
             RowBox[{"y0", "+", "1"}], ",", "All"}], 
            "\[RightDoubleBracket]"}]}]}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"y", "\[Equal]", "yn"}], " ", "\[And]", " ", 
          RowBox[{"0", "<", "x0", "<", "xn"}]}], ",", "\[IndentingNewLine]", 
         "\t", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", "dx"}], ")"}], 
           RowBox[{"img", "\[LeftDoubleBracket]", 
            RowBox[{"x0", ",", "y0", ",", "All"}], 
            "\[RightDoubleBracket]"}]}], "+", 
          RowBox[{"dx", " ", 
           RowBox[{"img", "\[LeftDoubleBracket]", 
            RowBox[{
             RowBox[{"x0", "+", "1"}], ",", "y0", ",", "All"}], 
            "\[RightDoubleBracket]"}]}]}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"x", "\[Equal]", "xn"}], " ", "\[And]", " ", 
          RowBox[{"y", "==", "yn"}]}], ",", "\[IndentingNewLine]", "\t", 
         RowBox[{"img", "\[LeftDoubleBracket]", 
          RowBox[{"x0", ",", "y0", ",", "All"}], "\[RightDoubleBracket]"}], 
         ",", "\[IndentingNewLine]", "True", ",", "\[IndentingNewLine]", "\t", 
         RowBox[{"Table", "[", 
          RowBox[{"padding", ",", 
           RowBox[{"{", 
            RowBox[{"Length", "[", "img", "]"}], "}"}]}], "]"}]}], 
        "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.864971856222364*^9, 3.864971876873952*^9}, {
   3.9061107347562323`*^9, 3.906110794394919*^9}, 3.907228771418393*^9},
 CellLabel->
  "In[912]:=",ExpressionUUID->"66ddff11-de03-45ad-8165-aec28a22698f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"List3DRotate2D", "=", "\[IndentingNewLine]", 
   RowBox[{"Compile", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"img", ",", "_Real", ",", "3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Alpha]", ",", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"x0", ",", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"y0", ",", "_Real"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"padding", ",", "_Real"}], "}"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"With", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"xn", " ", "=", " ", 
          RowBox[{
           RowBox[{"Dimensions", "[", "img", "]"}], "\[LeftDoubleBracket]", 
           "2", "\[RightDoubleBracket]"}]}], ",", " ", 
         RowBox[{"yn", " ", "=", " ", 
          RowBox[{
           RowBox[{"Dimensions", "[", "img", "]"}], "\[LeftDoubleBracket]", 
           "1", "\[RightDoubleBracket]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"s", " ", "=", " ", 
          RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], ",", " ", 
         RowBox[{"c", " ", "=", " ", 
          RowBox[{"Cos", "[", "\[Alpha]", "]"}]}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Table", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"List3DInterpolation2D", "[", 
          RowBox[{"img", ",", 
           RowBox[{"N", "[", 
            RowBox[{
             RowBox[{"c", " ", "x"}], "+", 
             RowBox[{"s", " ", "y"}], "+", "x0"}], "]"}], ",", 
           RowBox[{"N", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "s"}], " ", "x"}], "+", 
             RowBox[{"c", " ", "y"}], "+", "y0"}], "]"}], ",", "xn", ",", 
           "yn", ",", "padding"}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"x", ",", 
           RowBox[{"1", "-", "x0"}], ",", 
           RowBox[{"xn", "-", "x0"}]}], "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"y", ",", 
           RowBox[{"1", "-", "y0"}], ",", 
           RowBox[{"yn", "-", "y0"}]}], "}"}]}], "\[IndentingNewLine]", 
        "]"}]}], "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"List3DInterpolation2D", "[", 
         RowBox[{"_", ",", "_", ",", "_", ",", "_", ",", "_", ",", "_"}], 
         "]"}], ",", "_Real", ",", "1"}], "}"}], "}"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.864971883245599*^9, 3.8649718944660444`*^9}, 
   3.9060304389231205`*^9, {3.906108770523875*^9, 3.9061087811810484`*^9}, {
   3.906108847712948*^9, 3.906108866955908*^9}, {3.906109337532011*^9, 
   3.906109410337713*^9}, {3.9061105629797854`*^9, 3.9061105798277984`*^9}, 
   3.9061106163030396`*^9, {3.90611118334853*^9, 3.9061112121782055`*^9}, {
   3.9061112482564554`*^9, 3.906111254714892*^9}, {3.9061114112648664`*^9, 
   3.90611141246145*^9}, {3.906111450935083*^9, 3.9061114918411846`*^9}, 
   3.906111535351157*^9, {3.906112129428994*^9, 3.9061121455118523`*^9}, {
   3.9061126427219024`*^9, 3.906112647045405*^9}, {3.9061127197720222`*^9, 
   3.9061127214429564`*^9}, {3.9061139415256996`*^9, 3.906113946961727*^9}, {
   3.9061140149391646`*^9, 3.906114040789157*^9}, {3.9072287820529833`*^9, 
   3.907228799653509*^9}, {3.907240308135043*^9, 3.9072403102039137`*^9}, {
   3.910849726291728*^9, 3.9108497356432247`*^9}},
 CellLabel->
  "In[913]:=",ExpressionUUID->"08091653-9256-4f30-9ff5-afd0ca5fe385"]
}, Closed]],

Cell[CellGroupData[{

Cell["Convolution/Correlation Algorithms", "Subsection",
 CellChangeTimes->{{3.864800890142026*^9, 3.864800907547643*^9}, {
  3.865566477840437*^9, 
  3.865566480532665*^9}},ExpressionUUID->"f9d1dac9-8b60-4733-8e4e-\
eaa0c9dcf587"],

Cell[BoxData[
 RowBox[{
  RowBox[{"CyclicTake", "[", 
   RowBox[{
    RowBox[{"a_", "?", "ArrayQ"}], ",", 
    RowBox[{"{", 
     RowBox[{"lower_Integer", ",", "upper_Integer"}], "}"}]}], "]"}], ":=", 
  " ", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", "\t", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"n", "=", 
      RowBox[{"Length", "[", "a", "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
    "\t", 
    RowBox[{"If", "[", "\[IndentingNewLine]", "\t\t", 
     RowBox[{
      RowBox[{"lower", "\[LessEqual]", "upper"}], ",", "\[IndentingNewLine]", 
      "\t\t", 
      RowBox[{"If", "[", "\[IndentingNewLine]", "\t\t\t", 
       RowBox[{
        RowBox[{
         RowBox[{"Quotient", "[", 
          RowBox[{
           RowBox[{"lower", "-", "1"}], ",", "n"}], "]"}], "===", " ", 
         RowBox[{"Quotient", "[", 
          RowBox[{
           RowBox[{"upper", "-", "1"}], ",", "n"}], "]"}]}], ",", 
        "\[IndentingNewLine]", "\t\t\t", 
        RowBox[{"Take", "[", 
         RowBox[{"a", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"Mod", "[", 
              RowBox[{
               RowBox[{"lower", "-", "1"}], ",", "n"}], "]"}], "+", "1"}], 
            ",", 
            RowBox[{
             RowBox[{"Mod", "[", 
              RowBox[{
               RowBox[{"upper", "-", "1"}], ",", "n"}], "]"}], "+", "1"}]}], 
           "}"}]}], "]"}], ",", "\[IndentingNewLine]", "\t\t\t", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"Take", "[", 
           RowBox[{"a", ",", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Mod", "[", 
               RowBox[{
                RowBox[{"-", "lower"}], ",", "n"}], "]"}]}], "-", "1"}]}], 
           "]"}], ",", 
          RowBox[{"Sequence", "@@", 
           RowBox[{"Table", "[", 
            RowBox[{"a", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Quotient", "[", 
                RowBox[{
                 RowBox[{"upper", "-", "1"}], ",", "n"}], "]"}], "-", 
               RowBox[{"Quotient", "[", 
                RowBox[{
                 RowBox[{"lower", "-", "1"}], ",", "n"}], "]"}], "-", "1"}], 
              "}"}]}], "]"}]}], ",", 
          RowBox[{"Take", "[", 
           RowBox[{"a", ",", 
            RowBox[{
             RowBox[{"Mod", "[", 
              RowBox[{
               RowBox[{"upper", "-", "1"}], ",", "n"}], "]"}], "+", "1"}]}], 
           "]"}]}], "]"}]}], "\[IndentingNewLine]", "\t\t", "]"}], ",", 
      "\[IndentingNewLine]", "\t\t", 
      RowBox[{"{", "}"}]}], "\[IndentingNewLine]", "\t", "]"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Code",
 CellChangeTimes->{{3.8649829580480614`*^9, 3.86498295960727*^9}, {
  3.8649832619689074`*^9, 3.8649832924013042`*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"ba179476-e1c0-4e1c-b319-7b74e0bac4c5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"GCorrelate", "[", 
   RowBox[{
    RowBox[{"kernel_", "?", "ArrayQ"}], ",", 
    RowBox[{"bndl_", "?", "ArrayQ"}]}], "]"}], " ", ":=", 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"With", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"kernelCenter", "=", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Dimensions", "[", "kernel", "]"}], "+", "1"}], ")"}], "/",
          "2"}]}], ",", " ", "\[IndentingNewLine]", 
       RowBox[{"kernelRadius", "=", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Dimensions", "[", "kernel", "]"}], "-", "1"}], ")"}], "/",
          "2"}]}], ",", " ", "\[IndentingNewLine]", 
       RowBox[{"bndlHeight", "=", 
        RowBox[{"Length", "[", "bndl", "]"}]}]}], "\[IndentingNewLine]", 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"With", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"rotKernel", " ", "=", " ", 
            RowBox[{"List3DRotate2D", "[", 
             RowBox[{"kernel", ",", 
              RowBox[{"\[Pi]", " ", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"k", "-", "1"}], ")"}], "/", "bndlHeight"}]}], ",", 
              RowBox[{
              "kernelCenter", "\[LeftDoubleBracket]", "2", 
               "\[RightDoubleBracket]"}], ",", 
              RowBox[{
              "kernelCenter", "\[LeftDoubleBracket]", "3", 
               "\[RightDoubleBracket]"}], ",", "0"}], "]"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"sub\[LetterSpace]bndl", " ", "=", 
            RowBox[{"CyclicTake", "[", 
             RowBox[{"bndl", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"k", "-", 
                 RowBox[{"kernelRadius", "[", 
                  RowBox[{"[", "1", "]"}], "]"}]}], ",", 
                RowBox[{"k", "+", 
                 RowBox[{"kernelRadius", "[", 
                  RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}]}], "]"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"klist", " ", "=", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"1", ",", 
                RowBox[{"kernelCenter", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], ",", 
                RowBox[{"kernelCenter", "[", 
                 RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "1"}], ",", 
                RowBox[{"kernelCenter", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], ",", 
                RowBox[{"kernelCenter", "[", 
                 RowBox[{"[", "3", "]"}], "]"}]}], "}"}]}], "}"}]}]}], 
          "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"First", "[", 
          RowBox[{"ListCorrelate", "[", 
           RowBox[{
           "rotKernel", ",", "sub\[LetterSpace]bndl", ",", "klist", " ", ",", 
            "sub\[LetterSpace]bndl", ",", "Times", ",", "Plus"}], "]"}], 
          "]"}]}], "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"k", ",", "1", ",", "bndlHeight"}], "}"}]}], 
      "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}], "/;", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"ArrayDepth", "[", "kernel", "]"}], " ", "===", " ", 
     RowBox[{"ArrayDepth", "[", "bndl", "]"}], " ", "===", "3"}], "  ", "&&", 
    " ", 
    RowBox[{"AllTrue", "[", 
     RowBox[{
      RowBox[{"Dimensions", "[", "kernel", "]"}], ",", "OddQ"}], 
     "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.8617059071138535`*^9, 3.861705946047845*^9}, {
   3.8618742800089235`*^9, 3.8618742834334164`*^9}, 3.861874430702794*^9, {
   3.8649719721014633`*^9, 3.864971972230237*^9}, {3.864977313557308*^9, 
   3.8649773674927087`*^9}, 3.864977580970931*^9, {3.8649781749839435`*^9, 
   3.8649781824027095`*^9}, {3.86497864794627*^9, 3.8649786574693613`*^9}, {
   3.8649790249594765`*^9, 3.8649790345519714`*^9}, 3.8649793228389974`*^9, {
   3.864979365796213*^9, 3.864979371902713*^9}, {3.8649795604911747`*^9, 
   3.8649795646481915`*^9}, {3.86498318725298*^9, 3.8649831994284067`*^9}, {
   3.8649832997624106`*^9, 3.864983336560193*^9}, {3.8649833780585766`*^9, 
   3.864983538641207*^9}, {3.8649835878513575`*^9, 3.8649835961530666`*^9}, {
   3.864983677476456*^9, 3.8649836779846444`*^9}, {3.864983729160086*^9, 
   3.864983765967784*^9}, {3.864983843723313*^9, 3.864983845976979*^9}, 
   3.8649848132192173`*^9, 3.8649848928571835`*^9, {3.865050231792286*^9, 
   3.865050247665106*^9}, {3.8650505374570723`*^9, 3.865050540055498*^9}},
 CellLabel->
  "In[915]:=",ExpressionUUID->"abec1ac0-c250-4201-9c0e-8c30ac7208cb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"GCorrelateMorpho", "[", 
   RowBox[{
    RowBox[{"kernel_", "?", "ArrayQ"}], ",", 
    RowBox[{"bndl_", "?", "ArrayQ"}]}], "]"}], " ", ":=", 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"With", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"kernelCenter", "=", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Dimensions", "[", "kernel", "]"}], "+", "1"}], ")"}], "/",
          "2"}]}], ",", " ", "\[IndentingNewLine]", 
       RowBox[{"kernelRadius", "=", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Dimensions", "[", "kernel", "]"}], "-", "1"}], ")"}], "/",
          "2"}]}], ",", " ", "\[IndentingNewLine]", 
       RowBox[{"bndlHeight", "=", 
        RowBox[{"Length", "[", "bndl", "]"}]}]}], "\[IndentingNewLine]", 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"With", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"rotKernel", " ", "=", " ", 
            RowBox[{"List3DRotate2D", "[", 
             RowBox[{"kernel", ",", 
              RowBox[{"\[Pi]", " ", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"k", "-", "1"}], ")"}], "/", "bndlHeight"}]}], ",", 
              RowBox[{
              "kernelCenter", "\[LeftDoubleBracket]", "2", 
               "\[RightDoubleBracket]"}], ",", 
              RowBox[{
              "kernelCenter", "\[LeftDoubleBracket]", "3", 
               "\[RightDoubleBracket]"}], ",", 
              SuperscriptBox["10", "7"]}], "]"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"sub\[LetterSpace]bndl", " ", "=", 
            RowBox[{"CyclicTake", "[", 
             RowBox[{"bndl", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"k", "-", 
                 RowBox[{"kernelRadius", "[", 
                  RowBox[{"[", "1", "]"}], "]"}]}], ",", 
                RowBox[{"k", "+", 
                 RowBox[{"kernelRadius", "[", 
                  RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}]}], "]"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"klist", " ", "=", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"1", ",", 
                RowBox[{"kernelCenter", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], ",", 
                RowBox[{"kernelCenter", "[", 
                 RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "1"}], ",", 
                RowBox[{"kernelCenter", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], ",", 
                RowBox[{"kernelCenter", "[", 
                 RowBox[{"[", "3", "]"}], "]"}]}], "}"}]}], "}"}]}]}], 
          "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"First", "[", 
          RowBox[{"ListCorrelate", "[", 
           RowBox[{
           "rotKernel", ",", "sub\[LetterSpace]bndl", ",", "klist", " ", ",", 
            "sub\[LetterSpace]bndl", ",", "Plus", ",", "Min"}], "]"}], " ", 
          "]"}]}], "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"k", ",", "1", ",", "bndlHeight"}], "}"}]}], 
      "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}], "/;", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"ArrayDepth", "[", "kernel", "]"}], " ", "===", " ", 
     RowBox[{"ArrayDepth", "[", "bndl", "]"}], " ", "===", "3"}], "  ", "&&", 
    " ", 
    RowBox[{"AllTrue", "[", 
     RowBox[{
      RowBox[{"Dimensions", "[", "kernel", "]"}], ",", "OddQ"}], 
     "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.861874423348833*^9, 3.8618744369724035`*^9}, {
   3.8618762124220195`*^9, 3.8618762573987784`*^9}, {3.8628880230969133`*^9, 
   3.862888049752054*^9}, {3.864795199223553*^9, 3.8647952119194393`*^9}, {
   3.864809337218477*^9, 3.864809341867978*^9}, {3.864810752635583*^9, 
   3.864810756169845*^9}, {3.86481098196518*^9, 3.8648110061149898`*^9}, {
   3.864811347169217*^9, 3.864811352546596*^9}, {3.864812629983091*^9, 
   3.86481270984731*^9}, {3.8648128244701023`*^9, 3.8648128271995897`*^9}, {
   3.864812931610135*^9, 3.8648129425694923`*^9}, {3.864970870144816*^9, 
   3.8649708835061398`*^9}, {3.864970934257557*^9, 3.8649709482884016`*^9}, {
   3.8649719809701977`*^9, 3.8649719909500055`*^9}, {3.8649775292359695`*^9, 
   3.864977531889249*^9}, {3.8649775686421623`*^9, 3.86497757764456*^9}, {
   3.864978587002451*^9, 3.864978587891348*^9}, {3.864979420418297*^9, 
   3.8649794208678694`*^9}, {3.864979541154564*^9, 3.864979543097069*^9}, {
   3.864983497321106*^9, 3.8649835853214827`*^9}, {3.864983684349972*^9, 
   3.864983695704747*^9}, {3.8649837565725822`*^9, 3.864983768995018*^9}, {
   3.8649838529211774`*^9, 3.864983874271291*^9}, 3.8649847988965225`*^9, 
   3.864984894436688*^9, {3.8650502499385233`*^9, 3.8650502524376354`*^9}, {
   3.8650505415210285`*^9, 3.8650505434484434`*^9}},
 CellLabel->
  "In[916]:=",ExpressionUUID->"06bb48eb-fdc1-401a-9bfb-434537f1af48"]
}, Closed]],

Cell[CellGroupData[{

Cell["Orientation Score Transform", "Subsection",
 CellChangeTimes->{{3.6283308046688805`*^9, 3.6283308128694572`*^9}, 
   3.864970958729597*^9, {3.865405427915101*^9, 
   3.8654054308761015`*^9}},ExpressionUUID->"b1b99cb5-33f7-4eed-a1c5-\
c62d7fddd7a7"],

Cell["\<\
All functions directly copied (OrientationScoreTransform is the main function \
of interest)\
\>", "Text",
 CellChangeTimes->{{3.6283308355729156`*^9, 3.6283308660777903`*^9}, 
   3.8660967134315767`*^9},ExpressionUUID->"7d408438-996c-4586-a4e4-\
6af17b4ba670"],

Cell[CellGroupData[{

Cell["Things", "Subsubsection",
 CellChangeTimes->{{3.865405406479128*^9, 
  3.865405407044685*^9}},ExpressionUUID->"51e317f5-70cf-40a3-bc35-\
bfe20bdbc6c9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "PolarCoordinateGridRadial", " ", "returns", " ", "a", " ", "matrix", " ", 
    "in", " ", "which", " ", "each", " ", "element", " ", "gives", " ", "the",
     " ", "corresponding", " ", "radial", " ", "coordinate", " ", 
    RowBox[{"(", 
     RowBox[{
     "with", " ", "the", " ", "origin", " ", "in", " ", "the", " ", "center", 
      " ", "of", " ", "the", " ", "matrix"}]}]}], "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"PolarCoordinateGridRadial", "=", 
     RowBox[{"Compile", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{"size", ",", "_Integer"}], "}"}], "}"}], ",", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Sqrt", "[", 
          RowBox[{
           RowBox[{"x", "^", "2"}], "+", 
           RowBox[{"y", "^", "2"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"size", "-", "1"}], ")"}], "/", "2"}], ")"}]}], "-", 
            RowBox[{"Mod", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"size", "-", "1"}], ")"}], "/", "2"}], ",", "1"}], 
             "]"}]}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"size", "-", "1"}], ")"}], "/", "2"}], "-", 
            RowBox[{"Mod", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"size", "-", "1"}], ")"}], "/", "2"}], ",", "1"}], 
             "]"}]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"y", ",", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"size", "-", "1"}], ")"}], "/", "2"}], ")"}]}], "-", 
            RowBox[{"Mod", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"size", "-", "1"}], ")"}], "/", "2"}], ",", "1"}], 
             "]"}]}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"size", "-", "1"}], ")"}], "/", "2"}], "-", 
            RowBox[{"Mod", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"size", "-", "1"}], ")"}], "/", "2"}], ",", "1"}], 
             "]"}]}]}], "}"}]}], "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "PolarCoordinateGridRadial", " ", "returns", " ", "a", " ", "matrix", " ",
      "in", " ", "which", " ", "each", " ", "element", " ", "gives", " ", 
     "the", " ", "corresponding", " ", "radial", " ", "coordinate", " ", 
     RowBox[{"(", 
      RowBox[{
      "with", " ", "the", " ", "origin", " ", "in", " ", "the", " ", "center",
        " ", "of", " ", "the", " ", "matrix"}]}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"PolarCoordinateGridAngular", "=", 
     RowBox[{"Compile", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{"size", ",", "_Integer"}], "}"}], "}"}], ",", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Arg", "[", 
          RowBox[{"x", "+", 
           RowBox[{"I", " ", "y"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"size", "-", "1"}], ")"}], "/", "2"}], ")"}]}], "-", 
            RowBox[{"Mod", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"size", "-", "1"}], ")"}], "/", "2"}], ",", "1"}], 
             "]"}]}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"size", "-", "1"}], ")"}], "/", "2"}], "-", 
            RowBox[{"Mod", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"size", "-", "1"}], ")"}], "/", "2"}], ",", "1"}], 
             "]"}]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"y", ",", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"size", "-", "1"}], ")"}], "/", "2"}], ")"}]}], "-", 
            RowBox[{"Mod", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"size", "-", "1"}], ")"}], "/", "2"}], ",", "1"}], 
             "]"}]}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"size", "-", "1"}], ")"}], "/", "2"}], "-", 
            RowBox[{"Mod", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"size", "-", "1"}], ")"}], "/", "2"}], ",", "1"}], 
             "]"}]}]}], "}"}]}], "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "MnWindow", " ", "gives", " ", "the", " ", "radial", " ", "windowing", 
     " ", "matrix", " ", "for", " ", "sampling", " ", "the", " ", "fourier", 
     " ", "domain"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"MnWindow", "=", 
     RowBox[{"Compile", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"size", ",", "_Integer"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"n", ",", "_Integer"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Rho]inflection", ",", "_Real"}], "}"}]}], "}"}], ",", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", "\[Rho]Matrix", "}"}], ",", 
         RowBox[{
          RowBox[{"\[Rho]Matrix", "=", 
           RowBox[{"$MachineEpsilon", "+", 
            RowBox[{
             RowBox[{"1", "/", 
              RowBox[{"Sqrt", "[", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"2", "*", 
                  RowBox[{"\[Rho]inflection", "^", "2"}]}], ")"}], "/", 
                RowBox[{"(", 
                 RowBox[{"1", "+", 
                  RowBox[{"2", " ", "n"}]}], ")"}]}], "]"}]}], " ", 
             RowBox[{"PolarCoordinateGridRadial", "[", "size", "]"}]}]}]}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{"Total", "[", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"E", "^", 
               RowBox[{"-", 
                RowBox[{"\[Rho]Matrix", "^", "2"}]}]}], "*", 
              RowBox[{
               RowBox[{"\[Rho]Matrix", "^", 
                RowBox[{"(", 
                 RowBox[{"2", "k"}], ")"}]}], "/", 
               RowBox[{"k", "!"}]}]}], ",", 
             RowBox[{"{", 
              RowBox[{"k", ",", "0", ",", "n"}], "}"}]}], "]"}], "]"}]}]}], 
        "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"k", "!"}], ",", "_Real"}], "}"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "BSplineScalarFunc", " ", "is", " ", "a", " ", "compile", " ", "spline", 
      " ", "basis", " ", "function", " ", "of", " ", "arbitrary", " ", 
      RowBox[{"order", ".", "The"}], " ", "function", " ", "is", " ", 
      "defined", " ", "for", " ", "scalars"}], ",", 
     RowBox[{
     "list", " ", "and", " ", "2", "D", " ", "matrix", " ", "objects"}]}], 
    "*)"}], "\n", 
   RowBox[{
    RowBox[{"BSplineScalarFunc", "=", 
     RowBox[{"Compile", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"n", ",", "_Integer"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "_Real"}], "}"}]}], "}"}], ",", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"function", ",", "intervalCheck"}], "}"}], ",", 
         RowBox[{"Total", "[", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"function", "=", 
              RowBox[{
               RowBox[{"1", "/", 
                RowBox[{"(", 
                 RowBox[{"2", " ", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"n", "+", "1", "-", "1"}], ")"}], "!"}]}], 
                 ")"}]}], " ", 
               RowBox[{"Total", "[", 
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Binomial", "[", 
                    RowBox[{
                    RowBox[{"n", "+", "1"}], ",", "k"}], "]"}], 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"x", "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"n", "+", "1"}], ")"}], "/", "2"}], "-", "k"}], 
                    ")"}], "^", 
                    RowBox[{"(", 
                    RowBox[{"n", "+", "1", "-", "1"}], ")"}]}], " ", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"-", "1"}], ")"}], "^", "k"}], " ", 
                   RowBox[{"Sign", "[", 
                    RowBox[{"i", "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"n", "+", "1"}], ")"}], "/", "2"}], "-", "k"}], 
                    "]"}]}], ",", 
                  RowBox[{"{", 
                   RowBox[{"k", ",", "0", ",", 
                    RowBox[{"n", "+", "1"}]}], "}"}]}], "]"}], "]"}]}]}], ";",
              "\[IndentingNewLine]", 
             RowBox[{"intervalCheck", "=", 
              RowBox[{"Round", "[", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"i", "<", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"n", "+", "1", "-", "1"}], ")"}], "/", "2"}]}], 
                 ",", 
                 RowBox[{
                  RowBox[{"UnitStep", "[", 
                   RowBox[{"x", "-", 
                    RowBox[{"(", 
                    RowBox[{"i", "-", 
                    RowBox[{"1", "/", "2"}], "+", "$MachineEpsilon"}], 
                    ")"}]}], "]"}], "*", 
                  RowBox[{"UnitStep", "[", 
                   RowBox[{"-", 
                    RowBox[{"(", 
                    RowBox[{"x", "-", 
                    RowBox[{"(", 
                    RowBox[{"i", "+", 
                    RowBox[{"1", "/", "2"}]}], ")"}]}], ")"}]}], "]"}]}], ",", 
                 RowBox[{
                  RowBox[{"UnitStep", "[", 
                   RowBox[{"x", "-", 
                    RowBox[{"(", 
                    RowBox[{"i", "-", 
                    RowBox[{"1", "/", "2"}], "+", "$MachineEpsilon"}], 
                    ")"}]}], "]"}], "*", 
                  RowBox[{"UnitStep", "[", 
                   RowBox[{"-", 
                    RowBox[{"(", 
                    RowBox[{"x", "-", 
                    RowBox[{"(", 
                    RowBox[{"i", "+", 
                    RowBox[{"1", "/", "2"}], "-", "$MachineEpsilon"}], 
                    ")"}]}], ")"}]}], "]"}]}]}], "]"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"function", "*", "intervalCheck"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"1", "-", "n", "-", "1"}], ")"}], "/", "2"}], ",", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"n", "-", "1", "+", "1"}], ")"}], "/", "2"}]}], 
             "}"}]}], "]"}], "]"}]}], "]"}]}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"BSplineListFunc", "=", 
     RowBox[{"Compile", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"n", ",", "_Integer"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "_Real", ",", "1"}], "}"}]}], "}"}], ",", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"function", ",", "intervalCheck"}], "}"}], ",", 
         RowBox[{"Total", "[", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"function", "=", 
              RowBox[{
               RowBox[{"1", "/", 
                RowBox[{"(", 
                 RowBox[{"2", " ", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"n", "+", "1", "-", "1"}], ")"}], "!"}]}], 
                 ")"}]}], " ", 
               RowBox[{"Total", "[", 
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Binomial", "[", 
                    RowBox[{
                    RowBox[{"n", "+", "1"}], ",", "k"}], "]"}], 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"x", "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"n", "+", "1"}], ")"}], "/", "2"}], "-", "k"}], 
                    ")"}], "^", 
                    RowBox[{"(", 
                    RowBox[{"n", "+", "1", "-", "1"}], ")"}]}], " ", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"-", "1"}], ")"}], "^", "k"}], " ", 
                   RowBox[{"Sign", "[", 
                    RowBox[{"i", "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"n", "+", "1"}], ")"}], "/", "2"}], "-", "k"}], 
                    "]"}]}], ",", 
                  RowBox[{"{", 
                   RowBox[{"k", ",", "0", ",", 
                    RowBox[{"n", "+", "1"}]}], "}"}]}], "]"}], "]"}]}]}], ";",
              "\[IndentingNewLine]", 
             RowBox[{"intervalCheck", "=", 
              RowBox[{"Round", "[", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"i", "<", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"n", "+", "1", "-", "1"}], ")"}], "/", "2"}]}], 
                 ",", 
                 RowBox[{
                  RowBox[{"UnitStep", "[", 
                   RowBox[{"x", "-", 
                    RowBox[{"(", 
                    RowBox[{"i", "-", 
                    RowBox[{"1", "/", "2"}], "+", "$MachineEpsilon"}], 
                    ")"}]}], "]"}], "*", 
                  RowBox[{"UnitStep", "[", 
                   RowBox[{"-", 
                    RowBox[{"(", 
                    RowBox[{"x", "-", 
                    RowBox[{"(", 
                    RowBox[{"i", "+", 
                    RowBox[{"1", "/", "2"}]}], ")"}]}], ")"}]}], "]"}]}], ",", 
                 RowBox[{
                  RowBox[{"UnitStep", "[", 
                   RowBox[{"x", "-", 
                    RowBox[{"(", 
                    RowBox[{"i", "-", 
                    RowBox[{"1", "/", "2"}], "+", "$MachineEpsilon"}], 
                    ")"}]}], "]"}], "*", 
                  RowBox[{"UnitStep", "[", 
                   RowBox[{"-", 
                    RowBox[{"(", 
                    RowBox[{"x", "-", 
                    RowBox[{"(", 
                    RowBox[{"i", "+", 
                    RowBox[{"1", "/", "2"}], "-", "$MachineEpsilon"}], 
                    ")"}]}], ")"}]}], "]"}]}]}], "]"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"function", "*", "intervalCheck"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"1", "-", "n", "-", "1"}], ")"}], "/", "2"}], ",", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"n", "-", "1", "+", "1"}], ")"}], "/", "2"}]}], 
             "}"}]}], "]"}], "]"}]}], "]"}]}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"BSplineMatrixFunc", "=", 
     RowBox[{"Compile", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"n", ",", "_Integer"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "_Real", ",", "2"}], "}"}]}], "}"}], ",", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"function", ",", "intervalCheck"}], "}"}], ",", 
         RowBox[{"Total", "[", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"function", "=", 
              RowBox[{
               RowBox[{"1", "/", 
                RowBox[{"(", 
                 RowBox[{"2", " ", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"n", "+", "1", "-", "1"}], ")"}], "!"}]}], 
                 ")"}]}], " ", 
               RowBox[{"Total", "[", 
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Binomial", "[", 
                    RowBox[{
                    RowBox[{"n", "+", "1"}], ",", "k"}], "]"}], 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"x", "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"n", "+", "1"}], ")"}], "/", "2"}], "-", "k"}], 
                    ")"}], "^", 
                    RowBox[{"(", 
                    RowBox[{"n", "+", "1", "-", "1"}], ")"}]}], " ", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"-", "1"}], ")"}], "^", "k"}], " ", 
                   RowBox[{"Sign", "[", 
                    RowBox[{"i", "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"n", "+", "1"}], ")"}], "/", "2"}], "-", "k"}], 
                    "]"}]}], ",", 
                  RowBox[{"{", 
                   RowBox[{"k", ",", "0", ",", 
                    RowBox[{"n", "+", "1"}]}], "}"}]}], "]"}], "]"}]}]}], ";",
              "\[IndentingNewLine]", 
             RowBox[{"intervalCheck", "=", 
              RowBox[{"Round", "[", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"i", "<", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"n", "+", "1", "-", "1"}], ")"}], "/", "2"}]}], 
                 ",", 
                 RowBox[{
                  RowBox[{"UnitStep", "[", 
                   RowBox[{"x", "-", 
                    RowBox[{"(", 
                    RowBox[{"i", "-", 
                    RowBox[{"1", "/", "2"}], "+", "$MachineEpsilon"}], 
                    ")"}]}], "]"}], "*", 
                  RowBox[{"UnitStep", "[", 
                   RowBox[{"-", 
                    RowBox[{"(", 
                    RowBox[{"x", "-", 
                    RowBox[{"(", 
                    RowBox[{"i", "+", 
                    RowBox[{"1", "/", "2"}]}], ")"}]}], ")"}]}], "]"}]}], ",", 
                 RowBox[{
                  RowBox[{"UnitStep", "[", 
                   RowBox[{"x", "-", 
                    RowBox[{"(", 
                    RowBox[{"i", "-", 
                    RowBox[{"1", "/", "2"}], "+", "$MachineEpsilon"}], 
                    ")"}]}], "]"}], "*", 
                  RowBox[{"UnitStep", "[", 
                   RowBox[{"-", 
                    RowBox[{"(", 
                    RowBox[{"x", "-", 
                    RowBox[{"(", 
                    RowBox[{"i", "+", 
                    RowBox[{"1", "/", "2"}], "-", "$MachineEpsilon"}], 
                    ")"}]}], ")"}]}], "]"}]}]}], "]"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"function", "*", "intervalCheck"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"1", "-", "n", "-", "1"}], ")"}], "/", "2"}], ",", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"n", "-", "1", "+", "1"}], ")"}], "/", "2"}]}], 
             "}"}]}], "]"}], "]"}]}], "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "WindowGauss", " ", "retuns", " ", "the", " ", "spatial", " ", "Gauss", 
     " ", "envelope"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"WindowGauss", "=", 
     RowBox[{"Compile", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"size", ",", "_Integer"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Sigma]s", ",", "_Real"}], "}"}]}], "}"}], ",", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"E", "^", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"x", "^", "2"}], "/", 
               RowBox[{"(", 
                RowBox[{"2", 
                 RowBox[{"\[Sigma]s", "^", "2"}]}], ")"}]}], ")"}]}], "-", 
            RowBox[{
             RowBox[{"y", "^", "2"}], "/", 
             RowBox[{"(", 
              RowBox[{"2", 
               RowBox[{"\[Sigma]s", "^", "2"}]}], ")"}]}]}], ")"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"size", "-", "1"}], ")"}], "/", "2"}], ")"}]}], "-", 
            RowBox[{"Mod", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"size", "-", "1"}], ")"}], "/", "2"}], ",", "1"}], 
             "]"}]}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"size", "-", "1"}], ")"}], "/", "2"}], "-", 
            RowBox[{"Mod", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"size", "-", "1"}], ")"}], "/", "2"}], ",", "1"}], 
             "]"}]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"y", ",", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"size", "-", "1"}], ")"}], "/", "2"}], ")"}]}], "-", 
            RowBox[{"Mod", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"size", "-", "1"}], ")"}], "/", "2"}], ",", "1"}], 
             "]"}]}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"size", "-", "1"}], ")"}], "/", "2"}], "-", 
            RowBox[{"Mod", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"size", "-", "1"}], ")"}], "/", "2"}], ",", "1"}], 
             "]"}]}]}], "}"}]}], "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "CakeWaveletStackFourier", " ", "constructs", " ", "the", " ", "cake", 
     " ", "wavelets", " ", "in", " ", "the", " ", "Fourier", " ", "domain", 
     " ", 
     RowBox[{"(", 
      RowBox[{
      "note", " ", "that", " ", "windowing", " ", "in", " ", "the", " ", 
       "spatial", " ", "domain", " ", "is", " ", "still", " ", "required", 
       " ", "after", " ", "this"}]}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"CakeWaveletStackFourier", "=", 
     RowBox[{"Compile", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"size", ",", "_Integer"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"s\[CurlyPhi]", ",", "_Real"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"kspline", ",", "_Integer"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"q", ",", "_Integer"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Rho]Inflection", ",", "_Real"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"kMn", ",", "_Integer"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"matrixCoordinatesQ", ",", 
           RowBox[{"True", "|", "False"}]}], "}"}]}], "}"}], ",", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"mnWindow", ",", "angleGrid"}], "}"}], ",", 
         RowBox[{
          RowBox[{"mnWindow", "=", 
           RowBox[{"MnWindow", "[", 
            RowBox[{"size", ",", "kMn", ",", "\[Rho]Inflection"}], "]"}]}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{"angleGrid", "=", 
           RowBox[{"PolarCoordinateGridAngular", "[", "size", "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"mnWindow", "*", 
             RowBox[{"BSplineMatrixFunc", "[", 
              RowBox[{"kspline", ",", 
               RowBox[{"If", "[", 
                RowBox[{"matrixCoordinatesQ", ",", 
                 RowBox[{
                  RowBox[{"Mod", "[", 
                   RowBox[{
                    RowBox[{"angleGrid", "-", "\[Theta]", "-", 
                    RowBox[{"\[Pi]", "/", "2"}]}], ",", 
                    RowBox[{"2", "\[Pi]"}], ",", 
                    RowBox[{"-", "\[Pi]"}]}], "]"}], "/", "s\[CurlyPhi]"}], 
                 ",", 
                 RowBox[{
                  RowBox[{"Mod", "[", 
                   RowBox[{
                    RowBox[{"angleGrid", "+", "\[Theta]", "+", "\[Pi]"}], ",", 
                    RowBox[{"2", "\[Pi]"}], ",", 
                    RowBox[{"-", "\[Pi]"}]}], "]"}], "/", "s\[CurlyPhi]"}]}], 
                "]"}]}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"\[Theta]", ",", "\[Pi]", ",", 
              RowBox[{
               RowBox[{"2", "\[Pi]"}], "-", 
               RowBox[{"s\[CurlyPhi]", "/", "q"}]}], ",", 
              RowBox[{"(", 
               RowBox[{"s\[CurlyPhi]", "/", "q"}], ")"}]}], "}"}]}], 
           "]"}]}]}], "]"}]}], "]"}]}], ";"}], "\n", 
   RowBox[{"(*", 
    RowBox[{
    "ErfSet", " ", "retuns", " ", "a", " ", "set", " ", "of", " ", "2", "D", 
     " ", "error", " ", 
     RowBox[{"functions", ".", "This"}], " ", "function", " ", "is", " ", 
     "used", " ", "to", " ", "cut", " ", "the", " ", "wavelets", " ", "in", 
     " ", "two", " ", 
     RowBox[{"(", 
      RowBox[{"in", " ", "the", " ", "spatial", " ", "domain"}], ")"}]}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ErfSet", "=", 
     RowBox[{"Compile", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"size", ",", "_Real"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"No", ",", "_Integer"}], "}"}]}], "}"}], ",", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", "d\[Theta]", "}"}], ",", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"1", "/", "2"}], " ", 
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"Erf", "[", 
                 RowBox[{
                  RowBox[{"x", " ", 
                   RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "i"}], ")"}], " ", "\[Pi]"}], 
                    ")"}], "/", "No"}], "]"}]}], "+", 
                  RowBox[{"y", " ", 
                   RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "i"}], ")"}], " ", "\[Pi]"}], 
                    ")"}], "/", "No"}], "]"}]}]}], "]"}]}], ")"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"x", ",", 
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"size", "-", "1"}], ")"}], "/", "2"}], ")"}]}], 
                "-", 
                RowBox[{"Mod", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"size", "-", "1"}], ")"}], "/", "2"}], ",", "1"}],
                  "]"}]}], ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"size", "-", "1"}], ")"}], "/", "2"}], "-", 
                RowBox[{"Mod", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"size", "-", "1"}], ")"}], "/", "2"}], ",", "1"}],
                  "]"}]}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"y", ",", 
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"size", "-", "1"}], ")"}], "/", "2"}], ")"}]}], 
                "-", 
                RowBox[{"Mod", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"size", "-", "1"}], ")"}], "/", "2"}], ",", "1"}],
                  "]"}]}], ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"size", "-", "1"}], ")"}], "/", "2"}], "-", 
                RowBox[{"Mod", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"size", "-", "1"}], ")"}], "/", "2"}], ",", "1"}],
                  "]"}]}]}], "}"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", "No"}], "}"}]}], "]"}]}], "]"}]}], 
      "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.6283308413389482`*^9, 3.6283308429780636`*^9}, {
   3.6361849439838905`*^9, 3.636184981626449*^9}, {3.6361977951105614`*^9, 
   3.636197800991724*^9}, 3.638091605120901*^9, {3.6380939495648823`*^9, 
   3.638093969863186*^9}, {3.8643635898151903`*^9, 3.864363598291545*^9}, {
   3.8643636619198575`*^9, 3.864363701169103*^9}, {3.865399041704276*^9, 
   3.865399081730671*^9}, 3.865399273888098*^9, {3.8653995902629833`*^9, 
   3.865399590364056*^9}, {3.8653996458094053`*^9, 3.865399645898638*^9}, {
   3.86539967876698*^9, 3.8653996864659476`*^9}, {3.8654048827071676`*^9, 
   3.8654049355950794`*^9}, {3.8654049973960333`*^9, 
   3.8654050271628833`*^9}, {3.8654050737085752`*^9, 
   3.8654050998248744`*^9}, {3.8654052318784084`*^9, 3.865405274788109*^9}, {
   3.865405401755903*^9, 3.865405411989806*^9}},
 CellLabel->
  "In[917]:=",ExpressionUUID->"c4e34844-1f09-4d06-92dc-eba04949b5b6"]
}, Open  ]],

Cell[CellGroupData[{

Cell["CakeWaveletStack", "Subsubsection",
 CellChangeTimes->{
  3.865405217389065*^9},ExpressionUUID->"37f2ac85-f627-48d9-be6a-\
3ac1f94ab3c9"],

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{
   RowBox[{
    RowBox[{"CakeWaveletStack", "::", "usage"}], "=", 
    "\"\<CakeWaveletStack[size,s\[CurlyPhi]] returns the set \n\tof rotated \
wavelets with standard paramters (see Options[CakeWaveletStack]).\n\tThe \
kernel stack has dimensions No x size x size, where No = \
\\!\\(\\*FractionBox[\\(s\[CurlyPhi]\\), \\(periodicity\\)]\\). \n\tBy \
default periodicity = \[Pi], meaning that the wavelets are constructed \n\t\
from 0 to \[Pi]. Parameter s\[CurlyPhi] specifies the angular resolution: \n\t\
the number of kernels per \[Pi] radians.\n\nOther parameters can be adjusted \
through the options or by calling the function \n\tas follows:\n \n\
CakeWaveletStack[size,s\[CurlyPhi],kSpline,q,periodicity,\[Rho]Inflection,kMn,\
\[Sigma]s,matrixCoordinatesQ].\>\""}], ";"}]}]], "Code",
 CellLabel->"In[4]:=",ExpressionUUID->"999e65cc-94ca-43d3-906b-b56ac973861d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "CakeWaveletStack", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\"\<SplineOrder\>\"", "\[Rule]", "3"}], ",", 
     RowBox[{"\"\<AngularSubSampleRate\>\"", "\[Rule]", "1"}], ",", 
     RowBox[{"\"\<Periodicity\>\"", "\[Rule]", "\[Pi]"}], ",", 
     RowBox[{"\"\<InflectionPoint\>\"", "\[Rule]", "\"\<Automatic\>\""}], ",", 
     RowBox[{"\"\<MnOrder\>\"", "\[Rule]", "8"}], ",", 
     RowBox[{"\"\<GaussianWindowSigma\>\"", "\[Rule]", "\"\<Automatic\>\""}], 
     ",", 
     RowBox[{"\"\<InflectionPoint\>\"", "\[Rule]", "\"\<Automatic\>\""}], ",", 
     RowBox[{"\"\<CoordinateSystem\>\"", "\[Rule]", "\"\<Matrix\>\""}], ",", 
     RowBox[{"\"\<SingleVsDoubleSided\>\"", "\[Rule]", "\"\<Double\>\""}]}], 
    "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6283308413389482`*^9, 3.6283308429780636`*^9}, {
   3.6361849439838905`*^9, 3.636184981626449*^9}, {3.6361977951105614`*^9, 
   3.636197800991724*^9}, 3.638091605120901*^9, {3.6380939495648823`*^9, 
   3.638093969863186*^9}, {3.8643635898151903`*^9, 3.864363598291545*^9}, {
   3.8643636619198575`*^9, 3.864363701169103*^9}, {3.865399041704276*^9, 
   3.865399081730671*^9}, 3.865399273888098*^9, {3.8653995902629833`*^9, 
   3.865399590364056*^9}, {3.8653996458094053`*^9, 3.865399645898638*^9}, {
   3.86539967876698*^9, 3.8653996864659476`*^9}, {3.8654048827071676`*^9, 
   3.8654049355950794`*^9}, {3.8654049973960333`*^9, 
   3.8654050271628833`*^9}, {3.8654050737085752`*^9, 3.865405108956499*^9}, {
   3.8654052125598626`*^9, 3.865405213778182*^9}, {3.8654053667387934`*^9, 
   3.8654053700271606`*^9}},
 CellLabel->
  "In[927]:=",ExpressionUUID->"11e04f98-237b-4f69-8475-9e50ee51cc5b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Function", " ", "definition", " ", "for", " ", "direct", " ", "options", 
    " ", "input"}], "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"CakeWaveletStack", "[", 
     RowBox[{
     "size_", ",", "s\[CurlyPhi]_", ",", "kSpline_", ",", "q_", ",", 
      "periodicity_", ",", "\[Rho]Inflection_", ",", "kMn_", ",", 
      "\[Sigma]s_", ",", "matrixCoordinatesQ_", ",", "singleOrDouble_"}], 
     "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"cakeF", ",", "cakeIF", ",", "window", ",", "cake"}], "}"}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"cakeF", "=", 
        RowBox[{"CakeWaveletStackFourier", "[", 
         RowBox[{
         "size", ",", "s\[CurlyPhi]", ",", "kSpline", ",", "q", ",", 
          "\[Rho]Inflection", ",", "kMn", ",", "matrixCoordinatesQ"}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
          RowBox[{"cakeF", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", 
             RowBox[{
              RowBox[{"Ceiling", "[", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"size", "-", "1"}], ")"}], "/", "2"}], "]"}], "+", 
              "2"}], ",", 
             RowBox[{
              RowBox[{"Ceiling", "[", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"size", "-", "1"}], ")"}], "/", "2"}], "]"}], "+", 
              "2"}]}], "]"}], "]"}], "=", 
          RowBox[{"0", "*", 
           RowBox[{"s\[CurlyPhi]", "/", "periodicity"}]}]}], ";"}], 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{
          "The", " ", "central", " ", "frequency", " ", "overlaps", " ", 
           "with", " ", "all", " ", "rotated", " ", "kernels"}], ",", 
          RowBox[{
          "it", " ", "should", " ", "still", " ", "ad", " ", "up", " ", "to", 
           " ", "1"}]}], "*)"}], "*)"}], 
       RowBox[{"s", "=", "2"}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"cakeF", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", 
           RowBox[{
            RowBox[{
             RowBox[{"Ceiling", "[", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"size", "-", "1"}], ")"}], "/", "2"}], "]"}], "+", 
             "1", "-", "s"}], ";;", 
            RowBox[{
             RowBox[{"Ceiling", "[", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"size", "-", "1"}], ")"}], "/", "2"}], "]"}], "+", 
             "1", "+", "s"}]}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"Ceiling", "[", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"size", "-", "1"}], ")"}], "/", "2"}], "]"}], "+", 
             "1", "-", "s"}], ";;", 
            RowBox[{
             RowBox[{"Ceiling", "[", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"size", "-", "1"}], ")"}], "/", "2"}], "]"}], "+", 
             "1", "+", "s"}]}]}], "]"}], "]"}], "=", 
        RowBox[{"s\[CurlyPhi]", "/", "periodicity"}]}], ";", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
         "The", " ", "central", " ", "frequency", " ", "overlaps", " ", 
          "with", " ", "all", " ", "rotated", " ", "kernels"}], ",", 
         RowBox[{
         "it", " ", "should", " ", "still", " ", "ad", " ", "up", " ", "to", 
          " ", "1"}]}], "*)"}], 
       RowBox[{"cakeIF", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"RotateRight", "[", 
           RowBox[{
            RowBox[{"InverseFourier", "[", 
             RowBox[{"RotateLeft", "[", 
              RowBox[{"#", ",", 
               RowBox[{"Floor", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"size", ",", "size"}], "}"}], "/", "2"}], "]"}]}], 
              "]"}], "]"}], ",", 
            RowBox[{"Floor", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"size", ",", "size"}], "}"}], "/", "2"}], "]"}]}], 
           "]"}], "&"}], "/@", "cakeF"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"window", "=", 
        RowBox[{"WindowGauss", "[", 
         RowBox[{"size", ",", "\[Sigma]s"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"cake", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"window", "*", "#"}], "&"}], "/@", "cakeIF"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"periodicity", "\[Equal]", 
          RowBox[{"2", "\[Pi]"}]}], ",", 
         RowBox[{
          RowBox[{"cake", "=", 
           RowBox[{"Flatten", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"cake", ",", 
               RowBox[{"Conjugate", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Reverse", "[", 
                   RowBox[{"Reverse", "[", "#", "]"}], "]"}], "&"}], "/@", 
                 "cake"}], "]"}]}], "}"}], ",", "1"}], "]"}]}], ";"}]}], 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"singleOrDouble", "\[Equal]", "\"\<Single\>\""}], ",", 
         RowBox[{
          RowBox[{"cake", "=", 
           RowBox[{"cake", "*", 
            RowBox[{"ErfSet", "[", 
             RowBox[{"size", ",", 
              RowBox[{"q", "*", 
               RowBox[{"periodicity", "/", "s\[CurlyPhi]"}]}]}], "]"}]}]}], 
          ";"}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "cake", "]"}]}]}], "]"}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.6283308413389482`*^9, 3.6283308429780636`*^9}, {
   3.6361849439838905`*^9, 3.636184981626449*^9}, {3.6361977951105614`*^9, 
   3.636197800991724*^9}, 3.638091605120901*^9, {3.6380939495648823`*^9, 
   3.638093969863186*^9}, {3.8643635898151903`*^9, 3.864363598291545*^9}, {
   3.8643636619198575`*^9, 3.864363701169103*^9}, {3.865399041704276*^9, 
   3.865399081730671*^9}, 3.865399273888098*^9, {3.8653995902629833`*^9, 
   3.865399590364056*^9}, {3.8653996458094053`*^9, 3.865399645898638*^9}, {
   3.86539967876698*^9, 3.8653996864659476`*^9}, {3.8654048827071676`*^9, 
   3.8654049355950794`*^9}, {3.8654049973960333`*^9, 
   3.8654050271628833`*^9}, {3.8654050737085752`*^9, 3.865405108956499*^9}, {
   3.8654052125598626`*^9, 3.865405213778182*^9}, {3.8654053667387934`*^9, 
   3.8654053700271606`*^9}},
 CellLabel->
  "In[928]:=",ExpressionUUID->"59ca5700-f49c-41b7-a99b-f69a6bf5bde0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Function", " ", "definition", " ", "that", " ", "uses", " ", "the", " ", 
    "OptionsPattern"}], "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"CakeWaveletStack", "[", 
     RowBox[{"size_", ",", "s\[CurlyPhi]_", ",", 
      RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "kSpline", ",", "q", ",", "periodicity", ",", "\[Rho]Inflection", ",", 
        "kMn", ",", "\[Sigma]s", ",", "matrixCoordinatesQ", ",", "cakeStack", 
        ",", "singleOrDouble"}], "}"}], ",", 
      RowBox[{"(*", "***************************)"}], 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"**", "**", "**", "**", "**", "Check"}], " ", "Parameters"}], 
       "*)"}], 
      RowBox[{
       RowBox[{"kSpline", "=", 
        RowBox[{"OptionValue", "[", "\"\<SplineOrder\>\"", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"q", "=", 
        RowBox[{"OptionValue", "[", "\"\<AngularSubSampleRate\>\"", "]"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"periodicity", "=", 
        RowBox[{"OptionValue", "[", "\"\<Periodicity\>\"", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Switch", "[", 
        RowBox[{
         RowBox[{"OptionValue", "[", "\"\<InflectionPoint\>\"", "]"}], ",", 
         "\"\<Automatic\>\"", ",", 
         RowBox[{
          RowBox[{"\[Rho]Inflection", "=", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"size", "-", "1"}], ")"}], "/", "2"}], " ", "0.8"}]}], 
          ";"}], ",", "_", ",", 
         RowBox[{"\[Rho]Inflection", "=", 
          RowBox[{"OptionValue", "[", "\"\<InflectionPoint\>\"", "]"}]}]}], 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"kMn", "=", 
        RowBox[{"OptionValue", "[", "\"\<MnOrder\>\"", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Switch", "[", 
        RowBox[{
         RowBox[{"OptionValue", "[", "\"\<GaussianWindowSigma\>\"", "]"}], 
         ",", "\"\<Automatic\>\"", ",", 
         RowBox[{
          RowBox[{"\[Sigma]s", "=", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"size", "-", "1"}], ")"}], "/", "4"}]}], ";"}], ",", "_",
          ",", 
         RowBox[{"\[Sigma]s", "=", 
          RowBox[{
          "OptionValue", "[", "\"\<GaussianWindowSigma\>\"", "]"}]}]}], "]"}],
        ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"OptionValue", "[", "\"\<CoordinateSystem\>\"", "]"}], 
          "\[Equal]", "\"\<Matrix\>\""}], ",", 
         RowBox[{"matrixCoordinatesQ", "=", "True"}], ",", 
         RowBox[{"matrixCoordinatesQ", "=", "False"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"singleOrDouble", "=", 
        RowBox[{"OptionValue", "[", "\"\<SingleVsDoubleSided\>\"", "]"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"(*", "**************************)"}], 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"**", "**", "**", "**", "**", "Construct"}], " ", "Stack"}], 
        "*)"}], 
       RowBox[{"cakeStack", "=", 
        RowBox[{"CakeWaveletStack", "[", 
         RowBox[{
         "size", ",", "s\[CurlyPhi]", ",", "kSpline", ",", "q", ",", 
          "periodicity", ",", "\[Rho]Inflection", ",", "kMn", ",", 
          "\[Sigma]s", ",", "matrixCoordinatesQ", ",", "singleOrDouble"}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "cakeStack", "]"}]}]}], "]"}]}], 
   ";"}]}]], "Input",
 CellChangeTimes->{{3.6283308413389482`*^9, 3.6283308429780636`*^9}, {
   3.6361849439838905`*^9, 3.636184981626449*^9}, {3.6361977951105614`*^9, 
   3.636197800991724*^9}, 3.638091605120901*^9, {3.6380939495648823`*^9, 
   3.638093969863186*^9}, {3.8643635898151903`*^9, 3.864363598291545*^9}, {
   3.8643636619198575`*^9, 3.864363701169103*^9}, {3.865399041704276*^9, 
   3.865399081730671*^9}, 3.865399273888098*^9, {3.8653995902629833`*^9, 
   3.865399590364056*^9}, {3.8653996458094053`*^9, 3.865399645898638*^9}, {
   3.86539967876698*^9, 3.8653996864659476`*^9}, {3.8654048827071676`*^9, 
   3.8654049355950794`*^9}, {3.8654049973960333`*^9, 
   3.8654050271628833`*^9}, {3.8654050737085752`*^9, 3.865405108956499*^9}, {
   3.8654052125598626`*^9, 3.865405213778182*^9}, 3.8654053667387934`*^9},
 CellLabel->
  "In[929]:=",ExpressionUUID->"953afee7-8380-4e30-93b3-a582a446235f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["WaveletTransform2D", "Subsubsection",
 CellChangeTimes->{{3.8654051807238235`*^9, 
  3.865405186424452*^9}},ExpressionUUID->"c7710181-e938-4fcf-bc4e-\
fc6e3d0c00c3"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"WaveletTransform2D", "::", "usage"}], "=", 
   "\"\<WaveletTransform2D[kernelStack,im] correlates each \n\tkernel with \
the image. If the kernel dimensions and image dimensions \n\tcoincide, \
correlation is done using (conjugate) Fourier multiplication, else\n\t it is \
done using correlation.\>\""}], ";"}]], "Code",
 CellChangeTimes->{{3.865405280236247*^9, 3.8654052815995903`*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"034faaf6-2477-4f04-97f2-f1005f00edc5"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"WaveletTransform2D", "[", 
    RowBox[{"kernels_", ",", "im_", ",", 
     RowBox[{"fourierQ_", ":", "1"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "imF", ",", "kernelsF", ",", "os", ",", "dimkernelx1", ",", 
       "dimkernely1", ",", "dimkernelx2", ",", "dimkernely2"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Dimensions", "[", "kernels", "]"}], "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"-", "2"}], ";;", 
             RowBox[{"-", "1"}]}], "]"}], "]"}], "\[Equal]", 
          RowBox[{"Dimensions", "[", "im", "]"}]}], "&&", 
         RowBox[{"fourierQ", "\[Equal]", "1"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"Using", " ", "the", " ", "Fourier", " ", "transform"}], 
         "*)"}], "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"imF", "=", 
          RowBox[{"Fourier", "[", "im", "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"kernelsF", "=", 
          RowBox[{
           RowBox[{
            RowBox[{"Fourier", "[", 
             RowBox[{"Reverse", "[", 
              RowBox[{"#", ",", 
               RowBox[{"{", 
                RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}], "&"}], "/@", 
           "kernels"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"os", "=", 
          RowBox[{
           RowBox[{
            RowBox[{"RotateRight", "[", 
             RowBox[{
              RowBox[{"InverseFourier", "[", 
               RowBox[{"#", "*", "imF"}], "]"}], ",", 
              RowBox[{"Ceiling", "[", 
               RowBox[{"0.1", "+", 
                RowBox[{
                 RowBox[{"Dimensions", "[", "im", "]"}], "/", "2"}]}], 
               "]"}]}], "]"}], "&"}], "/@", "kernelsF"}]}], ";"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"Using", " ", "Correlation"}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"dimkernelx1", ",", "dimkernely1"}], "}"}], "=", 
          RowBox[{
           RowBox[{
            RowBox[{"Dimensions", "[", 
             RowBox[{"kernels", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}], "/", "2"}], "//", 
           "Ceiling"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"dimkernelx2", ",", "dimkernely2"}], "}"}], "=", 
          RowBox[{"Dimensions", "[", 
           RowBox[{"kernels", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"EvenQ", "[", "dimkernelx2", "]"}], ",", 
           RowBox[{"dimkernelx2", "=", 
            RowBox[{
             RowBox[{"dimkernelx2", "/", "2"}], "+", "1"}]}], ",", 
           RowBox[{"dimkernelx2", "=", 
            RowBox[{
             RowBox[{"dimkernelx2", "/", "2"}], "//", "Ceiling"}]}]}], "]"}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"EvenQ", "[", "dimkernely2", "]"}], ",", 
           RowBox[{"dimkernely2", "=", 
            RowBox[{
             RowBox[{"dimkernely2", "/", "2"}], "+", "1"}]}], ",", 
           RowBox[{"dimkernely2", "=", 
            RowBox[{
             RowBox[{"dimkernely2", "/", "2"}], "//", "Ceiling"}]}]}], "]"}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"os", "=", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"ListCorrelate", "[", 
             RowBox[{
              RowBox[{"kernels", "[", 
               RowBox[{"[", "i", "]"}], "]"}], ",", "im", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "dimkernelx1"}], ",", 
                  RowBox[{"-", "dimkernely1"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"dimkernelx2", ",", "dimkernely2"}], "}"}]}], 
               "}"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", 
              RowBox[{"Length", "[", "kernels", "]"}], ",", "1"}], "}"}]}], 
           "]"}]}]}]}], "\[IndentingNewLine]", "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "os", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.6283308413389482`*^9, 3.6283308429780636`*^9}, {
   3.6361849439838905`*^9, 3.636184981626449*^9}, {3.6361977951105614`*^9, 
   3.636197800991724*^9}, 3.638091605120901*^9, {3.6380939495648823`*^9, 
   3.638093969863186*^9}, {3.8643635898151903`*^9, 3.864363598291545*^9}, {
   3.8643636619198575`*^9, 3.864363701169103*^9}, {3.865399041704276*^9, 
   3.865399081730671*^9}, 3.865399273888098*^9, {3.8653995902629833`*^9, 
   3.865399590364056*^9}, {3.8653996458094053`*^9, 3.865399645898638*^9}, {
   3.86539967876698*^9, 3.8653996864659476`*^9}, {3.8654048827071676`*^9, 
   3.8654049355950794`*^9}, {3.8654049973960333`*^9, 
   3.8654050271628833`*^9}, {3.8654050737085752`*^9, 
   3.8654051209390793`*^9}, {3.8654051887476826`*^9, 3.8654051913608456`*^9}},
 CellLabel->
  "In[931]:=",ExpressionUUID->"3a3cda3f-076c-4a2f-908c-d5a3ea9aff29"]
}, Open  ]],

Cell[CellGroupData[{

Cell["OrientationScoreTransform", "Subsubsection",
 CellChangeTimes->{{3.865405167994972*^9, 3.865405170728138*^9}, {
  3.8660967134761677`*^9, 
  3.866096726170039*^9}},ExpressionUUID->"67f9cfa9-902a-45dd-90f4-\
5b8864f4e4be"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"OrientationScoreTransform", "::", "usage"}], "=", 
   "\"\<OrientationScoreTransform[image, s\[CurlyPhi]] \n\tconstructs an \
orientation score from the image using cake wavelets with \n\tdefault \
paramters (see Options[OrientationScoreTransform] and \n\t?CakeWaveletStack). \
By default this is done through Fourier domain \n\tmultiplication, unless it \
is specified (by using the options) otherwise.\>\""}], ";"}]], "Code",
 CellChangeTimes->{
  3.8654052702852316`*^9, {3.866096713481202*^9, 3.866096726176039*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"baa2ea06-d26f-4e05-a16b-d400f08a1fa1"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "OrientationScoreTransform", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\"\<WaveletSize\>\"", "\[Rule]", "151"}], ",", 
     RowBox[{"\"\<SplineOrder\>\"", "\[Rule]", "3"}], ",", 
     RowBox[{"\"\<AngularSubSampleRate\>\"", "\[Rule]", "1"}], ",", 
     RowBox[{"\"\<Periodicity\>\"", "\[Rule]", "\[Pi]"}], ",", 
     RowBox[{"\"\<InflectionPoint\>\"", "\[Rule]", "\"\<Automatic\>\""}], ",", 
     RowBox[{"\"\<MnOrder\>\"", "\[Rule]", "8"}], ",", 
     RowBox[{"\"\<GaussianWindowSigma\>\"", "\[Rule]", "\"\<Automatic\>\""}], 
     ",", 
     RowBox[{"\"\<InflectionPoint\>\"", "\[Rule]", "\"\<Automatic\>\""}], ",", 
     RowBox[{"\"\<CoordinateSystem\>\"", "\[Rule]", "\"\<Matrix\>\""}], ",", 
     RowBox[{"\"\<SingleVsDoubleSided\>\"", "\[Rule]", "\"\<Double\>\""}], 
     ",", 
     RowBox[{"\"\<Method\>\"", "\[Rule]", "\"\<SpatialConvolution\>\""}]}], 
    "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6283308413389482`*^9, 3.6283308429780636`*^9}, {
   3.6361849439838905`*^9, 3.636184981626449*^9}, {3.6361977951105614`*^9, 
   3.636197800991724*^9}, 3.638091605120901*^9, {3.6380939495648823`*^9, 
   3.638093969863186*^9}, {3.8643635898151903`*^9, 3.864363598291545*^9}, {
   3.8643636619198575`*^9, 3.864363701169103*^9}, {3.865399041704276*^9, 
   3.865399081730671*^9}, 3.865399273888098*^9, {3.8653995902629833`*^9, 
   3.865399590364056*^9}, {3.8653996458094053`*^9, 3.865399645898638*^9}, {
   3.86539967876698*^9, 3.8653996864659476`*^9}, {3.8654048827071676`*^9, 
   3.8654049355950794`*^9}, {3.8654049973960333`*^9, 
   3.8654050271628833`*^9}, {3.8654050737085752`*^9, 3.86540512869584*^9}, 
   3.8654051932981415`*^9, {3.8654053288326735`*^9, 3.8654053365209103`*^9}, {
   3.866096713489652*^9, 3.86609672618004*^9}},
 CellLabel->
  "In[933]:=",ExpressionUUID->"ee49478d-566d-44e9-9a4e-f5a848bf94cb"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"OrientationScoreTransform", "::", "dim"}], "=", 
   "\"\<Warning! Method \\\"Fourier\\\" can not be used if the image \
dimensions are not equal. Convolution based method with kernel size `1`x`1` \
used instead.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"OrientationScoreTransform", "::", "size"}], "=", 
   "\"\<Warning! Wavelet size can not be specified with method \
\\\"Fourier\\\", size is set equal to the image size.\>\""}], ";"}]}], "Input",
 CellChangeTimes->{{3.6283308413389482`*^9, 3.6283308429780636`*^9}, {
   3.6361849439838905`*^9, 3.636184981626449*^9}, {3.6361977951105614`*^9, 
   3.636197800991724*^9}, 3.638091605120901*^9, {3.6380939495648823`*^9, 
   3.638093969863186*^9}, {3.8643635898151903`*^9, 3.864363598291545*^9}, {
   3.8643636619198575`*^9, 3.864363701169103*^9}, {3.865399041704276*^9, 
   3.865399081730671*^9}, 3.865399273888098*^9, {3.8653995902629833`*^9, 
   3.865399590364056*^9}, {3.8653996458094053`*^9, 3.865399645898638*^9}, {
   3.86539967876698*^9, 3.8653996864659476`*^9}, {3.8654048827071676`*^9, 
   3.8654049355950794`*^9}, {3.8654049973960333`*^9, 
   3.8654050271628833`*^9}, {3.8654050737085752`*^9, 3.86540512869584*^9}, 
   3.8654051932981415`*^9, {3.8654053288326735`*^9, 3.8654053375773687`*^9}, {
   3.866096713493653*^9, 3.8660967261840754`*^9}},
 CellLabel->
  "In[934]:=",ExpressionUUID->"8bc82193-24fd-428f-b68e-8c77baa8a64f"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"OrientationScoreTransform", "[", 
    RowBox[{"im_", ",", "s\[CurlyPhi]_", ",", 
     RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "dimx", ",", "dimy", ",", "size", ",", "kSpline", ",", "q", ",", 
       "periodicity", ",", "\[Rho]Inflection", ",", "kMn", ",", "\[Sigma]s", 
       ",", "matrixCoordinatesQ", ",", "cakeStack", ",", "os", ",", 
       "singleOrDouble"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"dimx", ",", "dimy"}], "}"}], "=", 
       RowBox[{
        RowBox[{"Dimensions", "[", "im", "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"1", ";;", "2"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]",
       "\[IndentingNewLine]", 
      RowBox[{"If", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"OptionValue", "[", "\"\<Method\>\"", "]"}], "\[Equal]", 
         "\"\<Fourier\>\""}], ",", "\[IndentingNewLine]", 
        RowBox[{"If", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"dimx", "\[NotEqual]", "dimy"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Message", "[", 
            RowBox[{
             RowBox[{"OrientationScoreTransform", "::", "dim"}], ",", 
             RowBox[{"OptionValue", "[", "\"\<WaveletSize\>\"", "]"}]}], 
            "]"}], ";", " ", 
           RowBox[{"size", "=", 
            RowBox[{"OptionValue", "[", "\"\<WaveletSize\>\"", "]"}]}], ";"}],
           ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"If", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"OptionValue", "[", "\"\<WaveletSize\>\"", "]"}], 
              "\[NotEqual]", 
              RowBox[{
               RowBox[{"Options", "[", 
                RowBox[{
                "OrientationScoreTransform", ",", "\"\<WaveletSize\>\""}], 
                "]"}], "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "2"}], "]"}], "]"}]}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Message", "[", 
               RowBox[{"OrientationScoreTransform", "::", "size"}], "]"}], 
              ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"size", "=", "dimx"}], ";"}]}], "\[IndentingNewLine]", 
         "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"size", "=", 
         RowBox[{"OptionValue", "[", "\"\<WaveletSize\>\"", "]"}]}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"kSpline", "=", 
       RowBox[{"OptionValue", "[", "\"\<SplineOrder\>\"", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"q", "=", 
       RowBox[{"OptionValue", "[", "\"\<AngularSubSampleRate\>\"", "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"periodicity", "=", 
       RowBox[{"OptionValue", "[", "\"\<Periodicity\>\"", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Switch", "[", 
       RowBox[{
        RowBox[{"OptionValue", "[", "\"\<InflectionPoint\>\"", "]"}], ",", 
        "\"\<Automatic\>\"", ",", 
        RowBox[{
         RowBox[{"\[Rho]Inflection", "=", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"size", "-", "1"}], ")"}], "/", "2"}], " ", "0.9"}]}], 
         ";"}], ",", "_", ",", 
        RowBox[{"\[Rho]Inflection", "=", 
         RowBox[{"OptionValue", "[", "\"\<InflectionPoint\>\"", "]"}]}]}], 
       "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"kMn", "=", 
       RowBox[{"OptionValue", "[", "\"\<MnOrder\>\"", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Switch", "[", 
       RowBox[{
        RowBox[{"OptionValue", "[", "\"\<GaussianWindowSigma\>\"", "]"}], 
        ",", "\"\<Automatic\>\"", ",", 
        RowBox[{
         RowBox[{"\[Sigma]s", "=", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"size", "-", "1"}], ")"}], "/", "4"}]}], ";"}], ",", "_", 
        ",", 
        RowBox[{"\[Sigma]s", "=", 
         RowBox[{"OptionValue", "[", "\"\<GaussianWindowSigma\>\"", "]"}]}]}],
        "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"OptionValue", "[", "\"\<CoordinateSystem\>\"", "]"}], 
         "\[Equal]", "\"\<Matrix\>\""}], ",", 
        RowBox[{"matrixCoordinatesQ", "=", "True"}], ",", 
        RowBox[{"matrixCoordinatesQ", "=", "False"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"singleOrDouble", "=", 
       RowBox[{"OptionValue", "[", "\"\<SingleVsDoubleSided\>\"", "]"}]}], 
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"cakeStack", "=", 
       RowBox[{"CakeWaveletStack", "[", 
        RowBox[{
        "size", ",", "s\[CurlyPhi]", ",", "kSpline", ",", "q", ",", 
         "periodicity", ",", "\[Rho]Inflection", ",", "kMn", ",", "\[Sigma]s",
          ",", "matrixCoordinatesQ", ",", "singleOrDouble"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"os", "=", 
       RowBox[{"WaveletTransform2D", "[", 
        RowBox[{"cakeStack", ",", "im", ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"OptionValue", "[", "\"\<Method\>\"", "]"}], "\[Equal]", 
            "\"\<Fourier\>\""}], ",", "1", ",", "0"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "os", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.6283308413389482`*^9, 3.6283308429780636`*^9}, {
   3.6361849439838905`*^9, 3.636184981626449*^9}, {3.6361977951105614`*^9, 
   3.636197800991724*^9}, 3.638091605120901*^9, {3.6380939495648823`*^9, 
   3.638093969863186*^9}, {3.8643635898151903`*^9, 3.864363598291545*^9}, {
   3.8643636619198575`*^9, 3.864363701169103*^9}, {3.865399041704276*^9, 
   3.865399081730671*^9}, 3.865399273888098*^9, {3.8653995902629833`*^9, 
   3.865399590364056*^9}, {3.8653996458094053`*^9, 3.865399645898638*^9}, {
   3.86539967876698*^9, 3.8653996864659476`*^9}, {3.8654048827071676`*^9, 
   3.8654049355950794`*^9}, {3.8654049973960333`*^9, 
   3.8654050271628833`*^9}, {3.8654050737085752`*^9, 3.86540512869584*^9}, 
   3.8654051932981415`*^9, {3.8654053288326735`*^9, 3.865405341727069*^9}, {
   3.8660967135006523`*^9, 3.86609672619975*^9}},
 CellLabel->
  "In[936]:=",ExpressionUUID->"2c49fd37-469b-434b-a80b-e0af97325b87"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Distance Approximations", "Subsection",
 CellChangeTimes->{{3.8654788282827597`*^9, 
  3.865478831503728*^9}},ExpressionUUID->"34d3e14f-3937-4e93-96c3-\
17e1f15a219b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"cartesianApproximation", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x_", ",", "y_", ",", "\[Theta]_"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"w1_", ",", "w2_", ",", "w3_"}], "}"}]}], "]"}], " ", ":=", " ", 
  RowBox[{"Norm", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x", ",", "y", ",", "\[Theta]"}], "}"}], "*", 
    RowBox[{"{", 
     RowBox[{"w1", ",", "w2", ",", "w3"}], "}"}]}], "]"}]}]], "Code",
 InitializationCell->False,
 CellChangeTimes->{{3.8654788345261393`*^9, 3.865478875932912*^9}},
 CellLabel->
  "In[937]:=",ExpressionUUID->"5fd5e78f-8a68-4476-a126-dd8d19550033"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"half", "-", 
    RowBox[{"angle", " ", "coordinates"}]}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{"b", "[", 
    RowBox[{"{", 
     RowBox[{"x_", ",", "y_", ",", "\[Theta]_"}], "}"}], "]"}], " ", ":=", 
   " ", 
   RowBox[{"{", "\n", "\t ", 
    RowBox[{
     RowBox[{
      RowBox[{"x", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]", "/", "2"}], "]"}]}], " ", "+", " ", 
      RowBox[{"y", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]", "/", "2"}], "]"}]}]}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "x"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]", "/", "2"}], "]"}]}], " ", "+", " ", 
      RowBox[{"y", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]", "/", "2"}], "]"}]}]}], ",", "\n", "\t", 
     "\[Theta]"}], "\n", "}"}]}]}]], "Code",
 InitializationCell->False,
 CellLabel->
  "In[938]:=",ExpressionUUID->"b3089416-0bff-44ce-bfc4-b0d4f6642dff"],

Cell[BoxData[
 RowBox[{
  RowBox[{"halfAngleApproxmation", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x_", ",", "y_", ",", "\[Theta]_"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"w1_", ",", "w2_", ",", "w3_"}], "}"}]}], "]"}], " ", ":=", " ", 
  RowBox[{"Norm", "[", 
   RowBox[{
    RowBox[{"b", "[", 
     RowBox[{"{", 
      RowBox[{"x", ",", "y", ",", "\[Theta]"}], "}"}], "]"}], "*", 
    RowBox[{"{", 
     RowBox[{"w1", ",", "w2", ",", "w3"}], "}"}]}], "]"}]}]], "Code",
 InitializationCell->False,
 CellChangeTimes->{{3.8654788932785983`*^9, 3.8654789426050963`*^9}},
 CellLabel->
  "In[939]:=",ExpressionUUID->"195907f2-0a95-4d5b-8f10-ccb5af1bcb33"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Thinning", "Section",
 CellChangeTimes->{{3.9271750888032427`*^9, 
  3.927175089586335*^9}},ExpressionUUID->"4966a8e6-870a-4be7-8eb1-\
9b46df4aac7d"],

Cell[CellGroupData[{

Cell["Functions", "Subsection",
 CellChangeTimes->{{3.927175109869827*^9, 
  3.927175111286799*^9}},ExpressionUUID->"0b1d59b3-d3bd-4529-b36b-\
151004fb04d9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"inds", "=", 
        RowBox[{"{", 
         RowBox[{
         "25", ",", "26", ",", "16", ",", "17", ",", "22", ",", "23", ",", 
          "13", ",", "27", ",", "24", ",", "18", ",", "15", ",", "26", ",", 
          "23", ",", "17", ",", "19", ",", "22", ",", "10", ",", "13", ",", 
          "20", ",", "23", ",", "11", ",", "21", ",", "24", ",", "20", ",", 
          "23", ",", "12", ",", "15", ",", "11", ",", "7", ",", "16", ",", 
          "8", ",", "17", ",", "4", ",", "13", ",", "5", ",", "9", ",", "8", 
          ",", "18", ",", "17", ",", "6", ",", "5", ",", "15", ",", "1", ",", 
          "10", ",", "4", ",", "13", ",", "2", ",", "11", ",", "5", ",", "3", 
          ",", "2", ",", "12", ",", "11", ",", "6", ",", "5", ",", "15"}], 
         "}"}]}], ",", 
       RowBox[{"\[Delta]G6", "=", 
        RowBox[{"Riffle", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", 
            RowBox[{"-", "1"}], ",", 
            RowBox[{"-", "1"}], ",", "1", ",", 
            RowBox[{"-", "3"}], ",", 
            RowBox[{"-", "1"}], ",", 
            RowBox[{"-", "1"}], ",", "1", ",", 
            RowBox[{"-", "1"}], ",", "1", ",", "1", ",", 
            RowBox[{"-", "1"}], ",", "3", ",", "1", ",", "1", ",", 
            RowBox[{"-", "1"}], ",", 
            RowBox[{"-", "3"}], ",", 
            RowBox[{"-", "1"}], ",", "3", ",", "1", ",", "1", ",", 
            RowBox[{"-", "1"}], ",", "3", ",", "1", ",", 
            RowBox[{"-", "1"}], ",", "1", ",", "1", ",", 
            RowBox[{"-", "1"}], ",", "3", ",", "1", ",", "1", ",", 
            RowBox[{"-", "1"}], ",", 
            RowBox[{"-", "3"}], ",", "3", ",", 
            RowBox[{"-", "1"}], ",", "1", ",", "1", ",", "3", ",", 
            RowBox[{"-", "1"}], ",", "1", ",", 
            RowBox[{"-", "1"}], ",", "1", ",", "1", ",", 
            RowBox[{"-", "1"}], ",", "3", ",", "1", ",", "1", ",", 
            RowBox[{"-", "1"}], ",", "1", ",", "3", ",", "3", ",", "1", ",", 
            "5", ",", "3", ",", "3", ",", "1", ",", 
            RowBox[{"-", "1"}], ",", "1", ",", "1", ",", 
            RowBox[{"-", "1"}], ",", "3", ",", "1", ",", "1", ",", 
            RowBox[{"-", "1"}], ",", 
            RowBox[{"-", "7"}], ",", 
            RowBox[{"-", "1"}], ",", 
            RowBox[{"-", "1"}], ",", "1", ",", 
            RowBox[{"-", "3"}], ",", 
            RowBox[{"-", "1"}], ",", 
            RowBox[{"-", "1"}], ",", "1", ",", 
            RowBox[{"-", "1"}], ",", "1", ",", "1", ",", 
            RowBox[{"-", "1"}], ",", "3", ",", "1", ",", "1", ",", 
            RowBox[{"-", "1"}], ",", 
            RowBox[{"-", "3"}], ",", 
            RowBox[{"-", "1"}], ",", "3", ",", "1", ",", "1", ",", 
            RowBox[{"-", "1"}], ",", "3", ",", "1", ",", 
            RowBox[{"-", "1"}], ",", "1", ",", "1", ",", 
            RowBox[{"-", "1"}], ",", "3", ",", "1", ",", "1", ",", 
            RowBox[{"-", "1"}], ",", 
            RowBox[{"-", "3"}], ",", "3", ",", 
            RowBox[{"-", "1"}], ",", "1", ",", "1", ",", "3", ",", 
            RowBox[{"-", "1"}], ",", "1", ",", 
            RowBox[{"-", "1"}], ",", "1", ",", "1", ",", 
            RowBox[{"-", "1"}], ",", "3", ",", "1", ",", "1", ",", 
            RowBox[{"-", "1"}], ",", "1", ",", "3", ",", "3", ",", "1", ",", 
            "5", ",", "3", ",", "3", ",", "1", ",", 
            RowBox[{"-", "1"}], ",", "1", ",", "1", ",", 
            RowBox[{"-", "1"}], ",", "3", ",", "1", ",", "1", ",", 
            RowBox[{"-", "1"}]}], "}"}], ",", 
          RowBox[{"ConstantArray", "[", 
           RowBox[{"0", ",", "128"}], "]"}]}], "]"}]}]}], "}"}], ",", 
     RowBox[{
      RowBox[{"preservesEulerCharacteristicQ", "=", 
       RowBox[{"Compile", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"nb", ",", "_Integer", ",", "1"}], "}"}], "}"}], ",", 
         RowBox[{"Module", "[", 
          RowBox[{
           RowBox[{"{", "n", "}"}], ",", 
           RowBox[{
            RowBox[{"n", "=", 
             RowBox[{
              RowBox[{"Partition", "[", 
               RowBox[{
                RowBox[{"nb", "[", 
                 RowBox[{"[", "inds", "]"}], "]"}], ",", "7"}], "]"}], ".", 
              RowBox[{"{", 
               RowBox[{
               "128", ",", "64", ",", "32", ",", "16", ",", "8", ",", "4", 
                ",", "2"}], "}"}]}]}], ";", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Total", "[", 
              RowBox[{"\[Delta]G6", "[", 
               RowBox[{"[", 
                RowBox[{"n", "+", "1"}], "]"}], "]"}], "]"}], "==", "0"}]}]}],
           "]"}], ",", 
         RowBox[{"RuntimeOptions", "->", "\"\<Speed\>\""}], ",", 
         RowBox[{"CompilationTarget", "->", "\"\<C\>\""}]}], "]"}]}], ";"}]}],
     "]"}], ";"}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"a27", "=", 
        RowBox[{"ConstantArray", "[", 
         RowBox[{"0", ",", 
          RowBox[{"{", 
           RowBox[{"27", ",", "27"}], "}"}]}], "]"}]}], ",", 
       RowBox[{"tups", "=", 
        RowBox[{"Tuples", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "0", ",", "1"}], "}"}], ",", "3"}], 
         "]"}]}], ",", 
       RowBox[{"dig", "=", 
        RowBox[{
         RowBox[{"IntegerDigits", "[", 
          RowBox[{
           RowBox[{"Range", "[", 
            RowBox[{"0", ",", "26"}], "]"}], ",", "3", ",", "3"}], "]"}], "+",
          "1"}]}], ",", 
       RowBox[{"rng", "=", 
        RowBox[{"Range", "[", "27", "]"}]}]}], "}"}], ",", 
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"c1", "=", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"Select", "[", 
              RowBox[{
               RowBox[{"Transpose", "[", 
                RowBox[{
                 RowBox[{"Transpose", "[", "tups", "]"}], "+", "#"}], "]"}], 
               ",", 
               RowBox[{
                RowBox[{"0", "<", 
                 RowBox[{"Min", "[", "#", "]"}], "<=", 
                 RowBox[{"Max", "[", "#", "]"}], "<", "4"}], "&"}]}], "]"}], 
             ".", 
             RowBox[{"{", 
              RowBox[{"9", ",", "3", ",", "1"}], "}"}]}], "-", "12"}], "&"}], 
          "/@", "dig"}]}], "}"}], ",", 
       RowBox[{"With", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"c", "=", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"Select", "[", 
              RowBox[{
               RowBox[{"c1", "[", 
                RowBox[{"[", "i", "]"}], "]"}], ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"i", "<=", "#", "<=", "27"}], "&&", 
                 RowBox[{"i", "!=", "14"}]}], "&"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "27"}], "}"}]}], "]"}]}], "}"}], ",", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"conn1", "=", 
              RowBox[{"c", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], ",", 
             RowBox[{"conn2", "=", 
              RowBox[{"c", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], ",", 
             RowBox[{"conn3", "=", 
              RowBox[{"c", "[", 
               RowBox[{"[", "3", "]"}], "]"}]}], ",", 
             RowBox[{"conn4", "=", 
              RowBox[{"c", "[", 
               RowBox[{"[", "4", "]"}], "]"}]}], ",", 
             RowBox[{"conn5", "=", 
              RowBox[{"c", "[", 
               RowBox[{"[", "5", "]"}], "]"}]}], ",", 
             RowBox[{"conn6", "=", 
              RowBox[{"c", "[", 
               RowBox[{"[", "6", "]"}], "]"}]}], ",", 
             RowBox[{"conn7", "=", 
              RowBox[{"c", "[", 
               RowBox[{"[", "7", "]"}], "]"}]}], ",", 
             RowBox[{"conn8", "=", 
              RowBox[{"c", "[", 
               RowBox[{"[", "8", "]"}], "]"}]}], ",", 
             RowBox[{"conn9", "=", 
              RowBox[{"c", "[", 
               RowBox[{"[", "9", "]"}], "]"}]}], ",", 
             RowBox[{"conn10", "=", 
              RowBox[{"c", "[", 
               RowBox[{"[", "10", "]"}], "]"}]}], ",", 
             RowBox[{"conn11", "=", 
              RowBox[{"c", "[", 
               RowBox[{"[", "11", "]"}], "]"}]}], ",", 
             RowBox[{"conn12", "=", 
              RowBox[{"c", "[", 
               RowBox[{"[", "12", "]"}], "]"}]}], ",", 
             RowBox[{"conn13", "=", 
              RowBox[{"c", "[", 
               RowBox[{"[", "13", "]"}], "]"}]}], ",", 
             RowBox[{"conn15", "=", 
              RowBox[{"c", "[", 
               RowBox[{"[", "15", "]"}], "]"}]}], ",", 
             RowBox[{"conn16", "=", 
              RowBox[{"c", "[", 
               RowBox[{"[", "16", "]"}], "]"}]}], ",", 
             RowBox[{"conn17", "=", 
              RowBox[{"c", "[", 
               RowBox[{"[", "17", "]"}], "]"}]}], ",", 
             RowBox[{"conn18", "=", 
              RowBox[{"c", "[", 
               RowBox[{"[", "18", "]"}], "]"}]}], ",", 
             RowBox[{"conn19", "=", 
              RowBox[{"c", "[", 
               RowBox[{"[", "19", "]"}], "]"}]}], ",", 
             RowBox[{"conn20", "=", 
              RowBox[{"c", "[", 
               RowBox[{"[", "20", "]"}], "]"}]}], ",", 
             RowBox[{"conn21", "=", 
              RowBox[{"c", "[", 
               RowBox[{"[", "21", "]"}], "]"}]}], ",", 
             RowBox[{"conn22", "=", 
              RowBox[{"c", "[", 
               RowBox[{"[", "22", "]"}], "]"}]}], ",", 
             RowBox[{"conn23", "=", 
              RowBox[{"c", "[", 
               RowBox[{"[", "23", "]"}], "]"}]}], ",", 
             RowBox[{"conn24", "=", 
              RowBox[{"c", "[", 
               RowBox[{"[", "24", "]"}], "]"}]}], ",", 
             RowBox[{"conn25", "=", 
              RowBox[{"c", "[", 
               RowBox[{"[", "25", "]"}], "]"}]}], ",", 
             RowBox[{"conn26", "=", 
              RowBox[{"c", "[", 
               RowBox[{"[", "26", "]"}], "]"}]}], ",", 
             RowBox[{"conn27", "=", 
              RowBox[{"c", "[", 
               RowBox[{"[", "27", "]"}], "]"}]}]}], "}"}], ",", 
           RowBox[{
            RowBox[{"simplePointQ", "=", 
             RowBox[{"Compile", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"{", 
                 RowBox[{"nb", ",", "_Integer", ",", "1"}], "}"}], "}"}], ",", 
               RowBox[{"Module", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"cb", "=", "nb"}], ",", "adj", ",", "pp"}], "}"}], 
                 ",", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"cb", "[", 
                    RowBox[{"[", "14", "]"}], "]"}], "=", "0"}], ";", 
                  "\[IndentingNewLine]", 
                  RowBox[{"adj", "=", "a27"}], ";", "\[IndentingNewLine]", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Total", "[", "cb", "]"}], ">", "23"}], ",", 
                    RowBox[{"Return", "[", "True", "]"}]}], "]"}], ";", 
                  "\[IndentingNewLine]", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"cb", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "==", "1"}], ",", 
                    RowBox[{"Do", "[", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"cb", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], "==", "1"}], ",", 
                    RowBox[{
                    RowBox[{"adj", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "j"}], "]"}], "]"}], "=", "1"}]}], 
                    "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"j", ",", "conn1"}], "}"}]}], "]"}]}], "]"}], ";",
                   "\[IndentingNewLine]", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"cb", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "==", "1"}], ",", 
                    RowBox[{"Do", "[", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"cb", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], "==", "1"}], ",", 
                    RowBox[{
                    RowBox[{"adj", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "j"}], "]"}], "]"}], "=", "1"}]}], 
                    "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"j", ",", "conn2"}], "}"}]}], "]"}]}], "]"}], ";",
                   "\[IndentingNewLine]", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"cb", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], "==", "1"}], ",", 
                    RowBox[{"Do", "[", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"cb", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], "==", "1"}], ",", 
                    RowBox[{
                    RowBox[{"adj", "[", 
                    RowBox[{"[", 
                    RowBox[{"3", ",", "j"}], "]"}], "]"}], "=", "1"}]}], 
                    "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"j", ",", "conn3"}], "}"}]}], "]"}]}], "]"}], ";",
                   "\[IndentingNewLine]", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"cb", "[", 
                    RowBox[{"[", "4", "]"}], "]"}], "==", "1"}], ",", 
                    RowBox[{"Do", "[", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"cb", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], "==", "1"}], ",", 
                    RowBox[{
                    RowBox[{"adj", "[", 
                    RowBox[{"[", 
                    RowBox[{"4", ",", "j"}], "]"}], "]"}], "=", "1"}]}], 
                    "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"j", ",", "conn4"}], "}"}]}], "]"}]}], "]"}], ";",
                   "\[IndentingNewLine]", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"cb", "[", 
                    RowBox[{"[", "5", "]"}], "]"}], "==", "1"}], ",", 
                    RowBox[{"Do", "[", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"cb", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], "==", "1"}], ",", 
                    RowBox[{
                    RowBox[{"adj", "[", 
                    RowBox[{"[", 
                    RowBox[{"5", ",", "j"}], "]"}], "]"}], "=", "1"}]}], 
                    "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"j", ",", "conn5"}], "}"}]}], "]"}]}], "]"}], ";",
                   "\[IndentingNewLine]", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"cb", "[", 
                    RowBox[{"[", "6", "]"}], "]"}], "==", "1"}], ",", 
                    RowBox[{"Do", "[", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"cb", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], "==", "1"}], ",", 
                    RowBox[{
                    RowBox[{"adj", "[", 
                    RowBox[{"[", 
                    RowBox[{"6", ",", "j"}], "]"}], "]"}], "=", "1"}]}], 
                    "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"j", ",", "conn6"}], "}"}]}], "]"}]}], "]"}], ";",
                   "\[IndentingNewLine]", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"cb", "[", 
                    RowBox[{"[", "7", "]"}], "]"}], "==", "1"}], ",", 
                    RowBox[{"Do", "[", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"cb", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], "==", "1"}], ",", 
                    RowBox[{
                    RowBox[{"adj", "[", 
                    RowBox[{"[", 
                    RowBox[{"7", ",", "j"}], "]"}], "]"}], "=", "1"}]}], 
                    "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"j", ",", "conn7"}], "}"}]}], "]"}]}], "]"}], ";",
                   "\[IndentingNewLine]", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"cb", "[", 
                    RowBox[{"[", "8", "]"}], "]"}], "==", "1"}], ",", 
                    RowBox[{"Do", "[", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"cb", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], "==", "1"}], ",", 
                    RowBox[{
                    RowBox[{"adj", "[", 
                    RowBox[{"[", 
                    RowBox[{"8", ",", "j"}], "]"}], "]"}], "=", "1"}]}], 
                    "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"j", ",", "conn8"}], "}"}]}], "]"}]}], "]"}], ";",
                   "\[IndentingNewLine]", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"cb", "[", 
                    RowBox[{"[", "9", "]"}], "]"}], "==", "1"}], ",", 
                    RowBox[{"Do", "[", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"cb", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], "==", "1"}], ",", 
                    RowBox[{
                    RowBox[{"adj", "[", 
                    RowBox[{"[", 
                    RowBox[{"9", ",", "j"}], "]"}], "]"}], "=", "1"}]}], 
                    "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"j", ",", "conn9"}], "}"}]}], "]"}]}], "]"}], ";",
                   "\[IndentingNewLine]", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"cb", "[", 
                    RowBox[{"[", "10", "]"}], "]"}], "==", "1"}], ",", 
                    RowBox[{"Do", "[", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"cb", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], "==", "1"}], ",", 
                    RowBox[{
                    RowBox[{"adj", "[", 
                    RowBox[{"[", 
                    RowBox[{"10", ",", "j"}], "]"}], "]"}], "=", "1"}]}], 
                    "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"j", ",", "conn10"}], "}"}]}], "]"}]}], "]"}], 
                  ";", "\[IndentingNewLine]", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"cb", "[", 
                    RowBox[{"[", "11", "]"}], "]"}], "==", "1"}], ",", 
                    RowBox[{"Do", "[", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"cb", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], "==", "1"}], ",", 
                    RowBox[{
                    RowBox[{"adj", "[", 
                    RowBox[{"[", 
                    RowBox[{"11", ",", "j"}], "]"}], "]"}], "=", "1"}]}], 
                    "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"j", ",", "conn11"}], "}"}]}], "]"}]}], "]"}], 
                  ";", "\[IndentingNewLine]", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"cb", "[", 
                    RowBox[{"[", "12", "]"}], "]"}], "==", "1"}], ",", 
                    RowBox[{"Do", "[", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"cb", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], "==", "1"}], ",", 
                    RowBox[{
                    RowBox[{"adj", "[", 
                    RowBox[{"[", 
                    RowBox[{"12", ",", "j"}], "]"}], "]"}], "=", "1"}]}], 
                    "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"j", ",", "conn12"}], "}"}]}], "]"}]}], "]"}], 
                  ";", "\[IndentingNewLine]", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"cb", "[", 
                    RowBox[{"[", "13", "]"}], "]"}], "==", "1"}], ",", 
                    RowBox[{"Do", "[", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"cb", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], "==", "1"}], ",", 
                    RowBox[{
                    RowBox[{"adj", "[", 
                    RowBox[{"[", 
                    RowBox[{"13", ",", "j"}], "]"}], "]"}], "=", "1"}]}], 
                    "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"j", ",", "conn13"}], "}"}]}], "]"}]}], "]"}], 
                  ";", "\[IndentingNewLine]", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"cb", "[", 
                    RowBox[{"[", "15", "]"}], "]"}], "==", "1"}], ",", 
                    RowBox[{"Do", "[", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"cb", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], "==", "1"}], ",", 
                    RowBox[{
                    RowBox[{"adj", "[", 
                    RowBox[{"[", 
                    RowBox[{"15", ",", "j"}], "]"}], "]"}], "=", "1"}]}], 
                    "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"j", ",", "conn15"}], "}"}]}], "]"}]}], "]"}], 
                  ";", "\[IndentingNewLine]", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"cb", "[", 
                    RowBox[{"[", "16", "]"}], "]"}], "==", "1"}], ",", 
                    RowBox[{"Do", "[", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"cb", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], "==", "1"}], ",", 
                    RowBox[{
                    RowBox[{"adj", "[", 
                    RowBox[{"[", 
                    RowBox[{"16", ",", "j"}], "]"}], "]"}], "=", "1"}]}], 
                    "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"j", ",", "conn16"}], "}"}]}], "]"}]}], "]"}], 
                  ";", "\[IndentingNewLine]", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"cb", "[", 
                    RowBox[{"[", "17", "]"}], "]"}], "==", "1"}], ",", 
                    RowBox[{"Do", "[", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"cb", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], "==", "1"}], ",", 
                    RowBox[{
                    RowBox[{"adj", "[", 
                    RowBox[{"[", 
                    RowBox[{"17", ",", "j"}], "]"}], "]"}], "=", "1"}]}], 
                    "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"j", ",", "conn17"}], "}"}]}], "]"}]}], "]"}], 
                  ";", "\[IndentingNewLine]", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"cb", "[", 
                    RowBox[{"[", "18", "]"}], "]"}], "==", "1"}], ",", 
                    RowBox[{"Do", "[", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"cb", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], "==", "1"}], ",", 
                    RowBox[{
                    RowBox[{"adj", "[", 
                    RowBox[{"[", 
                    RowBox[{"18", ",", "j"}], "]"}], "]"}], "=", "1"}]}], 
                    "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"j", ",", "conn18"}], "}"}]}], "]"}]}], "]"}], 
                  ";", "\[IndentingNewLine]", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"cb", "[", 
                    RowBox[{"[", "19", "]"}], "]"}], "==", "1"}], ",", 
                    RowBox[{"Do", "[", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"cb", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], "==", "1"}], ",", 
                    RowBox[{
                    RowBox[{"adj", "[", 
                    RowBox[{"[", 
                    RowBox[{"19", ",", "j"}], "]"}], "]"}], "=", "1"}]}], 
                    "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"j", ",", "conn19"}], "}"}]}], "]"}]}], "]"}], 
                  ";", "\[IndentingNewLine]", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"cb", "[", 
                    RowBox[{"[", "20", "]"}], "]"}], "==", "1"}], ",", 
                    RowBox[{"Do", "[", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"cb", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], "==", "1"}], ",", 
                    RowBox[{
                    RowBox[{"adj", "[", 
                    RowBox[{"[", 
                    RowBox[{"20", ",", "j"}], "]"}], "]"}], "=", "1"}]}], 
                    "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"j", ",", "conn20"}], "}"}]}], "]"}]}], "]"}], 
                  ";", "\[IndentingNewLine]", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"cb", "[", 
                    RowBox[{"[", "21", "]"}], "]"}], "==", "1"}], ",", 
                    RowBox[{"Do", "[", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"cb", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], "==", "1"}], ",", 
                    RowBox[{
                    RowBox[{"adj", "[", 
                    RowBox[{"[", 
                    RowBox[{"21", ",", "j"}], "]"}], "]"}], "=", "1"}]}], 
                    "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"j", ",", "conn21"}], "}"}]}], "]"}]}], "]"}], 
                  ";", "\[IndentingNewLine]", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"cb", "[", 
                    RowBox[{"[", "22", "]"}], "]"}], "==", "1"}], ",", 
                    RowBox[{"Do", "[", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"cb", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], "==", "1"}], ",", 
                    RowBox[{
                    RowBox[{"adj", "[", 
                    RowBox[{"[", 
                    RowBox[{"22", ",", "j"}], "]"}], "]"}], "=", "1"}]}], 
                    "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"j", ",", "conn22"}], "}"}]}], "]"}]}], "]"}], 
                  ";", "\[IndentingNewLine]", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"cb", "[", 
                    RowBox[{"[", "23", "]"}], "]"}], "==", "1"}], ",", 
                    RowBox[{"Do", "[", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"cb", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], "==", "1"}], ",", 
                    RowBox[{
                    RowBox[{"adj", "[", 
                    RowBox[{"[", 
                    RowBox[{"23", ",", "j"}], "]"}], "]"}], "=", "1"}]}], 
                    "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"j", ",", "conn23"}], "}"}]}], "]"}]}], "]"}], 
                  ";", "\[IndentingNewLine]", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"cb", "[", 
                    RowBox[{"[", "24", "]"}], "]"}], "==", "1"}], ",", 
                    RowBox[{"Do", "[", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"cb", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], "==", "1"}], ",", 
                    RowBox[{
                    RowBox[{"adj", "[", 
                    RowBox[{"[", 
                    RowBox[{"24", ",", "j"}], "]"}], "]"}], "=", "1"}]}], 
                    "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"j", ",", "conn24"}], "}"}]}], "]"}]}], "]"}], 
                  ";", "\[IndentingNewLine]", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"cb", "[", 
                    RowBox[{"[", "25", "]"}], "]"}], "==", "1"}], ",", 
                    RowBox[{"Do", "[", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"cb", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], "==", "1"}], ",", 
                    RowBox[{
                    RowBox[{"adj", "[", 
                    RowBox[{"[", 
                    RowBox[{"25", ",", "j"}], "]"}], "]"}], "=", "1"}]}], 
                    "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"j", ",", "conn25"}], "}"}]}], "]"}]}], "]"}], 
                  ";", "\[IndentingNewLine]", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"cb", "[", 
                    RowBox[{"[", "26", "]"}], "]"}], "==", "1"}], ",", 
                    RowBox[{"Do", "[", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"cb", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], "==", "1"}], ",", 
                    RowBox[{
                    RowBox[{"adj", "[", 
                    RowBox[{"[", 
                    RowBox[{"26", ",", "j"}], "]"}], "]"}], "=", "1"}]}], 
                    "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"j", ",", "conn26"}], "}"}]}], "]"}]}], "]"}], 
                  ";", "\[IndentingNewLine]", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"cb", "[", 
                    RowBox[{"[", "27", "]"}], "]"}], "==", "1"}], ",", 
                    RowBox[{"Do", "[", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"cb", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], "==", "1"}], ",", 
                    RowBox[{
                    RowBox[{"adj", "[", 
                    RowBox[{"[", 
                    RowBox[{"27", ",", "j"}], "]"}], "]"}], "=", "1"}]}], 
                    "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"j", ",", "conn27"}], "}"}]}], "]"}]}], "]"}], 
                  ";", "\[IndentingNewLine]", 
                  RowBox[{"pp", "=", 
                   RowBox[{"Complement", "[", 
                    RowBox[{
                    RowBox[{"rng", " ", "cb"}], ",", 
                    RowBox[{"{", "0", "}"}]}], "]"}]}], ";", 
                  "\[IndentingNewLine]", 
                  RowBox[{"adj", "=", 
                   RowBox[{"adj", "[", 
                    RowBox[{"[", 
                    RowBox[{"pp", ",", "pp"}], "]"}], "]"}]}], ";", 
                  "\[IndentingNewLine]", 
                  RowBox[{"adj", "=", 
                   RowBox[{"adj", "+", 
                    RowBox[{"Transpose", "[", "adj", "]"}]}]}], ";", 
                  "\[IndentingNewLine]", 
                  RowBox[{"adj", "=", 
                   RowBox[{"adj", ".", "adj"}]}], ";", "\[IndentingNewLine]", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Min", "[", "adj", "]"}], ">", "0"}], ",", "True",
                     ",", 
                    RowBox[{
                    RowBox[{"adj", "=", 
                    RowBox[{"adj", ".", "adj"}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Min", "[", "adj", "]"}], ">", "0"}]}]}], 
                   "]"}]}]}], "]"}], ",", 
               RowBox[{"RuntimeOptions", "->", "\"\<Speed\>\""}], ",", 
               RowBox[{"CompilationTarget", "->", "\"\<C\>\""}]}], "]"}]}], 
            ";"}]}], "]"}]}], "]"}]}], "]"}]}], "]"}], ";"}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"morphologicalThinning3DC", "=", 
    RowBox[{"Compile", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"oim", ",", "_Integer", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"iter", ",", "_Integer"}], "}"}]}], "}"}], ",", 
      RowBox[{"Block", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"cnt", "=", "0"}], ",", "X", ",", "Y", ",", "Z", ",", 
          RowBox[{"im", "=", "oim"}], ",", 
          RowBox[{"im2", "=", "oim"}], ",", 
          RowBox[{"samefaces", "=", "0"}], ",", "nb", ",", "bag", ",", 
          "nface", ",", "yo", ",", "sbp", ",", "il", ",", "jl", ",", "kl"}], 
         "}"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"X", ",", "Y", ",", "Z"}], "}"}], "=", 
          RowBox[{"Dimensions", "[", "im", "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"While", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"cnt", "++"}], "<", "iter"}], "&&", 
            RowBox[{"samefaces", "<", "6"}]}], ",", 
           RowBox[{
            RowBox[{"samefaces", "=", "0"}], ";", "\[IndentingNewLine]", 
            RowBox[{"Do", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"nface", "=", "1"}], ";", "\[IndentingNewLine]", 
               RowBox[{"Do", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"im", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "j", ",", "k"}], "]"}], "]"}], "==", 
                    "0"}], ",", 
                    RowBox[{"Continue", "[", "]"}]}], "]"}], ";", 
                  "\[IndentingNewLine]", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{"!", 
                    RowBox[{"Or", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"f", "==", "1"}], "&&", 
                    RowBox[{
                    RowBox[{"im", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", 
                    RowBox[{"j", "-", "1"}], ",", "k"}], "]"}], "]"}], "==", 
                    "0"}]}], ",", 
                    RowBox[{
                    RowBox[{"f", "==", "2"}], "&&", 
                    RowBox[{
                    RowBox[{"im", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", 
                    RowBox[{"j", "+", "1"}], ",", "k"}], "]"}], "]"}], "==", 
                    "0"}]}], ",", 
                    RowBox[{
                    RowBox[{"f", "==", "3"}], "&&", 
                    RowBox[{
                    RowBox[{"im", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"i", "+", "1"}], ",", "j", ",", "k"}], "]"}], 
                    "]"}], "==", "0"}]}], ",", 
                    RowBox[{
                    RowBox[{"f", "==", "4"}], "&&", 
                    RowBox[{
                    RowBox[{"im", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"i", "-", "1"}], ",", "j", ",", "k"}], "]"}], 
                    "]"}], "==", "0"}]}], ",", 
                    RowBox[{
                    RowBox[{"f", "==", "5"}], "&&", 
                    RowBox[{
                    RowBox[{"im", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "j", ",", 
                    RowBox[{"k", "+", "1"}]}], "]"}], "]"}], "==", "0"}]}], 
                    ",", 
                    RowBox[{
                    RowBox[{"f", "==", "6"}], "&&", 
                    RowBox[{
                    RowBox[{"im", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "j", ",", 
                    RowBox[{"k", "-", "1"}]}], "]"}], "]"}], "==", "0"}]}]}], 
                    "]"}]}], ",", 
                    RowBox[{"Continue", "[", "]"}]}], "]"}], ";", 
                  "\[IndentingNewLine]", 
                  RowBox[{"nb", "=", 
                   RowBox[{"Flatten", "[", 
                    RowBox[{"im", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"i", "-", "1"}], ";;", 
                    RowBox[{"i", "+", "1"}]}], ",", 
                    RowBox[{
                    RowBox[{"j", "-", "1"}], ";;", 
                    RowBox[{"j", "+", "1"}]}], ",", 
                    RowBox[{
                    RowBox[{"k", "-", "1"}], ";;", 
                    RowBox[{"k", "+", "1"}]}]}], "]"}], "]"}], "]"}]}], ";", 
                  "\[IndentingNewLine]", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"Total", "[", "nb", "]"}], "!=", "2"}], "&&", 
                    RowBox[{"preservesEulerCharacteristicQ", "[", "nb", "]"}],
                     "&&", 
                    RowBox[{"simplePointQ", "[", "nb", "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"!", 
                    RowBox[{"simplePointQ", "[", 
                    RowBox[{"Flatten", "[", 
                    RowBox[{"im2", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"i", "-", "1"}], ";;", 
                    RowBox[{"i", "+", "1"}]}], ",", 
                    RowBox[{
                    RowBox[{"j", "-", "1"}], ";;", 
                    RowBox[{"j", "+", "1"}]}], ",", 
                    RowBox[{
                    RowBox[{"k", "-", "1"}], ";;", 
                    RowBox[{"k", "+", "1"}]}]}], "]"}], "]"}], "]"}], "]"}]}],
                     ",", 
                    RowBox[{
                    RowBox[{"im2", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "j", ",", "k"}], "]"}], "]"}], "=", 
                    "1"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"im2", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "j", ",", "k"}], "]"}], "]"}], "=", 
                    "0"}], ";", "\[IndentingNewLine]", 
                    RowBox[{"nface", "=", "0"}], ";"}]}], "]"}], ";"}]}], 
                   "]"}]}], ",", 
                 RowBox[{"{", 
                  RowBox[{"k", ",", "2", ",", 
                   RowBox[{"Z", "-", "1"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"j", ",", "2", ",", 
                   RowBox[{"Y", "-", "1"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"i", ",", "2", ",", 
                   RowBox[{"X", "-", "1"}]}], "}"}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"im", "=", "im2"}], ";", "\[IndentingNewLine]", 
               RowBox[{"samefaces", "+=", "nface"}]}], ",", 
              RowBox[{"{", 
               RowBox[{"f", ",", "1", ",", "6"}], "}"}]}], "]"}], ";"}]}], 
          "]"}], ";", "\[IndentingNewLine]", "im"}]}], "]"}], ",", 
      RowBox[{"RuntimeOptions", "->", "\"\<Speed\>\""}], ",", 
      RowBox[{"CompilationOptions", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\"\<InlineCompiledFunctions\>\"", "->", "True"}], ",", 
         RowBox[{"\"\<InlineExternalDefinitions\>\"", "->", "True"}]}], 
        "}"}]}], ",", 
      RowBox[{"CompilationTarget", "->", "\"\<C\>\""}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MorphologicalThinning3D", "[", 
    RowBox[{"im_", ",", "0"}], "]"}], ":=", "im"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"MorphologicalThinning3D", "[", 
    RowBox[{"im_Image3D", ",", 
     RowBox[{"iter_", ":", "Infinity"}]}], "]"}], "/;", 
   RowBox[{
    RowBox[{"ImageType", "[", "im", "]"}], "===", "\"\<Bit\>\""}]}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"idata", ",", "ii", ",", "res"}], "}"}], ",", 
    RowBox[{
     RowBox[{"idata", "=", 
      RowBox[{"ImageData", "[", 
       RowBox[{"ImagePad", "[", 
        RowBox[{"im", ",", "1"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"ii", "=", 
      RowBox[{"Replace", "[", 
       RowBox[{"iter", ",", 
        RowBox[{
         RowBox[{"Except", "[", 
          RowBox[{"_Integer", "?", "NonNegative"}], "]"}], "->", 
         RowBox[{"10", "^", "9"}]}], ",", 
        RowBox[{"{", "0", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"res", "=", 
      RowBox[{"morphologicalThinning3DC", "[", 
       RowBox[{"idata", ",", "ii"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"ImagePad", "[", 
      RowBox[{
       RowBox[{"Image3D", "[", 
        RowBox[{"res", ",", "\"\<Bit\>\""}], "]"}], ",", 
       RowBox[{"-", "1"}]}], "]"}]}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.907237710393819*^9, 3.907237726819501*^9}},
 CellLabel->
  "In[940]:=",ExpressionUUID->"138d3b2f-a725-41cc-b317-6c8b3e7ee715"]
}, Closed]],

Cell[CellGroupData[{

Cell["Results", "Subsection",
 CellChangeTimes->{{3.9271751169530516`*^9, 
  3.9271751175694304`*^9}},ExpressionUUID->"3b587400-b305-465c-b691-\
42ddc957f8be"],

Cell[BoxData[
 RowBox[{
  RowBox[{"thinCost", "=", 
   RowBox[{"MorphologicalThinning3D", "[", 
    RowBox[{"Binarize", "[", 
     RowBox[{"Image3D", "[", 
      RowBox[{"(", 
       RowBox[{"1", "-", "CSE2"}], ")"}], "]"}], "]"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.9282233057263775`*^9, 3.9282233110794983`*^9}},
 CellLabel->
  "In[945]:=",ExpressionUUID->"02498ef1-17b5-4b00-9b46-1f5c0190d436"],

Cell[BoxData[
 RowBox[{"Image3D", "[", "thinCost", "]"}]], "Input",
 CellChangeTimes->{{3.9102510726292686`*^9, 3.9102510835980625`*^9}, {
   3.9102512472756395`*^9, 3.9102512506607423`*^9}, {3.9276157246384735`*^9, 
   3.927615729951151*^9}, 3.9276948472690887`*^9},
 CellLabel->
  "In[946]:=",ExpressionUUID->"14e127c1-0a1b-470b-88ba-d65721431dcc"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Set", " ", "up"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"w", "=", 
     RowBox[{"{", 
      RowBox[{"0.2", ",", "1.5", ",", "50"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"d", "=", "32"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"orientations", "=", "No"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"\[Theta]step", "=", 
     RowBox[{"2", 
      RowBox[{"\[Pi]", "/", "orientations"}]}]}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{"alpha", " ", "=", " ", 
     RowBox[{"2", "*", "0.65"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"beta", " ", "=", " ", 
     RowBox[{"1", "/", 
      RowBox[{"(", 
       RowBox[{"1", " ", "-", " ", 
        RowBox[{"1", "/", "alpha"}]}], ")"}]}]}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{"DilationKernel", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"1", "/", "beta"}], " ", "*", " ", 
        SuperscriptBox[
         RowBox[{"halfAngleApproxmation", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"x", ",", "y", ",", "\[Theta]"}], "}"}], ",", "w"}], 
          "]"}], "beta"]}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"-", "d"}], ",", "d"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"y", ",", 
         RowBox[{"-", "d"}], ",", "d"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Theta]", ",", 
         RowBox[{
          RowBox[{"-", "d"}], " ", "\[Theta]step"}], ",", 
         RowBox[{"d", " ", "\[Theta]step"}], ",", "\[Theta]step"}], "}"}]}], 
      "]"}]}], ";"}], "\n", 
   RowBox[{"Dimensions", "[", "DilationKernel", "]"}], "\n", "\n", 
   RowBox[{
    RowBox[{"Table", "[", "\n", "\t", 
     RowBox[{
      RowBox[{"Map", "[", 
       RowBox[{"Image", ",", 
        RowBox[{"Transpose", "[", 
         RowBox[{
          RowBox[{"List3DRotate2D", "[", 
           RowBox[{"DilationKernel", ",", 
            RowBox[{"\[Theta]step", 
             RowBox[{"(", 
              RowBox[{"i", "-", "1"}], ")"}]}], ",", 
            RowBox[{"d", "+", "1"}], ",", 
            RowBox[{"d", "+", "1"}], ",", 
            SuperscriptBox["10", "7"]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"2", ",", "3", ",", "1"}], "}"}]}], "]"}]}], "]"}], ",", 
      "\n", "\t", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "8"}], "}"}]}], "\n", "]"}], ";"}], "\n", 
   "\n", 
   RowBox[{
    RowBox[{"dilationtable", " ", "=", " ", 
     RowBox[{"Table", "[", "\n", "\t", 
      RowBox[{
       RowBox[{"Transpose", "[", 
        RowBox[{
         RowBox[{"List3DRotate2D", "[", 
          RowBox[{"DilationKernel", ",", 
           RowBox[{"\[Theta]step", 
            RowBox[{"(", 
             RowBox[{"i", "-", "1"}], ")"}]}], ",", 
           RowBox[{"d", "+", "1"}], ",", 
           RowBox[{"d", "+", "1"}], ",", 
           SuperscriptBox["10", "7"]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", "3", ",", "1"}], "}"}]}], "]"}], ",", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "orientations"}], "}"}]}], "\n", "]"}]}], 
    ";"}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{
    "list", " ", "of", " ", "points", " ", "that", " ", "are", " ", "within", 
     " ", "reach"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"withinReach", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Position", "[", 
         RowBox[{
          RowBox[{"Ramp", "[", 
           RowBox[{
            RowBox[{"dilationtable", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "-", "1"}], "]"}], ",", "0."}], 
         "]"}], "-", 
        RowBox[{"(", 
         RowBox[{"d", "+", "1"}], ")"}]}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "orientations"}], "}"}]}], "]"}]}], ";"}],
    "\n", "\n"}]}]], "Input",
 CellChangeTimes->{{3.9048834037357388`*^9, 3.9048834080227575`*^9}, {
   3.904883557104313*^9, 3.904883576412548*^9}, {3.9048839553952923`*^9, 
   3.90488397401577*^9}, {3.904884150231792*^9, 3.9048841681448164`*^9}, {
   3.904884524875807*^9, 3.904884529065113*^9}, 3.9048849270355225`*^9, {
   3.904890684889282*^9, 3.904890720890507*^9}, {3.9048910185488157`*^9, 
   3.904891055510801*^9}, {3.904962960269287*^9, 3.9049629888509617`*^9}, {
   3.9049638257946386`*^9, 3.90496400824562*^9}, {3.9049641425609293`*^9, 
   3.9049641966548195`*^9}, {3.9049798681539354`*^9, 
   3.9049799606289754`*^9}, {3.9049799920675297`*^9, 
   3.9049799927274914`*^9}, {3.9049800793347244`*^9, 3.904980447358877*^9}, {
   3.9049804791417065`*^9, 3.9049805060971413`*^9}, {3.904980890945881*^9, 
   3.904981002585272*^9}, {3.904981291488632*^9, 3.9049812939135885`*^9}, {
   3.9049813567964945`*^9, 3.904981394796593*^9}, {3.9049814264795837`*^9, 
   3.904981508959073*^9}, {3.9049815497160535`*^9, 3.9049816088624754`*^9}, {
   3.9049816444553685`*^9, 3.9049816731016665`*^9}, {3.904981794797123*^9, 
   3.90498185963522*^9}, {3.9049822840615864`*^9, 3.9049822921675806`*^9}, {
   3.904982341719949*^9, 3.904982344585791*^9}, {3.9049823988824315`*^9, 
   3.904982536670623*^9}, 3.9049841587687488`*^9, {3.90498423724074*^9, 
   3.904984238075202*^9}, {3.9049852372372885`*^9, 3.9049852379874907`*^9}, {
   3.9049858071835375`*^9, 3.904985837807565*^9}, {3.9049862266893573`*^9, 
   3.904986229339017*^9}, {3.9049863319777603`*^9, 3.9049863337688107`*^9}, {
   3.9049867366262326`*^9, 3.9049867379364967`*^9}, {3.904987143280877*^9, 
   3.904987143767649*^9}, 3.904988055897834*^9, {3.9052455987841377`*^9, 
   3.9052458531478977`*^9}, {3.90524659259853*^9, 3.905246603303923*^9}, {
   3.905246812991022*^9, 3.90524684623836*^9}, {3.907751640532821*^9, 
   3.907751644513748*^9}, {3.9077516806026096`*^9, 3.907751722609624*^9}, {
   3.907752343943219*^9, 3.9077523745355167`*^9}, {3.907832224738473*^9, 
   3.9078322248964653`*^9}, {3.9078337850977583`*^9, 3.907833785378423*^9}, {
   3.907833826116457*^9, 3.907833826460145*^9}, {3.907834035919071*^9, 
   3.9078340364030237`*^9}, {3.9078340793838596`*^9, 
   3.9078341399709215`*^9}, {3.90792433474806*^9, 3.9079243427902036`*^9}, {
   3.9079254984190335`*^9, 3.9079255376684723`*^9}, {3.9083519145712442`*^9, 
   3.908351923827955*^9}, 3.9083521212615004`*^9, {3.908352222215871*^9, 
   3.908352234136639*^9}, {3.908879127271675*^9, 3.908879327339806*^9}, {
   3.912156594145809*^9, 3.912156629064908*^9}, {3.913782470338997*^9, 
   3.913782471796945*^9}, {3.913782592103737*^9, 3.9137825933828044`*^9}, {
   3.9276877030350475`*^9, 3.9276877090224285`*^9}, {3.9276882378523874`*^9, 
   3.92768824409864*^9}, {3.9276882786288147`*^9, 3.927688289808106*^9}, {
   3.9276883400880585`*^9, 3.9276883596858835`*^9}, {3.9276883898533125`*^9, 
   3.9276883925459967`*^9}, 3.9276887418740225`*^9, {3.9276902455481496`*^9, 
   3.927690251092232*^9}, {3.927691608607028*^9, 3.927691657202074*^9}, {
   3.9276917350791683`*^9, 3.927691762972479*^9}, {3.927691876379929*^9, 
   3.9276918795090885`*^9}, {3.9276924948107705`*^9, 
   3.9276925177702208`*^9}, {3.927693144583029*^9, 3.9276931637123594`*^9}, {
   3.9276932266556845`*^9, 3.9276932395045652`*^9}, {3.9276932744801598`*^9, 
   3.927693292364172*^9}, {3.9276933400909348`*^9, 3.9276933514822254`*^9}, {
   3.9276935879390945`*^9, 3.9276935915502205`*^9}, {3.9276937042112904`*^9, 
   3.927693714465885*^9}, {3.92769449699908*^9, 3.9276945024804306`*^9}, {
   3.927694571704837*^9, 3.927694620533058*^9}, {3.92769474692936*^9, 
   3.927694747362383*^9}, 3.9276948748798623`*^9, {3.9276950034691877`*^9, 
   3.9276950047108097`*^9}, {3.927696571018745*^9, 3.9276966345809703`*^9}, {
   3.9276966848314033`*^9, 3.9276967089044695`*^9}, 3.9285526689294624`*^9, {
   3.928830805205666*^9, 3.9288308123204107`*^9}, 3.928831044774009*^9},
 CellLabel->
  "In[947]:=",ExpressionUUID->"023be18e-a88f-449f-8612-4890e456231f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"DilationImageVesselness", "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", " ", 
     RowBox[{
      RowBox[{"Dimensions", "[", 
       RowBox[{"Transpose", "[", 
        RowBox[{"CSE2", ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", "3", ",", "1"}], "}"}]}], "]"}], "]"}], "+", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"4", "*", "d"}], ",", 
        RowBox[{"4", "*", "d"}]}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DilationImageVesselness", "[", 
     RowBox[{"[", " ", 
      RowBox[{"All", ",", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", "d"}], "+", "1"}], ")"}], ";;", 
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", "d"}], "+", "1"}], ")"}]}]}], ",", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", "d"}], "+", "1"}], ")"}], ";;", 
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", "d"}], "+", "1"}], ")"}]}]}]}], " ", "]"}], "]"}], 
    "=", 
    RowBox[{"Transpose", "[", 
     RowBox[{
      RowBox[{"ImageData", "[", "thinCost", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "3", ",", "1"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SetValueToOne", "[", 
    RowBox[{"\[Theta]_", ",", "x_", ",", "y_"}], "]"}], ":=", " ", 
   RowBox[{"{", " ", 
    RowBox[{
     RowBox[{"DilationImageVesselness", "[", 
      RowBox[{"[", 
       RowBox[{"\[Theta]", ",", "x", ",", "y"}], "]"}], "]"}], " ", "=", " ", 
     "1"}], " ", "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"LocFunc", "[", "pos_", "]"}], " ", ":=", " ", 
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"Mod", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"pos", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "+", 
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "-", "1"}], ",", 
            "orientations"}], "]"}], "+", "1"}], ",", " ", 
         RowBox[{
          RowBox[{"pos", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "+", 
          RowBox[{"#", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ",", " ", 
         RowBox[{
          RowBox[{"pos", "[", 
           RowBox[{"[", "3", "]"}], "]"}], "+", 
          RowBox[{"#", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}]}], "}"}], "&"}], ",", " ", 
      RowBox[{"withinReach", "[", 
       RowBox[{"[", 
        RowBox[{"pos", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DilationPos", " ", "=", " ", 
    RowBox[{"Position", "[", 
     RowBox[{"DilationImageVesselness", ",", " ", "1"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{"LocList", " ", "=", " ", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"LocFunc", "[", "#", "]"}], "&"}], ",", " ", "DilationPos"}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"LocList", " ", "=", " ", 
    RowBox[{"ArrayReshape", "[", 
     RowBox[{"LocList", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "@", 
          RowBox[{"(", 
           RowBox[{"Flatten", "@", "LocList"}], ")"}]}], "/", "3"}], ",", 
        "3"}], "}"}]}], "]"}]}], ";"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Here", " ", "we", " ", "set", " ", "the", " ", "neigborhood", " ", "of", 
    " ", "the", " ", "points", " ", "that", " ", "have", " ", "value", " ", 
    "1", " ", "to", " ", "1"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Map", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"SetValueToOne", "[", 
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"#", "[", 
        RowBox[{"[", "2", "]"}], "]"}], ",", 
       RowBox[{"#", "[", 
        RowBox[{"[", "3", "]"}], "]"}]}], "]"}], "&"}], ",", " ", "LocList"}],
    "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Image3D", "[", "DilationImageVesselness", "]"}]}], "Input",
 CellChangeTimes->{{3.908351970145547*^9, 3.908351976762072*^9}, {
   3.9083521435559835`*^9, 3.908352176733479*^9}, {3.908879060650756*^9, 
   3.908879066927425*^9}, {3.908879564900296*^9, 3.9088795663726406`*^9}, {
   3.9094782105497503`*^9, 3.909478214579474*^9}, 3.9146558070697236`*^9, {
   3.914655866655632*^9, 3.914655920345796*^9}, {3.9146559702880783`*^9, 
   3.914655977002267*^9}, {3.927688784181061*^9, 3.9276888239181404`*^9}, {
   3.927688893795107*^9, 3.927688904387184*^9}, {3.927688956236249*^9, 
   3.9276890051525*^9}, {3.9276904409367504`*^9, 3.9276904412728186`*^9}, {
   3.9276905597706146`*^9, 3.9276905910393534`*^9}, {3.92769062340571*^9, 
   3.9276906293409047`*^9}, {3.9276907034282117`*^9, 3.927690705426056*^9}, {
   3.9276908508275948`*^9, 3.927690882096531*^9}, {3.927697583503583*^9, 
   3.9276975890289664`*^9}, {3.9276977312474813`*^9, 3.927697762720525*^9}, {
   3.9277010041125517`*^9, 3.9277010070420675`*^9}, {3.92770109700008*^9, 
   3.927701123593384*^9}, {3.928228787669411*^9, 3.9282287917712345`*^9}},
 CellLabel->
  "In[958]:=",ExpressionUUID->"4511a6e7-5a03-46d8-81ca-d31ef92874ac"]
}, Closed]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Connected Components & Affinities", "Title",
 CellChangeTimes->{{3.9058480603276577`*^9, 3.9058480641681247`*^9}, {
  3.927193744433096*^9, 
  3.927193747025034*^9}},ExpressionUUID->"f3c89fb5-3658-4434-90e3-\
12db05fa2820"],

Cell[CellGroupData[{

Cell["Connected Components", "Chapter",
 CellChangeTimes->{{3.933846515610854*^9, 
  3.9338465184612055`*^9}},ExpressionUUID->"ec9c4ebe-ee91-4af2-ae6d-\
f1b041e435b1"],

Cell[CellGroupData[{

Cell["Binarized image", "Section",
 CellChangeTimes->{{3.905848138912648*^9, 3.9058481431755514`*^9}, 
   3.911029414553543*^9},ExpressionUUID->"fb627fb6-6fe5-4486-b206-\
0c753238b2ab"],

Cell[CellGroupData[{

Cell["Set parameters", "Subsection",
 CellChangeTimes->{{3.927175252602642*^9, 
  3.927175254369238*^9}},ExpressionUUID->"a470997d-a973-4e1b-a26f-\
c5aa3f95d724"],

Cell[BoxData[
 RowBox[{
  RowBox[{"w", "=", 
   RowBox[{"{", 
    RowBox[{"0.2", ",", "1", ",", "2"}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9229551492230735`*^9, 3.9229551577828813`*^9}, {
   3.9276169622543316`*^9, 3.9276169629942408`*^9}, {3.9276170125771723`*^9, 
   3.927617020751073*^9}, {3.9276172295389442`*^9, 3.9276172538347387`*^9}, {
   3.9276175002190523`*^9, 3.92761750709546*^9}, {3.927617634726796*^9, 
   3.9276176355610266`*^9}, {3.92761780303985*^9, 3.927617803423644*^9}, {
   3.9276179960218077`*^9, 3.927618006805703*^9}, {3.927618204449115*^9, 
   3.9276182080264025`*^9}, {3.9276188501376076`*^9, 3.92761885123576*^9}, {
   3.9276198758223963`*^9, 3.92761987742183*^9}, {3.927620137826053*^9, 
   3.9276201381733723`*^9}, {3.927620789776743*^9, 3.9276207916456614`*^9}, {
   3.9276210725161695`*^9, 3.927621074100271*^9}, {3.9276212689976335`*^9, 
   3.927621270176015*^9}, {3.9276214529098806`*^9, 3.9276214540094843`*^9}, {
   3.9276217969120607`*^9, 3.9276217969885216`*^9}, {3.9276234683359203`*^9, 
   3.9276234690455856`*^9}, {3.9276236020574074`*^9, 
   3.9276236026232224`*^9}, {3.9276237442802315`*^9, 
   3.9276237513380723`*^9}, {3.9276238571130943`*^9, 
   3.9276238630643263`*^9}, {3.927623954645686*^9, 3.927623956568833*^9}, {
   3.9276240447654467`*^9, 3.92762404527864*^9}, 3.9276247346133404`*^9, {
   3.9276249910609016`*^9, 3.9276249913928604`*^9}, {3.9277014826362114`*^9, 
   3.9277014998637857`*^9}, {3.927702017083947*^9, 3.927702101795405*^9}, {
   3.9277022919469147`*^9, 3.927702292116638*^9}, 3.9277027518780813`*^9, {
   3.9277029788144035`*^9, 3.927702985844032*^9}, {3.9277031695670547`*^9, 
   3.927703172216302*^9}, {3.9282236037751813`*^9, 3.9282236164152994`*^9}, {
   3.9282285138226023`*^9, 3.928228513892565*^9}, {3.9282286279337263`*^9, 
   3.928228629033059*^9}, {3.928229165307829*^9, 3.928229166361247*^9}, {
   3.9282292417465634`*^9, 3.9282292461753798`*^9}, {3.9288327055644536`*^9, 
   3.9288327110411053`*^9}, {3.928833286609192*^9, 3.9288332900809116`*^9}, 
   3.9288336020323772`*^9, {3.928833679802304*^9, 3.92883368077604*^9}, 
   3.928833793289456*^9, {3.928833865356125*^9, 3.9288338692202024`*^9}, {
   3.9288340436049576`*^9, 3.9288340437212205`*^9}, {3.9288341341285367`*^9, 
   3.9288341348776026`*^9}, {3.9288345919926224`*^9, 
   3.9288345935301304`*^9}, {3.9288351444823437`*^9, 3.92883515593102*^9}, {
   3.9288354018790765`*^9, 3.92883540395078*^9}, {3.9288991363755293`*^9, 
   3.9288991388311696`*^9}, 3.9288992402400064`*^9, 3.928899393314587*^9, {
   3.9288994831190434`*^9, 3.9288994870223465`*^9}, 3.9288996179180174`*^9, {
   3.9324613721006036`*^9, 3.9324613721960545`*^9}, {3.9324615285070076`*^9, 
   3.932461528917899*^9}},
 CellLabel->
  "In[1011]:=",ExpressionUUID->"57bda0c9-b95f-4d0e-8ad7-a3acb3c02139"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "If", " ", "this", " ", "is", " ", "changed", " ", "run", " ", "all", " ", 
    "following", " ", "cells", " ", "again"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"orientations", " ", "=", " ", "No"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"\[Theta]step", " ", "=", " ", 
     RowBox[{"2", 
      RowBox[{"\[Pi]", "/", "orientations"}]}]}], ";"}]}]}]], "Code",
 InitializationCell->False,
 CellChangeTimes->{{3.890286943106577*^9, 3.890286946560541*^9}, 
   3.905852055962388*^9, {3.905933707482855*^9, 3.9059337076888895`*^9}, {
   3.9276233622500706`*^9, 3.9276233623231544`*^9}, 3.9276244433049235`*^9},
 CellLabel->
  "In[968]:=",ExpressionUUID->"269ca9a7-3480-4a0c-9e5e-305b4d19de68"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"imagebindata", "=", 
   RowBox[{"(*", 
    RowBox[{"Transpose", "[", 
     RowBox[{
      RowBox[{"ImageData", "[", "thinCost", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "3", ",", "1"}], "}"}]}], "]"}], "*)"}], 
   RowBox[{"DilationImageVesselness", "[", 
    RowBox[{"[", " ", 
     RowBox[{"All", ",", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", "d"}], "+", "1"}], ")"}], ";;", 
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", "d"}], "+", "1"}], ")"}]}]}], ",", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", "d"}], "+", "1"}], ")"}], ";;", 
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", "d"}], "+", "1"}], ")"}]}]}]}], " ", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"imagebindata", "[", 
    RowBox[{"[", 
     RowBox[{"1", ";;", 
      RowBox[{"No", "/", "4"}]}], "]"}], "]"}], "=", 
   RowBox[{"imagebindata", "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"1", "+", 
       RowBox[{"2", 
        RowBox[{"No", "/", "4"}]}]}], ";;", 
      RowBox[{"3", 
       RowBox[{"No", "/", "4"}]}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"imagebindata", "[", 
     RowBox[{"[", 
      RowBox[{
       RowBox[{
        RowBox[{"3", 
         RowBox[{"No", "/", "4"}]}], "+", "1"}], ";;", "No"}], "]"}], "]"}], 
    "=", 
    RowBox[{"imagebindata", "[", 
     RowBox[{"[", 
      RowBox[{
       RowBox[{
        RowBox[{"No", "/", "4"}], "+", "1"}], ";;", 
       RowBox[{"2", 
        RowBox[{"No", "/", "4"}]}]}], "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Using", " ", "bifurcation", " ", "or", " ", "not"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"imagebindata", "\[LeftDoubleBracket]", 
         RowBox[{"All", ",", 
          RowBox[{"Sequence", "@@", "#"}]}], "\[RightDoubleBracket]"}], "=", 
        "1"}], ";"}], "&"}], ",", "seedsNew"}], "]"}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"constantmatrix", "=", " ", 
     RowBox[{"ConstantArray", "[", 
      RowBox[{"0", ",", " ", 
       RowBox[{"Dimensions", "[", 
        RowBox[{"Transpose", "[", 
         RowBox[{
          RowBox[{"ImageData", "[", "thinCost", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"2", ",", "3", ",", "1"}], "}"}]}], "]"}], "]"}]}], 
      "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"constantmatrix", "\[LeftDoubleBracket]", 
          RowBox[{"All", ",", 
           RowBox[{"Sequence", "@@", "#"}]}], "\[RightDoubleBracket]"}], "=", 
         "1"}], ";"}], "&"}], ",", "seedsIndex"}], "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"imagebindata", "=", " ", 
     RowBox[{
      RowBox[{"Dilation", "[", 
       RowBox[{"constantmatrix", ",", "1"}], "]"}], "+", "imagebindata"}]}], 
    ";"}], "*)"}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.914488936547594*^9, 3.9144889399828777`*^9}, {
   3.914489011124015*^9, 3.9144890444504495`*^9}, {3.927621679044322*^9, 
   3.9276217900883055`*^9}, 3.9276218838972797`*^9, 3.9276221200135365`*^9, {
   3.927622469260744*^9, 3.927622469876354*^9}, {3.927622708778201*^9, 
   3.9276227975512075`*^9}, {3.927622839484439*^9, 3.927622851335369*^9}, {
   3.9276229177804427`*^9, 3.9276229181444535`*^9}, {3.927623011638422*^9, 
   3.927623016495335*^9}, {3.927623050446451*^9, 3.927623122704116*^9}, {
   3.9276232863024426`*^9, 3.9276233516322365`*^9}, 3.9276244503041673`*^9, {
   3.9276247385707073`*^9, 3.9276247443416224`*^9}, {3.9276251135968723`*^9, 
   3.9276251139333076`*^9}, {3.927625208034071*^9, 3.9276252292996964`*^9}, {
   3.927697032083026*^9, 3.927697053275936*^9}, {3.9277011070180006`*^9, 
   3.9277011154038277`*^9}, {3.9277012533624525`*^9, 
   3.9277012726774035`*^9}, {3.9277017860218997`*^9, 3.927701872767044*^9}, {
   3.927701912652029*^9, 3.927701944375142*^9}, {3.9277021134054675`*^9, 
   3.927702124401985*^9}, {3.92770228102229*^9, 3.9277023118922415`*^9}, {
   3.9277024939142056`*^9, 3.927702525409214*^9}, {3.9277029692785606`*^9, 
   3.9277029748668766`*^9}, {3.9277031604164224`*^9, 3.927703165203935*^9}, 
   3.927705770527914*^9, {3.9277060781416335`*^9, 3.927706088138143*^9}, {
   3.928223591821562*^9, 3.9282235975569825`*^9}, {3.9282287673490105`*^9, 
   3.9282287708935385`*^9}, {3.928557255644044*^9, 3.9285572676205435`*^9}, {
   3.928830568610335*^9, 3.9288305829893603`*^9}, 3.92889507397097*^9, {
   3.928916359889659*^9, 3.9289163606144943`*^9}},
 CellLabel->
  "In[970]:=",ExpressionUUID->"a8bcf5e6-9b95-41b5-ae5e-12319b7b9397"],

Cell[BoxData[
 RowBox[{"Dimensions", "[", "imagebindata", "]"}]], "Input",
 CellChangeTimes->{{3.927701276980775*^9, 3.92770128680569*^9}},
 CellLabel->
  "In[974]:=",ExpressionUUID->"fefbcdbf-4833-4a7d-be9a-32fda0e5fba3"],

Cell[BoxData[
 RowBox[{"Image3D", "[", "imagebindata", "]"}]], "Input",
 CellChangeTimes->{{3.9277024660619335`*^9, 3.927702471672648*^9}},
 CellLabel->
  "In[975]:=",ExpressionUUID->"47a9f1cc-83b5-458a-bf5d-9eaf73e09e75"]
}, Closed]],

Cell[CellGroupData[{

Cell["Calculate Connected Components", "Subsection",
 CellChangeTimes->{{3.927175256452815*^9, 
  3.9271752630695376`*^9}},ExpressionUUID->"9af02a4a-2888-4eb2-8b0f-\
aea8661622aa"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"d", "=", "32"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Theta]step", "=", 
    RowBox[{"2", 
     RowBox[{"\[Pi]", "/", "orientations"}]}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"alpha", " ", "=", " ", 
   RowBox[{"2", "*", "0.65"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"beta", " ", "=", " ", 
    RowBox[{"1", "/", 
     RowBox[{"(", 
      RowBox[{"1", " ", "-", " ", 
       RowBox[{"1", "/", "alpha"}]}], ")"}]}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"DilationKernel", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"1", "/", "beta"}], " ", "*", " ", 
      SuperscriptBox[
       RowBox[{"halfAngleApproxmation", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"x", ",", "y", ",", "\[Theta]"}], "}"}], ",", "w"}], "]"}], 
       "beta"]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "d"}], ",", "d"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", 
       RowBox[{"-", "d"}], ",", "d"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Theta]", ",", 
       RowBox[{
        RowBox[{"-", "d"}], " ", "\[Theta]step"}], ",", 
       RowBox[{"d", " ", "\[Theta]step"}], ",", "\[Theta]step"}], "}"}]}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Dimensions", "[", "DilationKernel", "]"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Table", "[", "\n", "\t", 
    RowBox[{
     RowBox[{"Map", "[", 
      RowBox[{"Image", ",", 
       RowBox[{"Transpose", "[", 
        RowBox[{
         RowBox[{"List3DRotate2D", "[", 
          RowBox[{"DilationKernel", ",", 
           RowBox[{"\[Theta]step", 
            RowBox[{"(", 
             RowBox[{"i", "-", "1"}], ")"}]}], ",", 
           RowBox[{"d", "+", "1"}], ",", 
           RowBox[{"d", "+", "1"}], ",", 
           SuperscriptBox["10", "7"]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", "3", ",", "1"}], "}"}]}], "]"}]}], "]"}], ",", 
     "\n", "\t", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "8"}], "}"}]}], "\n", "]"}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"dilationtable", " ", "=", " ", 
    RowBox[{"Table", "[", "\n", "\t", 
     RowBox[{
      RowBox[{"List3DRotate2D", "[", 
       RowBox[{"DilationKernel", ",", 
        RowBox[{"\[Theta]step", 
         RowBox[{"(", 
          RowBox[{"i", "-", "1"}], ")"}]}], ",", 
        RowBox[{"d", "+", "1"}], ",", 
        RowBox[{"d", "+", "1"}], ",", 
        SuperscriptBox["10", "7"]}], "]"}], ",", "\n", "\t", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "orientations"}], "}"}]}], "\n", "]"}]}], 
   ";"}], "\n", "\n", 
  RowBox[{"(*", 
   RowBox[{
   "list", " ", "of", " ", "points", " ", "that", " ", "are", " ", "within", 
    " ", "reach"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"withinReach", " ", "=", " ", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Position", "[", 
        RowBox[{
         RowBox[{"Ramp", "[", 
          RowBox[{
           RowBox[{"dilationtable", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "-", "1"}], "]"}], ",", "0."}], 
        "]"}], "-", 
       RowBox[{"(", 
        RowBox[{"d", "+", "1"}], ")"}]}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "orientations"}], "}"}]}], "]"}]}], ";"}], 
  "\n", "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Map", "[", 
     RowBox[{"Image", ",", 
      RowBox[{"Transpose", "[", 
       RowBox[{"DilationKernel", ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "1", ",", "2"}], "}"}]}], "]"}]}], "]"}], ";"}], 
   "*)"}], "\n", "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"set", " ", "k"}], "=", "0"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"k", "=", "0"}], ";"}], "\n", "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"set", " ", "\[ScriptCapitalI]"}], "=", "I"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"setI", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"imagebindata", ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "1", ",", "2"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"Nx", ",", "Ny"}], "}"}], "=", 
    RowBox[{
     RowBox[{"Dimensions", "[", "setI", "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"1", ";;", "2"}], "]"}], "]"}]}], ";"}], "\n", "\n", 
  RowBox[{"(*", 
   RowBox[{"(*", 
    RowBox[{"adding", " ", "lifts"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"setI", "\[LeftDoubleBracket]", 
          RowBox[{
           RowBox[{"Sequence", "@@", 
            RowBox[{"(", "#", 
             RowBox[{"(*", 
              RowBox[{"-", 
               RowBox[{"{", 
                RowBox[{"ySelect", ",", "0"}], "}"}]}], "*)"}], ")"}]}], ",", 
           "All"}], "\[RightDoubleBracket]"}], "=", "1"}], ";"}], "&"}], ",", 
      RowBox[{"g0dListStartAndBifurcation", "[", 
       RowBox[{"[", 
        RowBox[{";;", ",", 
         RowBox[{"2", ";;"}]}], "]"}], "]"}]}], "]"}], ";"}], "*)"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"setIlist", "=", 
    RowBox[{"Position", "[", 
     RowBox[{"setI", ",", "1"}], "]"}]}], ";"}], "\n", "\n", 
  RowBox[{"(*", 
   RowBox[{"Connected", " ", "component", " ", "volume"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"setICC", "=", 
    RowBox[{"ConstantArray", "[", 
     RowBox[{"0", ",", 
      RowBox[{"Dimensions", "[", "setI", "]"}]}], "]"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"progress", "=", "0.0"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"total", "=", 
    RowBox[{"Length", "[", "setIlist", "]"}]}], ";"}], "\n", "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"while", " ", "I"}], "!=", "\[EmptySet]"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"AbsoluteTiming", "[", "\n", 
   RowBox[{"Monitor", "[", 
    RowBox[{
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Position", "[", 
         RowBox[{"setI", ",", "1"}], "]"}], "!=", 
        RowBox[{"{", "}"}]}], ",", "\n", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"update", " ", "k"}], "=", 
         RowBox[{"k", "+", "1"}]}], "*)"}], "\n", 
       RowBox[{
        RowBox[{"k", "+=", "1"}], ";", "\n", "\n", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Pick", " ", 
           SubscriptBox["g", "0"]}], " ", "\[Element]", " ", "I"}], "*)"}], 
        "\n", 
        RowBox[{"g", "=", 
         RowBox[{
          RowBox[{"Position", "[", 
           RowBox[{"setI", ",", "1"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ";", "\n", "\n", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{
          "Initialize", " ", "Connected", " ", "Component", " ", "sets", " ", 
           SuperscriptBox[
            SubscriptBox["C", 
             SubscriptBox["g", "0"]], 
            RowBox[{"-", "1"}]]}], ",", " ", 
          SuperscriptBox[
           SubscriptBox["C", 
            SubscriptBox["g", "0"]], "0"]}], "*)"}], "\n", 
        RowBox[{"Cold", "=", 
         RowBox[{"{", "}"}]}], ";", "\n", 
        RowBox[{"Cnew", "=", 
         RowBox[{"{", "g", "}"}]}], ";", "\n", 
        RowBox[{"newAdded", "=", 
         RowBox[{"{", "g", "}"}]}], ";", "\n", "\n", 
        RowBox[{"(*", 
         RowBox[{"Morphological", " ", "Convolutions"}], "*)"}], "\n", 
        RowBox[{"While", "[", 
         RowBox[{
          RowBox[{"newAdded", "!=", 
           RowBox[{"{", "}"}]}], ",", "\n", 
          RowBox[{
           RowBox[{"Cold", "=", "Cnew"}], ";", "\n", 
           RowBox[{"reachableFromNewAdded", "=", 
            RowBox[{"Map", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Mod", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"ConstantArray", "[", 
                   RowBox[{"#", ",", 
                    RowBox[{"Length", "[", 
                    RowBox[{"withinReach", "[", 
                    RowBox[{"[", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], "]"}], "]"}], "]"}]}], 
                   "]"}], "+", 
                  RowBox[{"withinReach", "[", 
                   RowBox[{"[", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], "]"}], "]"}]}], ",", "\n",
                  "\t\t\t\t\t\t\t\t", 
                 RowBox[{"ConstantArray", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Nx", "+", 
                    RowBox[{"2", "d"}]}], ",", 
                    RowBox[{"Ny", "+", 
                    RowBox[{"2", "d"}]}], ",", "orientations"}], "}"}], ",", 
                   RowBox[{"Length", "[", 
                    RowBox[{"withinReach", "[", 
                    RowBox[{"[", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], "]"}], "]"}], "]"}]}], 
                  "]"}], ",", "\n", "\t\t\t\t\t\t\t\t", 
                 RowBox[{"ConstantArray", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
                   RowBox[{"Length", "[", 
                    RowBox[{"withinReach", "[", 
                    RowBox[{"[", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], "]"}], "]"}], "]"}]}], 
                  "]"}]}], "]"}], "&"}], ",", "newAdded"}], "]"}]}], ";", 
           "\n", 
           RowBox[{"reachableFromNewAddedonI", "=", 
            RowBox[{"Intersection", "[", 
             RowBox[{"setIlist", ",", 
              RowBox[{"ArrayReshape", "[", 
               RowBox[{"reachableFromNewAdded", ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Length", "[", 
                    RowBox[{"Flatten", "@", "reachableFromNewAdded"}], "]"}], 
                   "/", "3"}], ",", "3"}], "}"}]}], "]"}]}], "]"}]}], ";", 
           "\n", 
           RowBox[{"newAdded", "=", 
            RowBox[{"Complement", "[", 
             RowBox[{"reachableFromNewAddedonI", ",", "Cold"}], "]"}]}], ";", 
           "\n", 
           RowBox[{"Cnew", "=", 
            RowBox[{"Union", "[", 
             RowBox[{"Cold", ",", "newAdded"}], "]"}]}], ";", "\n", 
           RowBox[{"progress", "=", 
            RowBox[{"1", "-", 
             RowBox[{
              RowBox[{"Total", "[", 
               RowBox[{"setI", ",", "3"}], "]"}], "/", "total"}], "+", 
             RowBox[{
              RowBox[{"Length", "[", 
               RowBox[{"DeleteDuplicates", "[", "Cnew", "]"}], "]"}], "/", 
              "total"}]}]}], ";"}]}], "\n", "]"}], ";", "\[IndentingNewLine]",
         "\n", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"set", " ", 
           SubscriptBox["\[ScriptCapitalC]", "k"]}], ":=", 
          RowBox[{
           SuperscriptBox[
            SubscriptBox["C", 
             SubscriptBox["g", "0"]], "n"], "=", "Cnew"}]}], "*)"}], "\n", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"setICC", "[", 
             RowBox[{"[", 
              RowBox[{"Sequence", "@@", "#"}], "]"}], "]"}], "=", "k"}], 
           ")"}], "&"}], "/@", "Cnew"}], ";", "\n", "\n", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"update", " ", "\[ScriptCapitalI]"}], "=", 
          RowBox[{"\[ScriptCapitalI]", "\\", 
           SubscriptBox["\[ScriptCapitalC]", "k"]}]}], "*)"}], "\n", 
        RowBox[{"setI", "*=", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"Clip", "[", "setICC", "]"}]}], ")"}]}], ";", "\n", 
        RowBox[{"setIlist", "=", 
         RowBox[{"Position", "[", 
          RowBox[{"setI", ",", "1"}], "]"}]}], ";"}]}], "\n", "\n", "]"}], 
     ",", " ", 
     RowBox[{"{", 
      RowBox[{"ProgressIndicator", "[", "progress", "]"}], "}"}]}], "]"}], 
   "]"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"AbsoluteTiming", "[", 
    RowBox[{
     RowBox[{"connectivity", "=", 
      RowBox[{"ParallelTable", "[", 
       RowBox[{
        RowBox[{"Intersection", "[", 
         RowBox[{"setIlist", ",", 
          RowBox[{
           RowBox[{"ConstantArray", "[", 
            RowBox[{
             RowBox[{"setIlist", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", 
             RowBox[{"Length", "[", 
              RowBox[{"withinReach", "[", 
               RowBox[{"[", 
                RowBox[{"setIlist", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", "3"}], "]"}], "]"}], "]"}], "]"}], 
              "]"}]}], "]"}], "+", 
           RowBox[{"withinReach", "[", 
            RowBox[{"[", 
             RowBox[{"setIlist", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "3"}], "]"}], "]"}], "]"}], "]"}]}]}], "]"}],
         ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "setIlist", "]"}]}], "}"}]}], "]"}]}], ";"}],
     "]"}], "*)"}]}]}], "Code",
 InitializationCell->False,
 CellChangeTimes->{{3.9059174818996477`*^9, 3.9059175620678177`*^9}, {
   3.9059176306544766`*^9, 3.9059176730942545`*^9}, {3.9059177527591295`*^9, 
   3.905917819865033*^9}, 3.905917861009328*^9, {3.905917926573958*^9, 
   3.905917933496333*^9}, {3.905918033935066*^9, 3.905918103343012*^9}, {
   3.9059181618397427`*^9, 3.905918181000431*^9}, {3.905918334560006*^9, 
   3.905918360150729*^9}, {3.905918426188959*^9, 3.905918443790374*^9}, {
   3.9059267068822813`*^9, 3.9059267974585247`*^9}, {3.9059268339823256`*^9, 
   3.9059268344065795`*^9}, {3.9059268743155603`*^9, 3.905927036270793*^9}, {
   3.9059270679381585`*^9, 3.905927312914645*^9}, {3.9059290332310233`*^9, 
   3.9059291120592947`*^9}, {3.9059293477430325`*^9, 
   3.9059293916786613`*^9}, {3.9059295075284967`*^9, 3.90592961597836*^9}, {
   3.905929672475383*^9, 3.9059296730934105`*^9}, {3.9059300515427046`*^9, 
   3.905930095173456*^9}, {3.905930151582816*^9, 3.9059302498116035`*^9}, {
   3.905930304762687*^9, 3.9059303334668036`*^9}, {3.905930371390701*^9, 
   3.905930410760631*^9}, {3.9059306236559258`*^9, 3.9059306458842273`*^9}, {
   3.9059309994115252`*^9, 3.9059310158403473`*^9}, {3.905931061710208*^9, 
   3.905931217943781*^9}, {3.905932156703105*^9, 3.905932200260456*^9}, {
   3.9059322931947904`*^9, 3.9059323822381735`*^9}, {3.90593260881618*^9, 
   3.905932642370202*^9}, 3.9059335444185557`*^9, 3.905934656601919*^9, {
   3.905934724585662*^9, 3.905934729744134*^9}, {3.906001084756899*^9, 
   3.9060011359142857`*^9}, {3.9060017708361998`*^9, 
   3.9060017773538156`*^9}, {3.906001923613333*^9, 3.9060019481325617`*^9}, {
   3.9060055655010257`*^9, 3.9060056383627515`*^9}, {3.906006740288844*^9, 
   3.9060068118843327`*^9}, {3.9060134477130013`*^9, 3.906013457755302*^9}, {
   3.906013879501503*^9, 3.9060139020525804`*^9}, {3.9060141186392956`*^9, 
   3.9060141502056313`*^9}, {3.9060141945472045`*^9, 
   3.9060142400554647`*^9}, {3.90601428171433*^9, 3.9060142871169243`*^9}, {
   3.9060143217750387`*^9, 3.906014351968088*^9}, {3.906014400045596*^9, 
   3.9060144198418045`*^9}, {3.906014592774339*^9, 3.906014593242447*^9}, {
   3.906014660337558*^9, 3.9060146762751765`*^9}, {3.9060153251404247`*^9, 
   3.90601535619525*^9}, {3.90601561358232*^9, 3.906015634798956*^9}, {
   3.906016392745878*^9, 3.906016392830969*^9}, {3.9060245459219584`*^9, 
   3.9060245539301906`*^9}, {3.9060246431144314`*^9, 
   3.9060246754210086`*^9}, {3.9060247067793655`*^9, 3.906024734332477*^9}, {
   3.9060249255213494`*^9, 3.906024946158149*^9}, {3.9060251124297447`*^9, 
   3.90602514808193*^9}, {3.906025445023749*^9, 3.9060254450743217`*^9}, 
   3.9060266645969753`*^9, {3.906026729392296*^9, 3.9060267570023894`*^9}, 
   3.9060273281074123`*^9, 3.906028722613384*^9, {3.9060294959880123`*^9, 
   3.90602953847771*^9}, {3.906029600627861*^9, 3.9060296093162413`*^9}, {
   3.906029652891245*^9, 3.906029709970929*^9}, 3.906029746923587*^9, {
   3.90602977988369*^9, 3.906029790909172*^9}, {3.906030126968068*^9, 
   3.906030142538841*^9}, {3.906030240725149*^9, 3.90603024770323*^9}, {
   3.9060304484056644`*^9, 3.906030454229089*^9}, {3.9060318863686185`*^9, 
   3.906031895697443*^9}, {3.9060811528422136`*^9, 3.906081154131648*^9}, 
   3.9060932224323883`*^9, {3.9061043256958714`*^9, 3.906104327683872*^9}, 
   3.90610483866105*^9, 3.9061103964586363`*^9, {3.906114182408111*^9, 
   3.906114219759761*^9}, 3.9061878430517797`*^9, 3.9061903661940684`*^9, 
   3.906191527793688*^9, {3.9061982834283724`*^9, 3.9061982848651657`*^9}, 
   3.906445204709363*^9, {3.9072393251930714`*^9, 3.907239388059399*^9}, {
   3.907239456384435*^9, 3.9072394600594225`*^9}, 3.907239508925485*^9, {
   3.9072396991080694`*^9, 3.90723970105814*^9}, {3.9072398096968794`*^9, 
   3.9072398108626065`*^9}, {3.907240655920842*^9, 3.9072406871537714`*^9}, {
   3.907387432160984*^9, 3.9073874323377104`*^9}, {3.9073875183837347`*^9, 
   3.9073875200064774`*^9}, 3.910238678686391*^9, 3.9102437028802247`*^9, 
   3.91025064980122*^9, 3.9102513099472227`*^9, 3.9110299039191656`*^9, 
   3.9110302888427935`*^9, {3.9229551544944396`*^9, 3.9229551549840975`*^9}, {
   3.9276168939709997`*^9, 3.9276169239704885`*^9}, 3.9282285380210867`*^9, 
   3.928834144733038*^9, 3.9288348772709274`*^9},
 CellLabel->
  "In[1012]:=",ExpressionUUID->"6d01318d-c54b-4ec4-8f87-213498094ce7"]
}, Closed]],

Cell[CellGroupData[{

Cell["Visualize results", "Subsection",
 CellChangeTimes->{{3.927175270902731*^9, 
  3.9271752761360765`*^9}},ExpressionUUID->"eb419da7-1c67-47cb-8e38-\
104ee6b4c272"],

Cell[BoxData[
 RowBox[{"Colorize", "[", "setICC", "]"}]], "Input",
 CellChangeTimes->{{3.9101759564643297`*^9, 3.9101759607303095`*^9}},
 CellLabel->
  "In[361]:=",ExpressionUUID->"ab8ed823-70e1-4675-b328-0d52555496cf"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"thinCost", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{
     RowBox[{"ImageData", "[", "thinCost", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "3", ",", "1"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"thinCost", "[", 
    RowBox[{"[", 
     RowBox[{"1", ";;", 
      RowBox[{"No", "/", "4"}]}], "]"}], "]"}], "=", 
   RowBox[{"thinCost", "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{"1", "+", 
       RowBox[{"2", 
        RowBox[{"No", "/", "4"}]}]}], ";;", 
      RowBox[{"3", 
       RowBox[{"No", "/", "4"}]}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"thinCost", "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{
       RowBox[{"3", 
        RowBox[{"No", "/", "4"}]}], "+", "1"}], ";;", "No"}], "]"}], "]"}], 
   "=", 
   RowBox[{"thinCost", "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{
       RowBox[{"No", "/", "4"}], "+", "1"}], ";;", 
      RowBox[{"2", 
       RowBox[{"No", "/", "4"}]}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"thinCost", "=", 
   RowBox[{"Binarize", "[", 
    RowBox[{"Image3D", "[", 
     RowBox[{"Transpose", "[", 
      RowBox[{"thinCost", ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "1", ",", "2"}], "}"}]}], "]"}], "]"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.9289163823917246`*^9, 3.928916419124476*^9}, {
  3.9289166378258586`*^9, 3.9289166631048145`*^9}, {3.9289168131695194`*^9, 
  3.9289168173923883`*^9}, {3.928984301466735*^9, 3.9289843062442017`*^9}, {
  3.9289875923206697`*^9, 3.9289876140504837`*^9}},
 CellLabel->
  "In[1006]:=",ExpressionUUID->"f68cacee-1fa7-449a-8c83-9b9e210a36a3"],

Cell[BoxData[
 RowBox[{"Colorize", "[", 
  RowBox[{"Map", "[", 
   RowBox[{"Max", ",", 
    RowBox[{"setICC", "*", 
     RowBox[{"ImageData", "[", "thinCost", "]"}]}], ",", 
    RowBox[{"{", "2", "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.914570476524085*^9, 3.914570488402583*^9}, {
  3.9289160522570148`*^9, 3.9289161075877714`*^9}, {3.928916423670127*^9, 
  3.928916424796316*^9}, {3.9289166656498947`*^9, 3.9289166790209064`*^9}, {
  3.9289168208227863`*^9, 3.9289168220021086`*^9}, {3.9289843091020703`*^9, 
  3.9289843143070073`*^9}},
 CellLabel->
  "In[1029]:=",ExpressionUUID->"e6dd27d2-4546-4c03-99c9-bfbe5136060e"],

Cell[TextData[{
 "Accurate way to dilate the data for the found connected components (in ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[DoubleStruckCapitalR]", "3"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "115c4982-d87a-4062-94ae-e4aeae8adaf2"],
 "), but not very fast; result: 3D array"
}], "Text",
 CellChangeTimes->{{3.9271753467526593`*^9, 
  3.927175462421457*^9}},ExpressionUUID->"8adc4092-5283-42aa-8e3a-\
fc775230486a"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"setICCwider", "=", 
    RowBox[{"ImageData", "[", 
     RowBox[{"Dilation", "[", 
      RowBox[{
       RowBox[{"Image3D", "@", "setICC"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "1", ",", "0"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}]}], "}"}]}], 
      "]"}], "]"}]}], ";"}], "*)"}]], "Input",
 CellChangeTimes->{{3.9144900148621387`*^9, 3.91449002079473*^9}, {
  3.9144901180497694`*^9, 3.914490118782054*^9}, {3.9144901696715*^9, 
  3.9144902076942816`*^9}, {3.92717534007545*^9, 3.9271753446028957`*^9}},
 CellLabel->
  "In[368]:=",ExpressionUUID->"d4c4be60-4ce4-40fa-a74e-33eece6e0aa2"],

Cell[TextData[{
 "Less accurate way to dilate the data for the found connected components (in \
",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[DoubleStruckCapitalR]", "2"], TraditionalForm]],
  ExpressionUUID->"e4f4109e-e8bd-46c0-b051-db25a0e5497a"],
 "), but very fast; result: 2D array"
}], "Text",
 CellChangeTimes->{
  3.927175471902105*^9, {3.9271755045893736`*^9, 3.927175518390676*^9}, {
   3.927175552318918*^9, 
   3.9271755624525356`*^9}},ExpressionUUID->"ea6bd6f0-a525-44ad-9e45-\
99bfbe6f65cd"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"fast", " ", "to", " ", "calculate"}], ",", " ", 
    RowBox[{
    "but", " ", "less", " ", "accurate", " ", "compared", " ", "to", " ", 
     "other", " ", "methods"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"setICCwider", "=", 
    RowBox[{"ImageData", "[", 
     RowBox[{"Dilation", "[", 
      RowBox[{
       RowBox[{"Image", "@", 
        RowBox[{"Map", "[", 
         RowBox[{"Max", ",", 
          RowBox[{"setICC", "*", 
           RowBox[{"ImageData", "[", "thinCost", "]"}]}], ",", 
          RowBox[{"{", "2", "}"}]}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1", ",", "0"}], "}"}]}], "}"}]}], "]"}], "]"}]}],
    ";"}]}]], "Input",
 CellChangeTimes->{{3.9145702208395386`*^9, 3.9145702391352053`*^9}, {
   3.914570525346574*^9, 3.914570558307063*^9}, 3.928916709685344*^9, {
   3.9289168287672944`*^9, 3.9289168312983713`*^9}, {3.928984323170306*^9, 
   3.9289843283045745`*^9}},
 CellLabel->
  "In[760]:=",ExpressionUUID->"24d5228d-d989-419c-b210-5a5e8b3ac6c1"],

Cell[BoxData[
 RowBox[{"MinMax", "[", "setICCwider", "]"}]], "Input",
 CellChangeTimes->{{3.9145702698628426`*^9, 3.9145702716305933`*^9}},
 CellLabel->
  "In[370]:=",ExpressionUUID->"2befacbb-5a51-4daf-8ea4-1d5d0be8a094"],

Cell[BoxData[
 RowBox[{"Colorize", "[", 
  RowBox[{"Round", "[", "setICCwider", "]"}], 
  RowBox[{"(*", 
   RowBox[{",", 
    RowBox[{"ColorFunction", "->", "\"\<Rainbow\>\""}]}], "*)"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.9145702443248386`*^9, 3.914570279190914*^9}, {
   3.927709092072485*^9, 3.9277090958325415`*^9}, 3.928916718851085*^9},
 CellLabel->
  "In[371]:=",ExpressionUUID->"5a63770b-d40c-4ddc-903b-0549ced68254"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"i", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Binarize", "[", 
  RowBox[{"Image", "@", 
   RowBox[{"GaussianFilter", "[", 
    RowBox[{
     RowBox[{"Map", "[", 
      RowBox[{"Max", ",", 
       RowBox[{"Boole", "[", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"#", "-", "i"}], "==", "0"}], "&"}], ",", "setICC", ",", 
          RowBox[{"{", "3", "}"}]}], "]"}], "]"}], ",", 
       RowBox[{"{", "2", "}"}]}], "]"}], ",", "radiusBlurFilter"}], "]"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.9145697096319723`*^9, 3.9145697135206275`*^9}, {
  3.914569745887884*^9, 3.914569778901739*^9}, {3.927180524196048*^9, 
  3.927180525678816*^9}},
 CellLabel->
  "In[374]:=",ExpressionUUID->"a7a70ae1-cfe6-4e0a-86b5-ff14c21b3fe8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"best", " ", "result"}], ",", " ", 
    RowBox[{"but", " ", "slow", " ", "to", " ", "calculate"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"setICCdilated", "=", 
     RowBox[{"ConstantArray", "[", 
      RowBox[{"0", ",", 
       RowBox[{
        RowBox[{"Dimensions", "[", "setICC", "]"}], "[", 
        RowBox[{"[", 
         RowBox[{";;", "2"}], "]"}], "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"i", "=", "1"}], ",", 
     RowBox[{"i", "<=", 
      RowBox[{"Max", "[", "setICC", "]"}]}], ",", 
     RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"setICCGaussianFilter", "=", 
       RowBox[{"i", "*", 
        RowBox[{"ImageData", "@", 
         RowBox[{"Binarize", "[", 
          RowBox[{"Image", "@", 
           RowBox[{"GaussianFilter", "[", 
            RowBox[{
             RowBox[{"Map", "[", 
              RowBox[{"Max", ",", 
               RowBox[{"Boole", "[", 
                RowBox[{"Map", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"#", "-", "i"}], "==", "0"}], "&"}], ",", 
                  "setICC", ",", 
                  RowBox[{"{", "3", "}"}]}], "]"}], "]"}], ",", 
               RowBox[{"{", "2", "}"}]}], "]"}], ",", "radiusBlurFilter"}], 
            "]"}]}], "]"}]}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"setICCdilated", "=", 
       RowBox[{"Map", "[", 
        RowBox[{"Max", ",", 
         RowBox[{"Transpose", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"setICCdilated", ",", "setICCGaussianFilter"}], "}"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"3", ",", "1", ",", "2"}], "}"}]}], "]"}], ",", 
         RowBox[{"{", "3", "}"}]}], "]"}]}]}]}], "\[IndentingNewLine]", 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.9145695907662177`*^9, 3.914569621403097*^9}, {
  3.914569664409994*^9, 3.914569667405368*^9}, {3.9145697238898096`*^9, 
  3.9145697536780148`*^9}, {3.914570510580858*^9, 3.9145705192932653`*^9}},
 CellLabel->
  "In[376]:=",ExpressionUUID->"4cb7838d-110b-484c-99b7-1606ebd01ed8"],

Cell[BoxData[
 RowBox[{"Colorize", "[", 
  RowBox[{"Map", "[", 
   RowBox[{"Max", ",", "setICCdilated", ",", 
    RowBox[{"{", "2", "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.914499529010995*^9, 3.914499537724001*^9}},
 CellLabel->
  "In[372]:=",ExpressionUUID->"ae94fdbb-e0b3-4623-9b09-b08cd1f766a8"],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"Colorize", "@", 
    RowBox[{"Map", "[", 
     RowBox[{"Max", ",", "setICC", ",", 
      RowBox[{"{", "2", "}"}]}], "]"}]}], ",", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Graphics", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Red", ",", 
          RowBox[{"PointSize", "[", "0.01", "]"}], ",", 
          RowBox[{"PointImageCoordinates", "[", 
           RowBox[{"imhalf", ",", "seedsIndex"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Green", ",", 
          RowBox[{"PointSize", "[", "0.01", "]"}], ",", 
          RowBox[{"PointImageCoordinates", "[", 
           RowBox[{"imhalf", ",", "g1ListTiers"}], "]"}]}], "}"}]}], "}"}], 
      "]"}], ","}], "*)"}], 
   RowBox[{"ImageSize", "->", "800"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.9061878783457766`*^9, {3.906446008814418*^9, 3.9064460184303827`*^9}, {
   3.906446057342435*^9, 3.9064460620812645`*^9}, 3.906446153820974*^9, 
   3.914489503655367*^9},
 CellLabel->
  "In[373]:=",ExpressionUUID->"e216cdf7-7229-4f9f-9921-5c2bc550dbb8"],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"Colorize", "@", 
    RowBox[{"Map", "[", 
     RowBox[{"Max", ",", 
      RowBox[{"Round", "[", "setICCwider", "]"}], ",", 
      RowBox[{"{", "2", "}"}]}], "]"}]}], ",", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Graphics", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Red", ",", 
          RowBox[{"PointSize", "[", "0.01", "]"}], ",", 
          RowBox[{"PointImageCoordinates", "[", 
           RowBox[{"imhalf", ",", "seedsIndex"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Green", ",", 
          RowBox[{"PointSize", "[", "0.01", "]"}], ",", 
          RowBox[{"PointImageCoordinates", "[", 
           RowBox[{"imhalf", ",", "g1ListTiers"}], "]"}]}], "}"}]}], "}"}], 
      "]"}], ","}], "*)"}], 
   RowBox[{"ImageSize", "->", "800"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9144900405477057`*^9, 3.9144900422075877`*^9}, {
  3.9144900953288116`*^9, 3.914490097006687*^9}},
 CellLabel->
  "In[374]:=",ExpressionUUID->"02c475c0-f27f-434c-a1f2-96c6c5055bf2"],

Cell[BoxData[
 RowBox[{"Image", "@", "imhalf"}]], "Input",
 CellChangeTimes->{{3.914491533495284*^9, 3.914491564467663*^9}},
 CellLabel->
  "In[375]:=",ExpressionUUID->"936d89a9-96c7-4820-b0aa-8c653b4a4df4"],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"Colorize", "@", 
    RowBox[{"Map", "[", 
     RowBox[{"Max", ",", 
      RowBox[{"MorphologicalComponents", "[", 
       RowBox[{"Transpose", "[", 
        RowBox[{"imagebindata", ",", 
         RowBox[{"{", 
          RowBox[{"3", ",", "1", ",", "2"}], "}"}]}], "]"}], "]"}], ",", 
      RowBox[{"{", "2", "}"}]}], "]"}]}], ",", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Graphics", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Red", ",", 
          RowBox[{"PointSize", "[", "0.01", "]"}], ",", 
          RowBox[{"PointImageCoordinates", "[", 
           RowBox[{"imhalf", ",", "seedsIndex"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Green", ",", 
          RowBox[{"PointSize", "[", "0.01", "]"}], ",", 
          RowBox[{"PointImageCoordinates", "[", 
           RowBox[{"imhalf", ",", "g1ListTiers"}], "]"}]}], "}"}]}], "}"}], 
      "]"}], ","}], "*)"}], 
   RowBox[{"ImageSize", "->", "800"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9144913178815203`*^9, 3.914491342600479*^9}, {
  3.927181522299611*^9, 3.927181527898737*^9}},
 CellLabel->
  "In[376]:=",ExpressionUUID->"d3c0fe6d-6df0-40ce-a950-fb864be8c563"],

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Image", "@", 
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Boole", "[", 
        RowBox[{
         RowBox[{"Min", "[", 
          RowBox[{"Abs", "[", 
           RowBox[{"#", "-", "i"}], "]"}], "]"}], "==", "0"}], "]"}], "&"}], 
      ",", "setICC", ",", 
      RowBox[{"{", "2", "}"}]}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", 
     RowBox[{"Max", "[", "setICC", "]"}], ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.914483299945964*^9, 3.914483342591357*^9}, {
  3.9144839767445755`*^9, 3.914483977558583*^9}, {3.914484243871727*^9, 
  3.9144842468067613`*^9}, {3.9144891811173534`*^9, 3.9144891812023487`*^9}},
 CellLabel->
  "In[377]:=",ExpressionUUID->"c54a0471-352a-4e1f-bb0d-b9ca070451e2"]
}, Closed]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Affinity Matrices", "Chapter",
 CellChangeTimes->{{3.923387246938759*^9, 
  3.9233872502382956`*^9}},ExpressionUUID->"ae6b4566-bffa-4a87-970b-\
6b098f87b102"],

Cell[CellGroupData[{

Cell["Functions", "Section",
 CellChangeTimes->{{3.933848668173334*^9, 
  3.9338486699071617`*^9}},ExpressionUUID->"e64fddb5-958a-4e9c-9ec6-\
d1676363bbc3"],

Cell[CellGroupData[{

Cell["Distances (\[Pi]-periodic)", "Subsection",
 CellChangeTimes->{{3.922264509603302*^9, 3.9222645118055143`*^9}, {
   3.927182711671659*^9, 3.92718271637962*^9}, {3.933848640584283*^9, 
   3.9338486436275377`*^9}, 
   3.9338486837870917`*^9},ExpressionUUID->"f1969642-b5c4-47bf-ba74-\
5588261936b8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"LeftActionMatrixFast", "[", "CClist_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "g1", ",", "diffg", ",", "g1\[Theta]", ",", "distMatrix", ",", 
      "halfAngleApprox"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"g1", "=", 
      RowBox[{"N", "@", 
       RowBox[{"ConstantArray", "[", 
        RowBox[{"CClist", ",", 
         RowBox[{"Length", "[", "CClist", "]"}]}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"diffg", "=", 
      RowBox[{
       RowBox[{"-", "g1"}], "+", 
       RowBox[{"g1", "\[Transpose]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"g1\[Theta]", "=", 
        RowBox[{
         RowBox[{"g1", "[", 
          RowBox[{"[", 
           RowBox[{";;", ",", ";;", ",", "3"}], "]"}], "]"}], "*", "2", 
         RowBox[{"\[Pi]", "/", "No"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"distMatrix", "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"diffg", "[", 
             RowBox[{"[", 
              RowBox[{";;", ",", ";;", ",", "1"}], "]"}], "]"}], "*", 
            RowBox[{"Cos", "[", "g1\[Theta]", "]"}]}], "+", 
           RowBox[{
            RowBox[{"diffg", "[", 
             RowBox[{"[", 
              RowBox[{";;", ",", ";;", ",", "2"}], "]"}], "]"}], "*", 
            RowBox[{"Sin", "[", "g1\[Theta]", "]"}]}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"diffg", "[", 
             RowBox[{"[", 
              RowBox[{";;", ",", ";;", ",", "2"}], "]"}], "]"}], "*", 
            RowBox[{"Sin", "[", "g1\[Theta]", "]"}]}], "-", 
           RowBox[{
            RowBox[{"diffg", "[", 
             RowBox[{"[", 
              RowBox[{";;", ",", ";;", ",", "1"}], "]"}], "]"}], "*", 
            RowBox[{"Cos", "[", "g1\[Theta]", "]"}]}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"diffg", "[", 
            RowBox[{"[", 
             RowBox[{";;", ",", ";;", ",", "3"}], "]"}], "]"}], "*", "2", 
           RowBox[{"\[Pi]", "/", "No"}]}]}], "}"}]}], ";"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"distMatrix", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"diffg", "[", 
           RowBox[{"[", 
            RowBox[{";;", ",", ";;", ",", "1"}], "]"}], "]"}], "*", 
          RowBox[{"Cos", "[", 
           RowBox[{
            RowBox[{"g1", "[", 
             RowBox[{"[", 
              RowBox[{";;", ",", ";;", ",", "3"}], "]"}], "]"}], "*", "2", 
            RowBox[{"\[Pi]", "/", "No"}]}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"diffg", "[", 
           RowBox[{"[", 
            RowBox[{";;", ",", ";;", ",", "2"}], "]"}], "]"}], "*", 
          RowBox[{"Sin", "[", 
           RowBox[{
            RowBox[{"g1", "[", 
             RowBox[{"[", 
              RowBox[{";;", ",", ";;", ",", "3"}], "]"}], "]"}], "*", "2", 
            RowBox[{"\[Pi]", "/", "No"}]}], "]"}]}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"diffg", "[", 
           RowBox[{"[", 
            RowBox[{";;", ",", ";;", ",", "2"}], "]"}], "]"}], "*", 
          RowBox[{"Cos", "[", 
           RowBox[{
            RowBox[{"g1", "[", 
             RowBox[{"[", 
              RowBox[{";;", ",", ";;", ",", "3"}], "]"}], "]"}], "*", "2", 
            RowBox[{"\[Pi]", "/", "No"}]}], "]"}]}], "-", 
         RowBox[{
          RowBox[{"diffg", "[", 
           RowBox[{"[", 
            RowBox[{";;", ",", ";;", ",", "1"}], "]"}], "]"}], "*", 
          RowBox[{"Sin", "[", 
           RowBox[{
            RowBox[{"g1", "[", 
             RowBox[{"[", 
              RowBox[{";;", ",", ";;", ",", "3"}], "]"}], "]"}], "*", "2", 
            RowBox[{"\[Pi]", "/", "No"}]}], "]"}]}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"diffg", "[", 
          RowBox[{"[", 
           RowBox[{";;", ",", ";;", ",", "3"}], "]"}], "]"}], "*", "2", 
         RowBox[{"\[Pi]", "/", "No"}]}]}], 
       RowBox[{"(*", 
        RowBox[{"Mod", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"diffg", "[", 
            RowBox[{"[", 
             RowBox[{";;", ",", ";;", ",", "3"}], "]"}], "]"}], "*", "2", 
           RowBox[{"\[Pi]", "/", "No"}]}], ",", "\[Pi]", ",", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], "/", "2"}]}], "]"}], "*)"}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Print", "[", "distMatrix", "]"}], ";"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "distMatrix", "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.93202106456823*^9, 3.9320211535053325`*^9}, {
   3.932021223652997*^9, 3.932021323493251*^9}, {3.9320238467592974`*^9, 
   3.932023882835251*^9}, {3.9320239832743473`*^9, 3.9320240760523043`*^9}, {
   3.9320247113879957`*^9, 3.9320247417539225`*^9}, {3.932025247839514*^9, 
   3.932025337535472*^9}, {3.9320316616624594`*^9, 3.932031674637598*^9}, {
   3.9320317086300426`*^9, 3.932031724096653*^9}, 3.9320318986660833`*^9, {
   3.9320378650467606`*^9, 3.932037869317402*^9}, {3.932130695567075*^9, 
   3.9321306959055386`*^9}, {3.932185097982998*^9, 3.9321851060235786`*^9}, 
   3.9321852229119587`*^9, {3.932190097059061*^9, 3.9321901229300585`*^9}, {
   3.9321902289229984`*^9, 3.932190234672579*^9}, {3.9321902746843023`*^9, 
   3.9321902914252462`*^9}, {3.9321903269382772`*^9, 3.932190406587719*^9}, {
   3.9321915178337755`*^9, 3.932191517956033*^9}, {3.9321920046456413`*^9, 
   3.9321920226030827`*^9}, {3.932193411536245*^9, 3.932193414396052*^9}, {
   3.9321935094547195`*^9, 3.9321935159471684`*^9}, {3.9321935674351325`*^9, 
   3.932193575680869*^9}, {3.9321937952229595`*^9, 3.932193798883517*^9}, {
   3.932193884617508*^9, 3.9321938910803075`*^9}, {3.932194217438833*^9, 
   3.932194222925257*^9}, {3.9321943316331406`*^9, 3.932194336941234*^9}, 
   3.9321945896499243`*^9, {3.9321947477097087`*^9, 3.9321947497889757`*^9}, {
   3.9321953413824263`*^9, 3.9321953415967336`*^9}, {3.93219760853689*^9, 
   3.9321976106181545`*^9}, {3.932197654732284*^9, 3.9321976617594995`*^9}, {
   3.932197723375131*^9, 3.932197741777237*^9}},
 CellLabel->"In[56]:=",ExpressionUUID->"da86a84f-3efd-4d52-afad-25a635950cd2"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"halfAngleApproximationMatrixFast", "[", "distMatrix_", "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"distMatrix", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "*", 
       RowBox[{"Cos", "[", 
        RowBox[{
         RowBox[{"distMatrix", "[", 
          RowBox[{"[", "3", "]"}], "]"}], "/", "2"}], "]"}]}], "+", 
      RowBox[{
       RowBox[{"distMatrix", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "*", 
       RowBox[{"Sin", "[", 
        RowBox[{
         RowBox[{"distMatrix", "[", 
          RowBox[{"[", "3", "]"}], "]"}], "/", "2"}], "]"}]}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        RowBox[{"distMatrix", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], "*", 
       RowBox[{"Sin", "[", 
        RowBox[{
         RowBox[{"distMatrix", "[", 
          RowBox[{"[", "3", "]"}], "]"}], "/", "2"}], "]"}]}], "+", 
      RowBox[{
       RowBox[{"distMatrix", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "*", 
       RowBox[{"Cos", "[", 
        RowBox[{
         RowBox[{"distMatrix", "[", 
          RowBox[{"[", "3", "]"}], "]"}], "/", "2"}], "]"}]}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"distMatrix", "[", 
       RowBox[{"[", "3", "]"}], "]"}], "*)"}], 
     RowBox[{"Mod", "[", 
      RowBox[{
       RowBox[{"distMatrix", "[", 
        RowBox[{"[", "3", "]"}], "]"}], ",", "\[Pi]", ",", 
       RowBox[{
        RowBox[{"-", "\[Pi]"}], "/", "2"}]}], "]"}]}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.9321977477111163`*^9, 3.9321977826358585`*^9}, {
  3.9321985314517136`*^9, 3.932198534547187*^9}},
 CellLabel->"In[57]:=",ExpressionUUID->"404be612-8672-4697-808d-03d0a1c8f1c7"]
}, Closed]],

Cell[CellGroupData[{

Cell["Affinity Matrix", "Subsection",
 CellChangeTimes->{{3.9233899578379364`*^9, 3.923389963246586*^9}, {
   3.9271827681136837`*^9, 3.9271827721301584`*^9}, 
   3.933848681527167*^9},ExpressionUUID->"26edbf77-7317-4d09-b943-\
5f1521598c47"],

Cell[BoxData[
 RowBox[{
  RowBox[{"fromDistancesToAM", "[", 
   RowBox[{
   "CCvolume_", ",", "rescaledDistances_", ",", "W0list_", ",", "\[Alpha]_"}],
    "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"t", ",", 
      RowBox[{"\[CurlyEpsilon]", "=", 
       SuperscriptBox["10", 
        RowBox[{"-", "3"}]]}], ",", "\[Beta]", ",", 
      RowBox[{"(*", 
       RowBox[{"rescaledDistances", ","}], "*)"}], "elemList", ",", 
      "CClabels", ",", "CClist", ",", "pointwiseAM", ",", "AMasymm", ",", 
      "AM", ",", "temp"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"t", "=", 
       RowBox[{
        RowBox[{
         SuperscriptBox[
          RowBox[{"Max", "[", "distances", "]"}], "\[Alpha]"], "*", 
         SuperscriptBox["\[Beta]", 
          RowBox[{"1", "-", "\[Alpha]"}]]}], "+", "\[CurlyEpsilon]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"temp", "=", 
       RowBox[{"PrintTemporary", "[", "\"\<rescaledDistances\>\"", "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"rescaledDistances", "=", 
       RowBox[{
        FractionBox["t", "\[Beta]"], "*", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox["distances", "t"], ")"}], "\[Beta]"]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"NotebookDelete", "[", "temp", "]"}], ";"}], "*)"}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"CClabels", "=", 
      RowBox[{"DeleteCases", "[", 
       RowBox[{
        RowBox[{"DeleteDuplicates", "[", 
         RowBox[{"Flatten", "[", "CCvolume", "]"}], "]"}], ",", "0"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"CClist", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Position", "[", 
         RowBox[{"CCvolume", ",", 
          RowBox[{"CClabels", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "CClabels", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"elemList", "=", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"{", "0", "}"}], ",", 
        RowBox[{"Accumulate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", 
            RowBox[{"CClist", "[", 
             RowBox[{"[", "#", "]"}], "]"}], "]"}], "&"}], "/@", 
          RowBox[{"Range", "[", 
           RowBox[{"Length", "[", "CClabels", "]"}], "]"}]}], "]"}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"temp", "=", 
      RowBox[{"PrintTemporary", "[", "\"\<pointwiseAM\>\"", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"pointwiseAM", "=", 
      RowBox[{"ParallelTable", "[", 
       RowBox[{
        RowBox[{"Max", "[", 
         RowBox[{
          RowBox[{"W0list", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{
              RowBox[{"elemList", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "+", "1"}], ";;", 
             RowBox[{"elemList", "[", 
              RowBox[{"[", 
               RowBox[{"i", "+", "1"}], "]"}], "]"}]}], "]"}], "]"}], "-", 
          RowBox[{"rescaledDistances", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"elemList", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "+", "1"}], ";;", 
              RowBox[{"elemList", "[", 
               RowBox[{"[", 
                RowBox[{"i", "+", "1"}], "]"}], "]"}]}], ",", "j"}], "]"}], 
           "]"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "CClist", "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", 
          RowBox[{"Length", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{"CClist", ",", "1"}], "]"}], "]"}]}], "}"}]}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"NotebookDelete", "[", "temp", "]"}], ";", "\[IndentingNewLine]",
      "\[IndentingNewLine]", 
     RowBox[{"temp", "=", 
      RowBox[{"PrintTemporary", "[", "\"\<AMasymm\>\"", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"AMasymm", "=", 
      RowBox[{"ParallelTable", "[", 
       RowBox[{
        RowBox[{
         FractionBox["1", 
          SqrtBox[
           RowBox[{
            RowBox[{"elemList", "[", 
             RowBox[{"[", 
              RowBox[{"j", "+", "1"}], "]"}], "]"}], "-", 
            RowBox[{"elemList", "[", 
             RowBox[{"[", "j", "]"}], "]"}]}]]], 
         RowBox[{"\[Sqrt]", 
          RowBox[{"Total", "[", 
           SuperscriptBox[
            RowBox[{
             RowBox[{"pointwiseAM", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "[", 
             RowBox[{"[", 
              RowBox[{
               RowBox[{
                RowBox[{"elemList", "[", 
                 RowBox[{"[", "j", "]"}], "]"}], "+", "1"}], ";;", 
               RowBox[{"elemList", "[", 
                RowBox[{"[", 
                 RowBox[{"j", "+", "1"}], "]"}], "]"}]}], "]"}], "]"}], "2"], 
           "]"}]}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "CClist", "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", 
          RowBox[{"Length", "[", "CClist", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"NotebookDelete", "[", "temp", "]"}], ";", "\[IndentingNewLine]",
      "\[IndentingNewLine]", 
     RowBox[{"temp", "=", 
      RowBox[{"PrintTemporary", "[", "\"\<AM\>\"", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"AM", "=", 
      RowBox[{"MapThread", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Max", "[", 
          RowBox[{"#1", ",", "#2"}], "]"}], "&"}], ",", 
        RowBox[{"{", 
         RowBox[{"AMasymm", ",", 
          RowBox[{"AMasymm", "\[Transpose]"}]}], "}"}], ",", "2"}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"NotebookDelete", "[", "temp", "]"}], ";", 
     RowBox[{"Return", "[", "AM", "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9321044657218676`*^9, 3.932104739566331*^9}, {
  3.932104939288374*^9, 3.9321049951204853`*^9}, {3.932105333368995*^9, 
  3.932105340530759*^9}},
 CellLabel->"In[41]:=",ExpressionUUID->"1c437db4-0c27-401d-8dc9-4b5a1f531e77"],

Cell[BoxData[
 RowBox[{
  RowBox[{"MorphConvOnDistances", "[", 
   RowBox[{"CCvolume_", ",", "rescaledDistances_", ",", "W0list_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"elemList", ",", "CClabels", ",", "CClist", ",", "pointwiseAM"}],
      "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"CClabels", "=", 
      RowBox[{"DeleteCases", "[", 
       RowBox[{
        RowBox[{"DeleteDuplicates", "[", 
         RowBox[{"Flatten", "[", "CCvolume", "]"}], "]"}], ",", "0"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"CClist", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Position", "[", 
         RowBox[{"CCvolume", ",", 
          RowBox[{"CClabels", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "CClabels", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"elemList", "=", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"{", "0", "}"}], ",", 
        RowBox[{"Accumulate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", 
            RowBox[{"CClist", "[", 
             RowBox[{"[", "#", "]"}], "]"}], "]"}], "&"}], "/@", 
          RowBox[{"Range", "[", 
           RowBox[{"Length", "[", "CClabels", "]"}], "]"}]}], "]"}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"pointwiseAM", "=", 
      RowBox[{"ParallelTable", "[", 
       RowBox[{
        RowBox[{"Max", "[", 
         RowBox[{
          RowBox[{"W0list", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{
              RowBox[{"elemList", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "+", "1"}], ";;", 
             RowBox[{"elemList", "[", 
              RowBox[{"[", 
               RowBox[{"i", "+", "1"}], "]"}], "]"}]}], "]"}], "]"}], "-", 
          RowBox[{"rescaledDistances", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"elemList", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "+", "1"}], ";;", 
              RowBox[{"elemList", "[", 
               RowBox[{"[", 
                RowBox[{"i", "+", "1"}], "]"}], "]"}]}], ",", "j"}], "]"}], 
           "]"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "CClist", "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", 
          RowBox[{"Length", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{"CClist", ",", "1"}], "]"}], "]"}]}], "}"}]}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "pointwiseAM", "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.932181420679122*^9, 3.9321814804667253`*^9}},
 CellLabel->"In[60]:=",ExpressionUUID->"ad914958-1b1f-43b4-bd3b-107bd3783c5c"]
}, Closed]],

Cell[CellGroupData[{

Cell["Visualization", "Subsection",
 CellChangeTimes->{{3.92371102135793*^9, 3.9237110271286745`*^9}, {
  3.933848677499159*^9, 
  3.933848677628528*^9}},ExpressionUUID->"d8b64102-b65e-415b-affc-\
3a14d7317bef"],

Cell[BoxData[
 RowBox[{
  RowBox[{"AffinityTrees", "[", "\[IndentingNewLine]", 
   RowBox[{"AM_", " ", 
    RowBox[{"(*", 
     RowBox[{"Affinity", " ", "Matrix"}], "*)"}], ",", "\[IndentingNewLine]", 
    "\[Delta]_"}], " ", 
   RowBox[{"(*", 
    RowBox[{"distance", " ", "threshold"}], "*)"}], "\[IndentingNewLine]", 
   "]"}], ":=", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{"C", " ", 
      RowBox[{"(*", 
       RowBox[{"connectivity", " ", "matrix"}], "*)"}], ",", 
      "\[IndentingNewLine]", "Climit", " ", 
      RowBox[{"(*", 
       RowBox[{
       "limiting", " ", "distribution", " ", "of", " ", "connectivity"}], 
       "*)"}], ",", "\[IndentingNewLine]", "connectedComponents", " ", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"length", " ", "=", " ", 
         RowBox[{"#", " ", "connected", " ", "components"}]}], ",", " ", 
        RowBox[{"values", " ", "=", " ", 
         RowBox[{
         "#", " ", "elements", " ", "in", " ", "specific", " ", "connected", 
          " ", "component"}]}]}], "*)"}], ",", "\[IndentingNewLine]", "CC", 
      ",", "\[IndentingNewLine]", "connectedTo"}], "\[IndentingNewLine]", 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"C", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Boole", "[", 
          RowBox[{"#", ">", "\[Delta]"}], "]"}], "&"}], ",", "AM", ",", 
        RowBox[{"{", "2", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Climit", "=", 
      RowBox[{"Clip", "[", 
       RowBox[{
        RowBox[{"IdentityMatrix", "[", 
         RowBox[{"Length", "[", "AM", "]"}], "]"}], "+", 
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{"MatrixPower", "[", 
           RowBox[{"C", ",", "k"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"k", ",", "1", ",", 
            RowBox[{
             RowBox[{"Length", "[", "AM", "]"}], "-", "1"}]}], "}"}]}], 
         "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"connectedComponents", "=", 
      RowBox[{"DeleteCases", "[", 
       RowBox[{
        RowBox[{"Eigenvalues", "[", "Climit", "]"}], ",", "0"}], "]"}]}], ";",
      "\[IndentingNewLine]", 
     RowBox[{"CC", "=", 
      RowBox[{"Length", "[", "connectedComponents", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"connectedTo", "=", 
      RowBox[{"Eigenvectors", "[", 
       RowBox[{"Climit", ",", "CC"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{"{", 
       RowBox[{"connectedComponents", ",", "CC", ",", "connectedTo"}], "}"}], 
      "]"}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.9052478343927884`*^9, 3.905247999831833*^9}, {
  3.905248031119891*^9, 3.9052482216044984`*^9}, {3.9222640489711623`*^9, 
  3.9222640650076327`*^9}, {3.922264322411969*^9, 3.9222643242965636`*^9}, {
  3.9237110954080687`*^9, 3.923711128510212*^9}, {3.923711163477064*^9, 
  3.9237112126873417`*^9}, {3.9237113112433414`*^9, 3.9237113447943854`*^9}, {
  3.9237113877628975`*^9, 3.923711416226253*^9}, {3.923711449568282*^9, 
  3.9237114791985846`*^9}},
 CellLabel->"In[45]:=",ExpressionUUID->"20c4a7fe-251d-4761-84a8-8a527db5e0d1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"plotAffinityTree", "[", 
   RowBox[{"AT_", ",", "CClist_", ",", "im_", ",", 
    RowBox[{"index_", ":", "1"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"amountCC", "=", 
       RowBox[{"Length", "[", "AT", "]"}]}], ",", "affConnected", ",", 
      "visList", ",", 
      RowBox[{"test", "=", 
       RowBox[{"ConstantArray", "[", 
        RowBox[{"0", ",", 
         RowBox[{"Flatten", "@", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Length", "[", "AT", "]"}], ",", 
            RowBox[{"Dimensions", "[", "im", "]"}]}], "}"}]}]}], "]"}]}]}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"affConnected", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{"Position", "[", 
           RowBox[{
            RowBox[{"AT", "[", 
             RowBox[{"[", "#", "]"}], "]"}], ",", "1"}], "]"}], ",", "1"}], 
         "]"}], "&"}], "/@", 
       RowBox[{"Range", "[", "amountCC", "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"visList", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"CClist", "[", 
          RowBox[{"[", "#", "]"}], "]"}], "&"}], ",", "affConnected", ",", 
        RowBox[{"{", "2", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"MapIndexed", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"test", "[", 
            RowBox[{"[", 
             RowBox[{"Sequence", "@@", 
              RowBox[{"Flatten", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"#2", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], ",", 
                 RowBox[{"#1", "[", 
                  RowBox[{"[", 
                   RowBox[{";;", "2"}], "]"}], "]"}]}], "}"}], "]"}]}], "]"}],
             "]"}], "=", "1"}], ";"}], ")"}], "&"}], ",", 
       RowBox[{"Flatten", "[", 
        RowBox[{"visList", ",", 
         RowBox[{"{", "1", "}"}]}], "]"}], ",", 
       RowBox[{"{", "3", "}"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Image", "[", 
      RowBox[{"test", "[", 
       RowBox[{"[", "index", "]"}], "]"}], "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.923711596515581*^9, 3.923711635642105*^9}, {
   3.923711746824623*^9, 3.923711778340413*^9}, {3.9237118165079346`*^9, 
   3.923711843102951*^9}, {3.923714018217701*^9, 3.9237140726100664`*^9}, 
   3.9271899826735525`*^9, {3.92719238032203*^9, 3.9271923944717875`*^9}},
 CellLabel->"In[47]:=",ExpressionUUID->"7c9882b5-868e-4749-93f7-20e4bf9b40cb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"plotAffinityTrees", "[", 
   RowBox[{"AT_", ",", "CClist_", ",", "im_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"amountCC", "=", 
       RowBox[{"Length", "[", "AT", "]"}]}], ",", "affConnected", ",", 
      "visList", ",", 
      RowBox[{"test", "=", 
       RowBox[{"ConstantArray", "[", 
        RowBox[{"0", ",", 
         RowBox[{"Flatten", "@", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Length", "[", "AT", "]"}], ",", 
            RowBox[{"Dimensions", "[", "im", "]"}]}], "}"}]}]}], "]"}]}], ",",
       "\[IndentingNewLine]", 
      RowBox[{"affinityTreeArray", "=", 
       RowBox[{"ConstantArray", "[", 
        RowBox[{"0", ",", 
         RowBox[{"Flatten", "@", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Length", "[", "AT", "]"}], ",", 
            RowBox[{"Dimensions", "[", "im", "]"}]}], "}"}]}]}], "]"}]}]}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"affConnected", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{"Position", "[", 
           RowBox[{
            RowBox[{"AT", "[", 
             RowBox[{"[", "#", "]"}], "]"}], ",", "1"}], "]"}], ",", "1"}], 
         "]"}], "&"}], "/@", 
       RowBox[{"Range", "[", "amountCC", "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"visList", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"CClist", "[", 
          RowBox[{"[", "#", "]"}], "]"}], "&"}], ",", "affConnected", ",", 
        RowBox[{"{", "2", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"MapIndexed", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"affinityTreeArray", "[", 
            RowBox[{"[", 
             RowBox[{"Sequence", "@@", 
              RowBox[{"Flatten", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"#2", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], ",", 
                 RowBox[{"#1", "[", 
                  RowBox[{"[", 
                   RowBox[{";;", "2"}], "]"}], "]"}]}], "}"}], "]"}]}], "]"}],
             "]"}], "=", "1"}], ";"}], ")"}], "&"}], ",", 
       RowBox[{"Flatten", "[", 
        RowBox[{"visList", ",", 
         RowBox[{"{", "1", "}"}]}], "]"}], ",", 
       RowBox[{"{", "3", "}"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"GraphicsGrid", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"ArrayReshape", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Image", "[", 
             RowBox[{"affinityTreeArray", "[", 
              RowBox[{"[", "#", "]"}], "]"}], "]"}], "&"}], "/@", 
           RowBox[{"Range", "[", 
            RowBox[{"Length", "[", "affinityTreeArray", "]"}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Ceiling", "[", 
             RowBox[{"amountCC", "/", "5"}], "]"}], ",", "5"}], "}"}]}], 
         "]"}], "//.", 
        RowBox[{"0", "->", 
         RowBox[{"Image", "[", 
          RowBox[{"{", 
           RowBox[{"{", "1", "}"}], "}"}], "]"}]}]}], ",", 
       RowBox[{"ImageSize", "->", "Full"}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.923711596515581*^9, 3.923711635642105*^9}, {
   3.923711746824623*^9, 3.923711778340413*^9}, {3.9237118165079346`*^9, 
   3.923711843102951*^9}, {3.923714018217701*^9, 3.9237140726100664`*^9}, 
   3.9271899826735525`*^9, {3.927192167754885*^9, 3.9271922210884066`*^9}, {
   3.927192304104684*^9, 3.927192353088127*^9}, 3.9271924261050243`*^9, {
   3.9271924562213273`*^9, 3.927192462271648*^9}, 3.927193321986929*^9},
 CellLabel->"In[48]:=",ExpressionUUID->"12aa8508-e9c1-4e4a-89d3-b34a4e783701"],

Cell[BoxData[
 RowBox[{
  RowBox[{"plotAffinityTreesColored", "[", 
   RowBox[{"AT_", ",", "CClist_", ",", "im_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"amountCC", "=", 
       RowBox[{"Length", "[", "AT", "]"}]}], ",", "affConnected", ",", 
      "visList", ",", 
      RowBox[{"test", "=", 
       RowBox[{"ConstantArray", "[", 
        RowBox[{"0", ",", 
         RowBox[{"Dimensions", "[", "im", "]"}]}], "]"}]}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"affConnected", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{"Position", "[", 
           RowBox[{
            RowBox[{"AT", "[", 
             RowBox[{"[", "#", "]"}], "]"}], ",", "1"}], "]"}], ",", "1"}], 
         "]"}], "&"}], "/@", 
       RowBox[{"Range", "[", "amountCC", "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"visList", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"CClist", "[", 
          RowBox[{"[", "#", "]"}], "]"}], "&"}], ",", "affConnected", ",", 
        RowBox[{"{", "2", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"MapIndexed", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"test", "[", 
            RowBox[{"[", 
             RowBox[{"Sequence", "@@", 
              RowBox[{"#1", "[", 
               RowBox[{"[", 
                RowBox[{";;", "2"}], "]"}], "]"}]}], "]"}], "]"}], "=", 
           RowBox[{"#2", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], ";"}], ")"}], "&"}], ",", 
       RowBox[{"Flatten", "[", 
        RowBox[{"visList", ",", 
         RowBox[{"{", "1", "}"}]}], "]"}], ",", 
       RowBox[{"{", "3", "}"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Colorize", "[", "test", "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.923717103959882*^9, 3.923717192830167*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"a9587d73-9657-4dc3-8a19-7f000a403f2d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"plotAffinityTreesColoredVis", "[", 
   RowBox[{"AT_", ",", "CClist_", ",", "im_", ",", "thinCost_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"amountCC", "=", 
       RowBox[{"Length", "[", "AT", "]"}]}], ",", "affConnected", ",", 
      "visList", ",", "test", ",", "thinCostArray"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"thinCostArray", "=", 
      RowBox[{"ImageData", "[", "thinCost", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"test", "=", 
      RowBox[{"ConstantArray", "[", 
       RowBox[{"0", ",", 
        RowBox[{"Dimensions", "[", "thinCostArray", "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"affConnected", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{"Position", "[", 
           RowBox[{
            RowBox[{"AT", "[", 
             RowBox[{"[", "#", "]"}], "]"}], ",", "1"}], "]"}], ",", "1"}], 
         "]"}], "&"}], "/@", 
       RowBox[{"Range", "[", "amountCC", "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"visList", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"CClist", "[", 
          RowBox[{"[", "#", "]"}], "]"}], "&"}], ",", "affConnected", ",", 
        RowBox[{"{", "2", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"MapIndexed", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"test", "[", 
            RowBox[{"[", 
             RowBox[{"Sequence", "@@", "#1"}], "]"}], "]"}], "=", 
           RowBox[{"#2", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], ";"}], ")"}], "&"}], ",", 
       RowBox[{"Flatten", "[", 
        RowBox[{"visList", ",", 
         RowBox[{"{", "1", "}"}]}], "]"}], ",", 
       RowBox[{"{", "3", "}"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Colorize", "[", 
      RowBox[{"Round", "[", 
       RowBox[{"ImageData", "[", 
        RowBox[{"Dilation", "[", 
         RowBox[{
          RowBox[{"Image", "@", 
           RowBox[{"Map", "[", 
            RowBox[{"Max", ",", 
             RowBox[{"test", "*", "thinCostArray"}], ",", 
             RowBox[{"{", "2", "}"}]}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "1", ",", "0"}], "}"}]}], "}"}]}], "]"}], 
        "]"}], "]"}], "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.923717103959882*^9, 3.923717192830167*^9}, {
   3.9321061822807903`*^9, 3.932106220069185*^9}, 3.932106321100422*^9, {
   3.9321063945591583`*^9, 3.9321064016853914`*^9}, {3.932106569166774*^9, 
   3.9321066159197035`*^9}, {3.9321067878784094`*^9, 3.932106800627843*^9}, 
   3.932106975927168*^9},
 CellLabel->"In[50]:=",ExpressionUUID->"58937241-1402-4f05-a373-14f4459b12bf"],

Cell[BoxData[
 RowBox[{
  RowBox[{"plotAffinityTreesColoredVisData", "[", 
   RowBox[{"AT_", ",", "CClist_", ",", "im_", ",", "thinCost_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"amountCC", "=", 
       RowBox[{"Length", "[", "AT", "]"}]}], ",", "affConnected", ",", 
      "visList", ",", "test", ",", "thinCostArray"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"thinCostArray", "=", 
      RowBox[{"ImageData", "[", "thinCost", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"test", "=", 
      RowBox[{"ConstantArray", "[", 
       RowBox[{"0", ",", 
        RowBox[{"Dimensions", "[", "thinCostArray", "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"affConnected", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{"Position", "[", 
           RowBox[{
            RowBox[{"AT", "[", 
             RowBox[{"[", "#", "]"}], "]"}], ",", "1"}], "]"}], ",", "1"}], 
         "]"}], "&"}], "/@", 
       RowBox[{"Range", "[", "amountCC", "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"visList", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"CClist", "[", 
          RowBox[{"[", "#", "]"}], "]"}], "&"}], ",", "affConnected", ",", 
        RowBox[{"{", "2", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"MapIndexed", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"test", "[", 
            RowBox[{"[", 
             RowBox[{"Sequence", "@@", "#1"}], "]"}], "]"}], "=", 
           RowBox[{"#2", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], ";"}], ")"}], "&"}], ",", 
       RowBox[{"Flatten", "[", 
        RowBox[{"visList", ",", 
         RowBox[{"{", "1", "}"}]}], "]"}], ",", 
       RowBox[{"{", "3", "}"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{"Round", "[", 
       RowBox[{"ImageData", "[", 
        RowBox[{"Dilation", "[", 
         RowBox[{
          RowBox[{"Image", "@", 
           RowBox[{"Map", "[", 
            RowBox[{"Max", ",", 
             RowBox[{"test", "*", "thinCostArray"}], ",", 
             RowBox[{"{", "2", "}"}]}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "1", ",", "0"}], "}"}]}], "}"}]}], "]"}], 
        "]"}], "]"}], "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.923717103959882*^9, 3.923717192830167*^9}, {
   3.9321061822807903`*^9, 3.932106220069185*^9}, 3.932106321100422*^9, {
   3.9321063945591583`*^9, 3.9321064016853914`*^9}, {3.932106569166774*^9, 
   3.9321066159197035`*^9}, {3.9321067878784094`*^9, 3.932106800627843*^9}, 
   3.932106975927168*^9, {3.932132555401545*^9, 3.932132560180349*^9}},
 CellLabel->"In[51]:=",ExpressionUUID->"e295bd19-88b8-4cd5-84cb-7dafe46d22d4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"plotAffinityTreesColoredVisDataNoCleaning", "[", 
   RowBox[{"AT_", ",", "CClist_", ",", "im_", ",", "thinCost_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"amountCC", "=", 
       RowBox[{"Length", "[", "AT", "]"}]}], ",", "affConnected", ",", 
      "visList", ",", "test", ",", "thinCostArray"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"thinCostArray", "=", 
      RowBox[{"ImageData", "[", "thinCost", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"test", "=", 
      RowBox[{"ConstantArray", "[", 
       RowBox[{"0", ",", 
        RowBox[{"Dimensions", "[", "thinCostArray", "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"affConnected", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{"Position", "[", 
           RowBox[{
            RowBox[{"AT", "[", 
             RowBox[{"[", "#", "]"}], "]"}], ",", "1"}], "]"}], ",", "1"}], 
         "]"}], "&"}], "/@", 
       RowBox[{"Range", "[", "amountCC", "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"visList", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"CClist", "[", 
          RowBox[{"[", "#", "]"}], "]"}], "&"}], ",", "affConnected", ",", 
        RowBox[{"{", "2", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"MapIndexed", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"test", "[", 
            RowBox[{"[", 
             RowBox[{"Sequence", "@@", "#1"}], "]"}], "]"}], "=", 
           RowBox[{"#2", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], ";"}], ")"}], "&"}], ",", 
       RowBox[{"Flatten", "[", 
        RowBox[{"visList", ",", 
         RowBox[{"{", "1", "}"}]}], "]"}], ",", 
       RowBox[{"{", "3", "}"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{"Round", "[", 
       RowBox[{"ImageData", "[", 
        RowBox[{"Image", "@", 
         RowBox[{"Map", "[", 
          RowBox[{"Max", ",", "test", ",", 
           RowBox[{"{", "2", "}"}]}], "]"}]}], "]"}], "]"}], "]"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.923717103959882*^9, 3.923717192830167*^9}, {
   3.9321061822807903`*^9, 3.932106220069185*^9}, 3.932106321100422*^9, {
   3.9321063945591583`*^9, 3.9321064016853914`*^9}, {3.932106569166774*^9, 
   3.9321066159197035`*^9}, {3.9321067878784094`*^9, 3.932106800627843*^9}, 
   3.932106975927168*^9, {3.932132555401545*^9, 3.932132560180349*^9}, {
   3.932199130554147*^9, 3.9321991361704845`*^9}, {3.932199190506925*^9, 
   3.9321991964168077`*^9}, 3.9324504563915744`*^9},
 CellLabel->"In[52]:=",ExpressionUUID->"19ac15bf-4998-45fa-932b-2fd351784876"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Calculating the Affinities", "Section",
 CellChangeTimes->{{3.9271896638240757`*^9, 
  3.92718966840693*^9}},ExpressionUUID->"959f8507-31e9-4ffc-b03e-\
cb49733934c1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"folder", "=", "\"\<Data\>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.933844064473649*^9, 3.9338440657035327`*^9}, {
  3.933844151634594*^9, 3.933844154051448*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"5bf369ef-934e-4ff5-967a-2c8b449f7938"],

Cell[CellGroupData[{

Cell["Calculate & Export Distances", "Subsection",
 CellChangeTimes->{{3.9321120889326735`*^9, 
  3.932112093671186*^9}},ExpressionUUID->"effd5109-36c3-421c-bdfd-\
361f961c6d6f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"CCvolume", "=", 
   RowBox[{"MapThread", "[", 
    RowBox[{"Max", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"setICC", "[", 
        RowBox[{"[", 
         RowBox[{";;", ",", ";;", ",", 
          RowBox[{";;", 
           RowBox[{"No", "/", "2"}]}]}], "]"}], "]"}], ",", 
       RowBox[{"setICC", "[", 
        RowBox[{"[", 
         RowBox[{";;", ",", ";;", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"No", "/", "2"}], "+", "1"}], ";;"}]}], "]"}], "]"}]}], 
      "}"}], ",", "3"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dataVolume", "=", 
   RowBox[{"osDenoisedErik", "[", 
    RowBox[{"[", 
     RowBox[{
      RowBox[{";;", 
       RowBox[{"No", "/", "2"}]}], ",", ";;", ",", ";;"}], "]"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.9317493842655625`*^9, 3.9317493876481037`*^9}, {
  3.9318411636981134`*^9, 3.931841174128623*^9}},
 CellLabel->
  "In[359]:=",ExpressionUUID->"3299a496-aeda-442c-99f1-ceb8e0c6772e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"CClabels", "=", 
   RowBox[{"DeleteCases", "[", 
    RowBox[{
     RowBox[{"DeleteDuplicates", "[", 
      RowBox[{"Flatten", "[", "CCvolume", "]"}], "]"}], ",", "0"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CClist", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Position", "[", 
      RowBox[{"CCvolume", ",", 
       RowBox[{"CClabels", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "CClabels", "]"}]}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{3.9320318775750074`*^9},
 CellLabel->"In[9]:=",ExpressionUUID->"27e3dd64-7a97-4a85-af0b-a8d12b01a577"],

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{"folder", ",", "\"\<Im21_setICC.mat\>\""}], "}"}], "]"}], ",", 
   "setICC"}], "]"}]], "Input",
 CellChangeTimes->{{3.9320455756996107`*^9, 3.9320456134752336`*^9}, 
   3.9320457409816537`*^9, {3.9320530198472905`*^9, 3.9320530199683285`*^9}, {
   3.9321114177104673`*^9, 3.9321114178324814`*^9}, {3.933846288441127*^9, 
   3.9338462908532257`*^9}},ExpressionUUID->"6f474580-03fc-40e7-9924-\
2f7da94d53f4"],

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{"folder", ",", "\"\<Im21_osDenoisedErik.mat\>\""}], "}"}], "]"}],
    ",", "osDenoisedErik"}], "]"}]], "Input",
 CellChangeTimes->{
  3.9320457441098323`*^9, {3.9320530177867775`*^9, 3.932053017920182*^9}, {
   3.9321114216797466`*^9, 3.9321114218499827`*^9}, {3.9338462823003273`*^9, 
   3.933846285589594*^9}},ExpressionUUID->"bde301e0-a39f-4fa8-b2cf-\
91de6b7ffd6e"],

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{"folder", ",", "\"\<Im21_thinCost.mat\>\""}], "}"}], "]"}], ",", 
   RowBox[{"ImageData", "[", "thinCost", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9321113969460382`*^9, 3.9321114289101653`*^9}, {
  3.9321121129649153`*^9, 3.932112114703978*^9}, {3.932112199041658*^9, 
  3.932112202391449*^9}, {3.9321282214318485`*^9, 3.932128221571003*^9}, {
  3.933846277646896*^9, 
  3.9338462801912937`*^9}},ExpressionUUID->"9fac43e3-0127-4937-8f59-\
16b0b9d301a8"],

Cell[BoxData[
 RowBox[{"AbsoluteTiming", "[", 
  RowBox[{
   RowBox[{"leftActionMatrix", "=", 
    RowBox[{"LeftActionMatrixFast", "[", 
     RowBox[{"Flatten", "[", 
      RowBox[{"CClist", ",", "1"}], "]"}], "]"}]}], ";"}], "]"}]], "Input",
 CellChangeTimes->{{3.932197801952317*^9, 3.9321978272689767`*^9}, {
  3.932197890873536*^9, 3.932197892034529*^9}},
 CellLabel->"In[45]:=",ExpressionUUID->"e6d71328-4deb-44af-9257-77e6f3fa6763"],

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{"folder", ",", "\"\<Im21_leftActionMatrix.h5\>\""}], "}"}], 
    "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\"\<halfAngleApprox\>\"", "->", 
     RowBox[{"N", "@", "leftActionMatrix"}]}], "}"}], ",", 
   "\"\<Datasets\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.932198324242592*^9, 3.93219834054373*^9}, {
  3.9338462618041143`*^9, 
  3.9338462640841036`*^9}},ExpressionUUID->"01f6c72c-96f7-4ee5-87e7-\
70d1ff34f398"],

Cell[BoxData[
 RowBox[{"AbsoluteTiming", "[", 
  RowBox[{
   RowBox[{"halfAngleApprox", "=", 
    RowBox[{
    "halfAngleApproximationMatrixFast", "[", "leftActionMatrix", "]"}]}], 
   ";"}], "]"}]], "Input",
 CellChangeTimes->{{3.932197865005355*^9, 3.932197895182723*^9}},
 CellLabel->"In[54]:=",ExpressionUUID->"5b4f7730-b8b7-4d61-a54c-3ab55f46b849"],

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{"folder", ",", "\"\<Im21_halfAngleApprox.h5\>\""}], "}"}], "]"}],
    ",", 
   RowBox[{"{", 
    RowBox[{"\"\<halfAngleApprox\>\"", "->", 
     RowBox[{"N", "@", "halfAngleApprox"}]}], "}"}], ",", 
   "\"\<Datasets\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.932198324242592*^9, 3.93219834054373*^9}, {
  3.9321985695847263`*^9, 3.9321985710397854`*^9}, {3.933846252690878*^9, 
  3.9338462551207094`*^9}},ExpressionUUID->"c6e9c239-66e7-4507-bbd0-\
b9411ced70ad"]
}, Closed]],

Cell[CellGroupData[{

Cell["Import Distances & other prior data", "Subsection",
 CellChangeTimes->{{3.9321121199824567`*^9, 3.9321121256578884`*^9}, 
   3.932129607582321*^9},ExpressionUUID->"1cc720aa-b90a-43cf-aa0e-\
1203b4b7e087"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"SetDirectory", "[", 
    RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}], "*)"}]], "Input",
 CellChangeTimes->{{3.635672260738264*^9, 3.635672265820571*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"4293890b-2e6c-4b83-85ee-39761f2ca0fd"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"setICC", "=", 
    RowBox[{
     RowBox[{"Import", "[", 
      RowBox[{"FileNameJoin", "[", 
       RowBox[{"{", 
        RowBox[{"folder", ",", "\"\<Im21_setICC.mat\>\""}], "}"}], "]"}], 
      "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "*)"}]], "Input",
 CellChangeTimes->{{3.932108350188632*^9, 3.9321083636603956`*^9}, 
   3.9321083989047766`*^9, {3.932112226850238*^9, 3.9321122269330225`*^9}, 
   3.9338441871707387`*^9},
 CellLabel->"In[13]:=",ExpressionUUID->"ccbf8c58-4380-4877-a4b2-28117b4b1df7"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"osDenoisedErik", "=", 
    RowBox[{
     RowBox[{"Import", "[", 
      RowBox[{"FileNameJoin", "[", 
       RowBox[{"{", 
        RowBox[{"folder", ",", "\"\<Im21_osDenoisedErik.mat\>\""}], "}"}], 
       "]"}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "*)"}]], "Input",
 CellChangeTimes->{{3.932108382433029*^9, 3.9321083955681477`*^9}, {
  3.932112229387562*^9, 3.9321122334018517`*^9}, {3.933846176200979*^9, 
  3.9338461952010965`*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"9d1d2642-3aa6-402e-ab6b-0d555e0b0261"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"thinCost", "=", 
    RowBox[{"Image3D", "[", 
     RowBox[{
      RowBox[{"Import", "[", 
       RowBox[{"FileNameJoin", "[", 
        RowBox[{"{", 
         RowBox[{"folder", ",", "\"\<Im21_thinCost.mat\>\""}], "}"}], "]"}], 
       "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ";"}], "*)"}]], "Input",
 CellChangeTimes->{{3.932108350188632*^9, 3.9321083636603956`*^9}, 
   3.9321083989047766`*^9, {3.9321097882923355`*^9, 3.932109792711773*^9}, {
   3.9321098991890483`*^9, 3.932109903064585*^9}, {3.932112235435645*^9, 
   3.932112235525281*^9}, {3.9321281899182615`*^9, 3.9321282068473277`*^9}, {
   3.9321284000509152`*^9, 3.932128411818756*^9}, {3.9338461771437297`*^9, 
   3.933846198269369*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"7e36456b-1b39-44bf-a838-8fd5b3a0347d"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"No", "=", 
    RowBox[{
     RowBox[{"Dimensions", "[", "setICC", "]"}], "[", 
     RowBox[{"[", "3", "]"}], "]"}]}], ";"}], "*)"}]], "Input",
 CellChangeTimes->{{3.932108441657971*^9, 3.932108451963118*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"4f489f59-102e-415f-b443-91cda82eaafb"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{"CCvolume", "=", 
     RowBox[{"MapThread", "[", 
      RowBox[{"Max", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"setICC", "[", 
          RowBox[{"[", 
           RowBox[{";;", ",", ";;", ",", 
            RowBox[{";;", 
             RowBox[{"No", "/", "2"}]}]}], "]"}], "]"}], ",", 
         RowBox[{"setICC", "[", 
          RowBox[{"[", 
           RowBox[{";;", ",", ";;", ",", 
            RowBox[{
             RowBox[{
              RowBox[{"No", "/", "2"}], "+", "1"}], ";;"}]}], "]"}], "]"}]}], 
        "}"}], ",", "3"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dataVolume", "=", 
     RowBox[{"osDenoisedErik", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{";;", 
         RowBox[{"No", "/", "2"}]}], ",", ";;", ",", ";;"}], "]"}], "]"}]}], 
    ";"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.9317493842655625`*^9, 3.9317493876481037`*^9}, {
  3.9318411636981134`*^9, 3.931841174128623*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"384dc84e-f56a-45d2-821b-4c8f8c7ee1b3"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{"halfAngleApprox", "=", 
    RowBox[{"Import", "[", 
     RowBox[{
      RowBox[{"FileNameJoin", "[", 
       RowBox[{"{", 
        RowBox[{"folder", ",", "\"\<Im21_halfAngleApprox.h5\>\""}], "}"}], 
       "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"\"\<Data\>\"", ",", 
        RowBox[{"{", "\"\<halfAngleApprox\>\"", "}"}]}], "}"}]}], "]"}]}], 
   ";"}], "*)"}]], "Input",
 CellChangeTimes->{
  3.9320937752691326`*^9, {3.9320938238209834`*^9, 3.9320938274647484`*^9}, {
   3.9320962391607428`*^9, 3.932096240779005*^9}, {3.9321122248541927`*^9, 
   3.932112224965025*^9}, 3.9338461798845215`*^9, 3.9338462127943363`*^9},
 CellLabel->"In[19]:=",ExpressionUUID->"2681e211-4ec1-4883-bf8d-8aa34d309ca4"]
}, Closed]],

Cell[CellGroupData[{

Cell["Parameters", "Subsection",
 CellChangeTimes->{{3.93211206037838*^9, 
  3.9321120626574354`*^9}},ExpressionUUID->"8d037174-bc31-4292-94af-\
050948c3a745"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Alpha]", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Beta]", "=", 
   FractionBox["1", 
    RowBox[{"1", "-", 
     FractionBox["1", "\[Alpha]"]}]]}], ";"}]}], "Input",
 CellChangeTimes->{{3.927185629527487*^9, 3.9271856721441174`*^9}, {
   3.927189674656742*^9, 3.927189684226489*^9}, {3.9321093200397577`*^9, 
   3.9321093209075303`*^9}, 3.932110573635602*^9, {3.9321834722901216`*^9, 
   3.932183477066205*^9}, {3.9322040489085197`*^9, 3.932204053322524*^9}, {
   3.9322041637167406`*^9, 3.932204168343788*^9}, {3.9324437235250497`*^9, 
   3.9324437262082787`*^9}},
 CellLabel->
  "In[1044]:=",ExpressionUUID->"9aeff6c0-7dc8-4caa-bd38-3e91bd262bc8"],

Cell["\<\
Calculating the affinities takes quite long (calculation of the distance \
matrix takes up to 1 hour)\
\>", "Text",
 CellChangeTimes->{{3.927189718873905*^9, 
  3.927189747290183*^9}},ExpressionUUID->"c3bc19f2-b889-48e9-94eb-\
cf41ee2b3b63"],

Cell[BoxData[
 RowBox[{
  RowBox[{"w", "=", 
   RowBox[{"{", 
    RowBox[{"0.1", ",", "4", ",", "4"}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.931878234248705*^9, {3.932128461378689*^9, 3.9321284657678328`*^9}, {
   3.9321375012245064`*^9, 3.9321375075547724`*^9}, {3.9321376355281515`*^9, 
   3.932137635741175*^9}, {3.93213770422491*^9, 3.9321377049382553`*^9}, {
   3.932180309984232*^9, 3.9321803132258883`*^9}, {3.932180452498156*^9, 
   3.932180455319173*^9}, {3.932180655009428*^9, 3.9321806554223185`*^9}, {
   3.932180733565913*^9, 3.9321807339097686`*^9}, {3.932463765545207*^9, 
   3.932463767023485*^9}},
 CellLabel->
  "In[1046]:=",ExpressionUUID->"9bc9bec5-2d28-4c69-bcaf-87b59dc15d32"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"CClabels", "=", 
   RowBox[{"DeleteCases", "[", 
    RowBox[{
     RowBox[{"DeleteDuplicates", "[", 
      RowBox[{"Flatten", "[", "CCvolume", "]"}], "]"}], ",", "0"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CClist", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Position", "[", 
      RowBox[{"CCvolume", ",", 
       RowBox[{"CClabels", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "CClabels", "]"}]}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{3.9320318775750074`*^9},
 CellLabel->
  "In[1047]:=",ExpressionUUID->"05d3a374-e7c2-4c23-a61d-8bb91909d51e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"elemList", "=", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"{", "0", "}"}], ",", 
     RowBox[{"Accumulate", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", 
         RowBox[{"CClist", "[", 
          RowBox[{"[", "#", "]"}], "]"}], "]"}], "&"}], "/@", 
       RowBox[{"Range", "[", 
        RowBox[{"Length", "[", "CClabels", "]"}], "]"}]}], "]"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.9321096984408712`*^9, 3.9321097218269854`*^9}},
 CellLabel->
  "In[1049]:=",ExpressionUUID->"9a63c33b-08bb-4926-926d-574932d0734d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"W0", "=", 
   RowBox[{"Total", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Rescale", "[", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"Unitize", "[", 
               RowBox[{"CCvolume", "-", 
                RowBox[{"CClabels", "[", 
                 RowBox[{"[", "#", "]"}], "]"}]}], "]"}]}], ")"}], "*", 
            RowBox[{"Transpose", "[", 
             RowBox[{
              RowBox[{"Abs", "[", 
               RowBox[{"Re", "[", "dataVolume", "]"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"3", ",", "1", ",", "2"}], "}"}]}], "]"}]}], ")"}], 
          "]"}], "&"}], "/@", 
        RowBox[{"Range", "[", 
         RowBox[{"Length", "[", "CClabels", "]"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "1", ",", "2", ",", "4"}], "}"}]}], "]"}], ",", 
     RowBox[{"{", "3", "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"W0list", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"W0", "[", 
      RowBox[{"[", 
       RowBox[{"Sequence", "@@", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{"CClist", ",", "1"}], "]"}], "[", 
          RowBox[{"[", "#", "]"}], "]"}], ")"}]}], "]"}], "]"}], "&"}], "/@", 
    RowBox[{"Range", "[", 
     RowBox[{"Length", "[", 
      RowBox[{"Flatten", "[", 
       RowBox[{"CClist", ",", "1"}], "]"}], "]"}], "]"}]}]}], ";"}]}], "Input",
 CellLabel->
  "In[1050]:=",ExpressionUUID->"3e2f9535-de41-4fdc-8cf0-2a8b0896daee"]
}, Closed]],

Cell[CellGroupData[{

Cell["Calculate Affinities", "Subsection",
 CellChangeTimes->{{3.9321079013431497`*^9, 
  3.932107906248166*^9}},ExpressionUUID->"58b47363-7a71-4f83-9045-\
ea700e8aad2b"],

Cell[BoxData[
 RowBox[{"AbsoluteTiming", "[", 
  RowBox[{
   RowBox[{"distances", "=", 
    StyleBox[
     SqrtBox[
      StyleBox[
       RowBox[{"Total", "[", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"w", "*", "halfAngleApprox"}], ")"}], "2"], ",", 
         RowBox[{"{", "1", "}"}]}], "]"}], "Code"]], "Code"]}], ";"}], 
  "]"}]], "Input",
 CellLabel->
  "In[1052]:=",ExpressionUUID->"6f2a6133-61eb-4d7d-87f1-d00474d55e8a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"t", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      SuperscriptBox[
       RowBox[{"Max", "[", "distances", "]"}], "\[Alpha]"], "*", 
      SuperscriptBox["\[Beta]", 
       RowBox[{"1", "-", "\[Alpha]"}]]}], "+", "\[CurlyEpsilon]"}], "/.", 
    RowBox[{"\[CurlyEpsilon]", "->", 
     SuperscriptBox["10", 
      RowBox[{"-", "3"}]]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rescaledDistances", "=", 
   RowBox[{
    FractionBox["t", "\[Beta]"], "*", 
    SuperscriptBox[
     RowBox[{"(", 
      FractionBox["distances", "t"], ")"}], "\[Beta]"]}]}], ";"}]}], "Input",
 CellLabel->
  "In[1053]:=",ExpressionUUID->"7405dbe7-dbab-4026-8710-69a5eca49b16"]
}, Closed]],

Cell[CellGroupData[{

Cell["Visualizations", "Subsection",
 CellChangeTimes->{{3.9321123109492784`*^9, 
  3.9321123140283947`*^9}},ExpressionUUID->"69f0e42c-3406-4f4e-acf1-\
8fe23f3c33cd"],

Cell[CellGroupData[{

Cell["Determining the threshold", "Subsubsection",
 CellChangeTimes->{{3.933846607533293*^9, 
  3.9338466114339895`*^9}},ExpressionUUID->"e6abe74c-2ed8-4d88-806a-\
9ef2df97c122"],

Cell[BoxData[
 RowBox[{
  RowBox[{"AM", "=", 
   RowBox[{"fromDistancesToAM", "[", 
    RowBox[{
    "CCvolume", ",", "rescaledDistances", ",", "W0list", ",", "\[Alpha]"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9321047425472555`*^9, 3.932104768096253*^9}, {
   3.9321053453860784`*^9, 3.9321053482443533`*^9}, 3.932108156104565*^9},
 CellLabel->
  "In[1055]:=",ExpressionUUID->"d0ca5221-0095-42da-a88b-a9894a0ae25c"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"sizeCC", ",", "amountCC", ",", "affinityTrees"}], "}"}], "=", 
   RowBox[{"AffinityTrees", "[", 
    RowBox[{"AM", ",", "0.99957"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.923711221944624*^9, 3.9237112322269335`*^9}, 
   3.9237114279340596`*^9, {3.923711460042675*^9, 3.9237115049424553`*^9}, {
   3.9237117258341885`*^9, 3.923711731152528*^9}, 3.9237153473046465`*^9, {
   3.9237153873143682`*^9, 3.9237154100639577`*^9}, 3.9237188803098583`*^9, {
   3.923719030871287*^9, 3.923719031362714*^9}, {3.923719203838602*^9, 
   3.923719204449658*^9}, {3.927190715922208*^9, 3.927190724855472*^9}, {
   3.932102917119735*^9, 3.9321029218123045`*^9}, {3.932102996796543*^9, 
   3.9321030001480474`*^9}, 3.932105366789465*^9, {3.932105415763049*^9, 
   3.932105425709944*^9}, 3.932109371607067*^9, 3.932464175111622*^9},
 CellLabel->
  "In[1087]:=",ExpressionUUID->"c789a083-98e6-43e5-91cb-b4e8f4a37a39"],

Cell[BoxData[
 RowBox[{"plotAffinityTreesColored", "[", 
  RowBox[{"affinityTrees", ",", "CClist", ",", 
   RowBox[{"Re", "@", 
    RowBox[{"dataVolume", "[", 
     RowBox[{"[", "1", "]"}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9237172093328514`*^9, 3.923717215324375*^9}, {
  3.9321029305269375`*^9, 3.932102961456594*^9}, {3.9321093881394176`*^9, 
  3.932109415623741*^9}, {3.9321094467775116`*^9, 3.9321094854004087`*^9}},
 CellLabel->
  "In[1088]:=",ExpressionUUID->"2a5cd721-d7fb-447b-94e7-9ddd31f72df2"],

Cell[BoxData[
 RowBox[{"plotAffinityTreesColoredVis", "[", 
  RowBox[{"affinityTrees", ",", "CClist", ",", 
   RowBox[{"Re", "@", 
    RowBox[{"dataVolume", "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], ",", "thinCost"}], "]"}]], "Input",
 CellChangeTimes->{{3.9321098059158964`*^9, 3.9321098565725355`*^9}},
 CellLabel->
  "In[1089]:=",ExpressionUUID->"92db74ff-f369-4434-8318-6469b7a98bb3"]
}, Closed]],

Cell[CellGroupData[{

Cell["Export Results", "Subsubsection",
 CellChangeTimes->{{3.933846633510059*^9, 
  3.933846636740365*^9}},ExpressionUUID->"5c7ae94f-b94c-4d09-abab-\
2b69ee465f2e"],

Cell[BoxData[
 RowBox[{"(*", "w", "*)"}]], "Input",
 CellChangeTimes->{3.9321055765945983`*^9},
 CellLabel->
  "In[1090]:=",ExpressionUUID->"c85fcc8e-2e00-49cb-8673-0cf4fb5a8e53"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Export", "[", 
   RowBox[{"\"\<Im21_AffinityTrees099957.png\>\"", ",", 
    RowBox[{"plotAffinityTreesColoredVis", "[", 
     RowBox[{"affinityTrees", ",", "CClist", ",", 
      RowBox[{"Re", "@", 
       RowBox[{"dataVolume", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ",", "thinCost"}], "]"}]}], "]"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.932462761656988*^9, 3.9324628009899254`*^9}},
 CellLabel->
  "In[1043]:=",ExpressionUUID->"456bbd87-169d-437d-9804-cda71ae07d74"]
}, Closed]],

Cell[CellGroupData[{

Cell["Other visualizations", "Subsubsection",
 CellChangeTimes->{{3.9338466392009134`*^9, 
  3.933846642513669*^9}},ExpressionUUID->"00160f1c-bfcf-44b2-845b-\
195595125c3b"],

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Image", "[", 
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Boole", "[", 
        RowBox[{
         RowBox[{"Min", "[", 
          RowBox[{"Abs", "[", 
           RowBox[{"#", "-", "i"}], "]"}], "]"}], "==", "0"}], "]"}], "&"}], 
      ",", "CCvolume", ",", 
      RowBox[{"{", "2", "}"}]}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", 
     RowBox[{"Max", "[", "CCvolume", "]"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.931749403652131*^9, 3.931749513627677*^9}},
 CellLabel->
  "In[1064]:=",ExpressionUUID->"56457f0c-755b-45af-b18d-85cbe5ade370"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"CCim", "=", 
   RowBox[{"Map", "[", 
    RowBox[{"Max", ",", "CCvolume", ",", 
     RowBox[{"{", "2", "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CClabels", "=", 
   RowBox[{"DeleteCases", "[", 
    RowBox[{
     RowBox[{"DeleteDuplicates", "[", 
      RowBox[{"Flatten", "[", "CCim", "]"}], "]"}], ",", "0"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.931750037099835*^9, 3.931750054399232*^9}, {
  3.9317503833299093`*^9, 3.931750400125741*^9}},
 CellLabel->
  "In[1065]:=",ExpressionUUID->"4a419513-ad1b-462d-ac76-eb0cd20d38cf"],

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Colorize", "[", 
    RowBox[{"CCim", ",", 
     RowBox[{"ColorRules", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"CClabels", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "->", "Red"}], ",", 
        RowBox[{
         RowBox[{"CClabels", "[", 
          RowBox[{"[", "j", "]"}], "]"}], "->", "Yellow"}], ",", 
        RowBox[{"_", "->", "Black"}]}], "}"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", 
     RowBox[{"Length", "[", "CClabels", "]"}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"j", ",", "1", ",", 
     RowBox[{"Length", "[", "CClabels", "]"}], ",", "1"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.9317500572255096`*^9, 3.9317501947485237`*^9}, 
   3.9317503695362797`*^9, {3.931750408131626*^9, 3.931750430623553*^9}, {
   3.9319717715689144`*^9, 3.9319717876254716`*^9}, 3.932112357213622*^9},
 CellLabel->
  "In[1067]:=",ExpressionUUID->"577deb00-745b-43d0-8d8a-36c28483d60a"],

Cell[BoxData[
 RowBox[{"Colorize", "[", "CCim", "]"}]], "Input",
 CellChangeTimes->{{3.9321361145722084`*^9, 3.9321361201005697`*^9}},
 CellLabel->
  "In[1068]:=",ExpressionUUID->"a285291f-05ad-4bba-a561-d218a71e67af"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{"dilIm", "=", 
     RowBox[{"ConstantArray", "[", 
      RowBox[{"0", ",", 
       RowBox[{"{", 
        RowBox[{"Nx", ",", "Ny"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"MapThread", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"dilIm", "[", 
           RowBox[{"[", 
            RowBox[{"Sequence", "@@", 
             RowBox[{"#2", "[", 
              RowBox[{"[", 
               RowBox[{";;", "2"}], "]"}], "]"}]}], "]"}], "]"}], "=", 
          RowBox[{"Max", "[", 
           RowBox[{
            RowBox[{"dilIm", "[", 
             RowBox[{"[", 
              RowBox[{"Sequence", "@@", 
               RowBox[{"#2", "[", 
                RowBox[{"[", 
                 RowBox[{";;", "2"}], "]"}], "]"}]}], "]"}], "]"}], ",", 
            "#1"}], "]"}]}], ";"}], ")"}], "&"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"pointwiseAM", "[", 
         RowBox[{"[", 
          RowBox[{"CClabels", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "]"}], "]"}], ",", 
        RowBox[{"Flatten", "[", 
         RowBox[{"CClist", ",", "1"}], "]"}]}], "}"}]}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Image", "[", "dilIm", "]"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.9318377217749434`*^9, 3.9318378460690775`*^9}, {
   3.931838070774608*^9, 3.9318380740192223`*^9}, {3.931838290441537*^9, 
   3.931838389088168*^9}, 3.931838625741403*^9, {3.9318386586407003`*^9, 
   3.931838671809863*^9}},
 CellLabel->
  "In[418]:=",ExpressionUUID->"465111fa-d066-42e5-8c0e-6b0ec50146c4"],

Cell[BoxData[
 RowBox[{"Colorize", "[", "CCim", "]"}]], "Input",
 CellChangeTimes->{{3.931750505443252*^9, 3.93175051049619*^9}},
 CellLabel->
  "In[1069]:=",ExpressionUUID->"f51888b5-0a7c-46c7-a2bb-70bd5f2ad985"],

Cell[BoxData[
 RowBox[{
  RowBox[{"wellAligned", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "12"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "7"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "10"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "11"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "14"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "28"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "29"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "22"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"6", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"7", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "17"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "18"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "13"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "16"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"9", ",", "30"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "19"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"11", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"12", ",", "15"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"12", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"13", ",", "9"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"14", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"15", ",", "12"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "9"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"17", ",", "18"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"17", ",", "8"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"18", ",", "17"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"18", ",", "8"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"19", ",", "10"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"19", ",", "32"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"20", ",", "21"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"21", ",", "20"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"21", ",", "26"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"22", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"25", ",", "23"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"25", ",", "26"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"26", ",", "25"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"26", ",", "21"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"28", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"29", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"30", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"32", ",", "19"}], "}"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9320140482081366`*^9, 3.9320141766328993`*^9}, {
  3.932137092738673*^9, 3.9321373368438845`*^9}},
 CellLabel->
  "In[1070]:=",ExpressionUUID->"2a0b26e9-cb38-4ed9-b9a1-e510db25fb3b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"crit", "=", 
   RowBox[{"Mean", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"AM", "[", 
       RowBox[{"[", 
        RowBox[{"Sequence", "@@", "#"}], "]"}], "]"}], "&"}], "/@", 
     "wellAligned"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.932015033398677*^9, 3.932015043136489*^9}, {
  3.9320151188657074`*^9, 3.9320151385869946`*^9}},
 CellLabel->
  "In[1071]:=",ExpressionUUID->"05517ad1-6a14-4a28-911f-543aede25d1e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"shouldNotHighAffinity", "=", 
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{"Complement", "[", 
      RowBox[{
       RowBox[{"Position", "[", 
        RowBox[{
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"#", ">=", "crit"}], "&"}], ",", "AM", ",", 
           RowBox[{"{", "2", "}"}]}], "]"}], ",", "True"}], "]"}], ",", 
       "wellAligned"}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "!=", 
       RowBox[{"#", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], "&"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.931750236854005*^9, 3.9317503105131736`*^9}, {
   3.932013879799447*^9, 3.932013948795471*^9}, {3.9320139939642954`*^9, 
   3.93201403208346*^9}, {3.932014192014755*^9, 3.932014387715805*^9}, {
   3.9320151017902546`*^9, 3.9320151032302437`*^9}, 3.9320151461530704`*^9, 
   3.9324640990235524`*^9},
 CellLabel->
  "In[1084]:=",ExpressionUUID->"a600f515-952d-410e-8d93-44548240e785"],

Cell[BoxData[
 RowBox[{
  RowBox[{"shouldBeHighAffinity", "=", 
   RowBox[{"Complement", "[", 
    RowBox[{"wellAligned", ",", 
     RowBox[{"Position", "[", 
      RowBox[{
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"#", ">=", "crit"}], "&"}], ",", "AM", ",", 
         RowBox[{"{", "2", "}"}]}], "]"}], ",", "True"}], "]"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.93201441059313*^9, 3.9320144651369634`*^9}, 
   3.932015108307701*^9, 3.932015143916931*^9, 3.9324640934140797`*^9},
 CellLabel->
  "In[1082]:=",ExpressionUUID->"0249cb81-e837-4397-a829-fbb701c6e69b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"hasHighAffinity", "=", 
   RowBox[{"Intersection", "[", 
    RowBox[{"wellAligned", ",", 
     RowBox[{"Position", "[", 
      RowBox[{
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"#", ">=", "crit"}], "&"}], ",", "AM", ",", 
         RowBox[{"{", "2", "}"}]}], "]"}], ",", "True"}], "]"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.932014585743884*^9, 3.9320145989791737`*^9}, 
   3.932015114755213*^9, 3.932015148782063*^9, 3.9324640914215784`*^9},
 CellLabel->
  "In[1083]:=",ExpressionUUID->"e6ec84cc-f3f4-46a3-8619-b6eb0449eded"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"AM", "[", 
     RowBox[{"[", 
      RowBox[{"Sequence", "@@", "#"}], "]"}], "]"}], "&"}], "/@", 
   "shouldNotHighAffinity"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"AM", "[", 
     RowBox[{"[", 
      RowBox[{"Sequence", "@@", "#"}], "]"}], "]"}], "&"}], "/@", 
   "shouldBeHighAffinity"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"AM", "[", 
     RowBox[{"[", 
      RowBox[{"Sequence", "@@", "#"}], "]"}], "]"}], "&"}], "/@", 
   "hasHighAffinity"}], ";"}]}], "Input",
 CellChangeTimes->{{3.932014392521184*^9, 3.9320144020083404`*^9}, {
  3.932014450696201*^9, 3.932014461359423*^9}, {3.9320146043004475`*^9, 
  3.9320146083165827`*^9}, {3.9320150107864733`*^9, 3.93201502387142*^9}, {
  3.9324640855618353`*^9, 3.932464087089079*^9}},
 CellLabel->
  "In[1079]:=",ExpressionUUID->"c5df9688-0eac-4374-a3bd-5f44ed6877ab"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"i", " ", "reference", " ", "CC", " ", 
     RowBox[{"(", "Yellow", ")"}]}], ",", " ", 
    RowBox[{"j", " ", "CC", " ", "of", " ", "interest", " ", 
     RowBox[{"(", "Red", ")"}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Manipulate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"i", "=", 
      RowBox[{"wellAligned", "[", 
       RowBox[{"[", 
        RowBox[{"index", ",", "1"}], "]"}], "]"}]}], ";", " ", 
     RowBox[{"j", "=", 
      RowBox[{"wellAligned", "[", 
       RowBox[{"[", 
        RowBox[{"index", ",", "2"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"better", " ", "=", 
      RowBox[{"DeleteCases", "[", 
       RowBox[{
        RowBox[{"Flatten", "@", 
         RowBox[{"Position", "[", 
          RowBox[{
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"#", ">", 
               RowBox[{"AM", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "j"}], "]"}], "]"}]}], "&"}], ",", 
             RowBox[{"AM", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", "True"}], "]"}]}],
         ",", "i"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"colors", "=", 
      RowBox[{"Flatten", "@", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"CClabels", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "->", "Yellow"}], ",", 
         RowBox[{
          RowBox[{"CClabels", "[", 
           RowBox[{"[", "j", "]"}], "]"}], "->", "Red"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"CClabels", "[", 
             RowBox[{"[", "#", "]"}], "]"}], "->", "Blue"}], "&"}], "/@", 
          "better"}], ",", 
         RowBox[{"_", "->", "Black"}]}], "}"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Colorize", "[", 
      RowBox[{"CCim", ",", 
       RowBox[{"ColorRules", "->", "colors"}]}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"index", ",", "1", ",", 
      RowBox[{"Length", "[", "wellAligned", "]"}], ",", "1"}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.931840187488496*^9, 3.9318401881691294`*^9}, {
  3.9318407523984785`*^9, 3.9318407830956907`*^9}, {3.9318408613669024`*^9, 
  3.9318409151365485`*^9}, {3.9319322600542727`*^9, 3.931932308923829*^9}, {
  3.9319323495540695`*^9, 3.9319323566158323`*^9}, {3.9319323871541057`*^9, 
  3.931932393587499*^9}, {3.931932443005553*^9, 3.9319324995804114`*^9}, {
  3.93193253002835*^9, 3.9319325592241077`*^9}, {3.9319327763418217`*^9, 
  3.9319327956137733`*^9}, {3.9319328327965755`*^9, 3.9319329320606484`*^9}, {
  3.9319329686795125`*^9, 3.931933031758746*^9}, {3.9320064278678093`*^9, 
  3.932006455278471*^9}, {3.9320987332306967`*^9, 3.932098757535075*^9}, {
  3.9320988017277083`*^9, 3.9320989016751857`*^9}, {3.932098983525535*^9, 
  3.93209898369428*^9}, {3.932181770599007*^9, 3.932181775373398*^9}},
 CellLabel->
  "In[1078]:=",ExpressionUUID->"10ab770d-72c9-48b9-b13f-3ed584cb6d68"],

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"W0im", "=", 
     RowBox[{"ConstantArray", "[", 
      RowBox[{"0", ",", 
       RowBox[{
        RowBox[{"Dimensions", "[", "CCvolume", "]"}], "[", 
        RowBox[{"[", 
         RowBox[{";;", "2"}], "]"}], "]"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"MapThread", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"W0im", "[", 
          RowBox[{"[", 
           RowBox[{"Sequence", "@@", 
            RowBox[{"#1", "[", 
             RowBox[{"[", 
              RowBox[{";;", "2"}], "]"}], "]"}]}], "]"}], "]"}], "=", "#2"}], 
        ")"}], "&"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"CClist", "[", 
         RowBox[{"[", "index", "]"}], "]"}], ",", 
        RowBox[{"Rescale", "[", 
         RowBox[{"W0list", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{
             RowBox[{"elemList", "[", 
              RowBox[{"[", "index", "]"}], "]"}], "+", "1"}], ";;", 
            RowBox[{"elemList", "[", 
             RowBox[{"[", 
              RowBox[{"index", "+", "1"}], "]"}], "]"}]}], "]"}], "]"}], 
         "]"}]}], "}"}]}], "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{"MapThread", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"W0im", "[", 
          RowBox[{"[", 
           RowBox[{"Sequence", "@@", 
            RowBox[{"#1", "[", 
             RowBox[{"[", 
              RowBox[{";;", "2"}], "]"}], "]"}]}], "]"}], "]"}], "=", "#2"}], 
        ")"}], "&"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"CClist", "[", 
         RowBox[{"[", "indexj", "]"}], "]"}], ",", 
        RowBox[{"Rescale", "[", 
         RowBox[{"W0list", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{
             RowBox[{"elemList", "[", 
              RowBox[{"[", "indexj", "]"}], "]"}], "+", "1"}], ";;", 
            RowBox[{"elemList", "[", 
             RowBox[{"[", 
              RowBox[{"indexj", "+", "1"}], "]"}], "]"}]}], "]"}], "]"}], 
         "]"}]}], "}"}]}], "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{"better", " ", "=", 
     RowBox[{"DeleteCases", "[", 
      RowBox[{
       RowBox[{"Flatten", "@", 
        RowBox[{"Position", "[", 
         RowBox[{
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"#", ">", 
              RowBox[{"AM", "[", 
               RowBox[{"[", 
                RowBox[{"index", ",", "indexj"}], "]"}], "]"}]}], "&"}], ",", 
            RowBox[{"AM", "[", 
             RowBox[{"[", "index", "]"}], "]"}]}], "]"}], ",", "True"}], 
         "]"}]}], ",", "index"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"MapThread", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"W0im", "[", 
            RowBox[{"[", 
             RowBox[{"Sequence", "@@", 
              RowBox[{"#1", "[", 
               RowBox[{"[", 
                RowBox[{";;", "2"}], "]"}], "]"}]}], "]"}], "]"}], "=", 
           "#2"}], ")"}], "&"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"CClist", "[", 
           RowBox[{"[", "#", "]"}], "]"}], ",", 
          RowBox[{"Rescale", "[", 
           RowBox[{"W0list", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{
               RowBox[{"elemList", "[", 
                RowBox[{"[", "#", "]"}], "]"}], "+", "1"}], ";;", 
              RowBox[{"elemList", "[", 
               RowBox[{"[", 
                RowBox[{"#", "+", "1"}], "]"}], "]"}]}], "]"}], "]"}], 
           "]"}]}], "}"}]}], "]"}], "&"}], "/@", "better"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Image", "[", "W0im", "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"index", ",", "1", ",", 
     RowBox[{"Length", "[", "CClist", "]"}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"indexj", ",", "1", ",", 
     RowBox[{"Length", "[", "CClist", "]"}], ",", "1"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.9320991949285154`*^9, 3.932099219121735*^9}, {
  3.9320992849911785`*^9, 3.932099288426467*^9}, {3.93209932119139*^9, 
  3.93209946669934*^9}, {3.932099756080829*^9, 3.9320997902779274`*^9}, {
  3.9320998322295127`*^9, 3.93209989720934*^9}},
 CellLabel->
  "In[1085]:=",ExpressionUUID->"70232740-e7dd-4cbf-a7ae-b6a83180f0f8"],

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"W0im", "=", 
     RowBox[{"ConstantArray", "[", 
      RowBox[{"0", ",", 
       RowBox[{
        RowBox[{"Dimensions", "[", "CCvolume", "]"}], "[", 
        RowBox[{"[", 
         RowBox[{";;", "2"}], "]"}], "]"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"i", "=", 
     RowBox[{"wellAligned", "[", 
      RowBox[{"[", 
       RowBox[{"index", ",", "1"}], "]"}], "]"}]}], ";", 
    RowBox[{"j", "=", 
     RowBox[{"wellAligned", "[", 
      RowBox[{"[", 
       RowBox[{"index", ",", "2"}], "]"}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"MapThread", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"W0im", "[", 
          RowBox[{"[", 
           RowBox[{"Sequence", "@@", 
            RowBox[{"#1", "[", 
             RowBox[{"[", 
              RowBox[{";;", "2"}], "]"}], "]"}]}], "]"}], "]"}], "=", "#2"}], 
        ")"}], "&"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"CClist", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", 
        RowBox[{"Rescale", "[", 
         RowBox[{"W0list", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{
             RowBox[{"elemList", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "+", "1"}], ";;", 
            RowBox[{"elemList", "[", 
             RowBox[{"[", 
              RowBox[{"i", "+", "1"}], "]"}], "]"}]}], "]"}], "]"}], "]"}]}], 
       "}"}]}], "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{"MapThread", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"W0im", "[", 
          RowBox[{"[", 
           RowBox[{"Sequence", "@@", 
            RowBox[{"#1", "[", 
             RowBox[{"[", 
              RowBox[{";;", "2"}], "]"}], "]"}]}], "]"}], "]"}], "=", "#2"}], 
        ")"}], "&"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"CClist", "[", 
         RowBox[{"[", "j", "]"}], "]"}], ",", 
        RowBox[{"Rescale", "[", 
         RowBox[{"W0list", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{
             RowBox[{"elemList", "[", 
              RowBox[{"[", "j", "]"}], "]"}], "+", "1"}], ";;", 
            RowBox[{"elemList", "[", 
             RowBox[{"[", 
              RowBox[{"j", "+", "1"}], "]"}], "]"}]}], "]"}], "]"}], "]"}]}], 
       "}"}]}], "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{"better", " ", "=", 
     RowBox[{"DeleteCases", "[", 
      RowBox[{
       RowBox[{"Flatten", "@", 
        RowBox[{"Position", "[", 
         RowBox[{
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"#", ">", 
              RowBox[{"AM", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "j"}], "]"}], "]"}]}], "&"}], ",", 
            RowBox[{"AM", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", "True"}], "]"}]}], 
       ",", "i"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"MapThread", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"W0im", "[", 
            RowBox[{"[", 
             RowBox[{"Sequence", "@@", 
              RowBox[{"#1", "[", 
               RowBox[{"[", 
                RowBox[{";;", "2"}], "]"}], "]"}]}], "]"}], "]"}], "=", 
           "#2"}], ")"}], "&"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"CClist", "[", 
           RowBox[{"[", "#", "]"}], "]"}], ",", 
          RowBox[{"Rescale", "[", 
           RowBox[{"W0list", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{
               RowBox[{"elemList", "[", 
                RowBox[{"[", "#", "]"}], "]"}], "+", "1"}], ";;", 
              RowBox[{"elemList", "[", 
               RowBox[{"[", 
                RowBox[{"#", "+", "1"}], "]"}], "]"}]}], "]"}], "]"}], 
           "]"}]}], "}"}]}], "]"}], "&"}], "/@", "better"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Image", "[", "W0im", "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"index", ",", "1", ",", 
     RowBox[{"Length", "[", "wellAligned", "]"}], ",", "1"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.9320991949285154`*^9, 3.932099219121735*^9}, {
  3.9320992849911785`*^9, 3.932099288426467*^9}, {3.93209932119139*^9, 
  3.93209946669934*^9}, {3.932099756080829*^9, 3.9320997902779274`*^9}, {
  3.9320998322295127`*^9, 3.93209989720934*^9}, {3.932100585044009*^9, 
  3.9321006450935154`*^9}},
 CellLabel->
  "In[1086]:=",ExpressionUUID->"f53c1605-157d-4ff9-b4f6-48df64e20324"],

Cell[BoxData[
 RowBox[{"GraphicsRow", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Colorize", "[", 
      RowBox[{
       RowBox[{"Round", "[", 
        RowBox[{"ImageData", "[", 
         RowBox[{"Dilation", "[", 
          RowBox[{
           RowBox[{"Image", "@", 
            RowBox[{"Map", "[", 
             RowBox[{"Max", ",", 
              RowBox[{"setICC", "*", 
               RowBox[{"ImageData", "[", "thinCost", "]"}]}], ",", 
              RowBox[{"{", "2", "}"}]}], "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "1", ",", "0"}], "}"}]}], "}"}]}], "]"}], 
         "]"}], "]"}], ",", 
       RowBox[{"ImageSize", "->", "Full"}]}], "]"}], ",", 
     RowBox[{"Show", "[", 
      RowBox[{
       RowBox[{"plotAffinityTreesColoredVis", "[", 
        RowBox[{"affinityTrees", ",", "CClist", ",", 
         RowBox[{"Re", "@", 
          RowBox[{"dataVolume", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", "thinCost"}], "]"}], 
       RowBox[{"(*", 
        RowBox[{",", " ", 
         RowBox[{"Graphics", "[", 
          RowBox[{"{", 
           RowBox[{"Red", ",", " ", 
            RowBox[{"PointSize", "[", "0.01", "]"}], ",", " ", 
            RowBox[{"Map", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Point", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Dimensions", "[", "CCim", "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "-", 
                   RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}], "]"}], "&"}], 
              ",", " ", "seedsNew"}], "]"}]}], "}"}], "]"}]}], "*)"}], ",", 
       RowBox[{"ImageSize", "->", "Full"}]}], "]"}]}], "}"}], ",", 
   RowBox[{"ImageSize", "->", "Full"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9324439823656635`*^9, 3.9324440216210966`*^9}, {
   3.932458293233836*^9, 3.932458360883828*^9}, {3.9324616280232997`*^9, 
   3.9324616573028426`*^9}, {3.9324617559303675`*^9, 
   3.9324617618897495`*^9}, {3.9324617997406454`*^9, 
   3.9324618035516777`*^9}, {3.9324618587016397`*^9, 3.9324618707118006`*^9}, 
   3.9324619853962526`*^9},
 CellLabel->
  "In[1063]:=",ExpressionUUID->"7695840a-2f98-4dc6-814a-c6a0f20e5a62"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"pointwiseAM", "=", 
   RowBox[{"MorphConvOnDistances", "[", 
    RowBox[{"CCvolume", ",", "rescaledDistances", ",", "W0list"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dilIm", "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", 
     RowBox[{
      RowBox[{"Dimensions", "[", "setICC", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{";;", "2"}], "]"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MapThread", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"dilIm", "[", 
         RowBox[{"[", 
          RowBox[{"Sequence", "@@", 
           RowBox[{"#2", "[", 
            RowBox[{"[", 
             RowBox[{";;", "2"}], "]"}], "]"}]}], "]"}], "]"}], "=", 
        RowBox[{"Max", "[", 
         RowBox[{
          RowBox[{"dilIm", "[", 
           RowBox[{"[", 
            RowBox[{"Sequence", "@@", 
             RowBox[{"#2", "[", 
              RowBox[{"[", 
               RowBox[{";;", "2"}], "]"}], "]"}]}], "]"}], "]"}], ",", "#1"}],
          "]"}]}], ";"}], ")"}], "&"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"pointwiseAM", "[", 
       RowBox[{"[", 
        RowBox[{"CClabels", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "]"}], "]"}], ",", 
      RowBox[{"Flatten", "[", 
       RowBox[{"CClist", ",", "1"}], "]"}]}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Image", "[", "dilIm", "]"}]}], "Input",
 CellChangeTimes->{{3.9321814926967463`*^9, 3.9321815393998113`*^9}},
 CellLabel->
  "In[1056]:=",ExpressionUUID->"92f8fce6-09fe-47e8-bd67-3f8287912fa7"]
}, Closed]]
}, Closed]]
}, Closed]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1428, 839.25},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
TaggingRules-><|"TryRealOnly" -> False|>,
InputAliases->((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((\
((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((\
(((((((((((((((((((((((((((((((((((Rule["intt", 
                    RowBox[{"\[Integral]", 
                    RowBox[{"\[SelectionPlaceholder]", 
                    RowBox[{"\[DifferentialD]", "\[Placeholder]"}]}]}], 
                    "dintt", 
                    RowBox[{
                    SubsuperscriptBox["\[Integral]", 
                    "\[SelectionPlaceholder]", "\[Placeholder]"], 
                    RowBox[{"\[Placeholder]", 
                    RowBox[{"\[DifferentialD]", "\[Placeholder]"}]}]}], 
                    "rintt", 
                    RowBox[{
                    UnderscriptBox["\[Integral]", 
                    
                    RowBox[{"\[SelectionPlaceholder]", "\[Element]", 
                    "\[Placeholder]"}]], "\[Placeholder]"}], "sumt", 
                    RowBox[{
                    UnderoverscriptBox["\[Sum]", 
                    
                    RowBox[{"\[SelectionPlaceholder]", "=", 
                    "\[Placeholder]"}], "\[Placeholder]"], 
                    "\[Placeholder]"}], "prodt", 
                    RowBox[{
                    UnderoverscriptBox["\[Product]", 
                    
                    RowBox[{"\[SelectionPlaceholder]", "=", 
                    "\[Placeholder]"}], "\[Placeholder]"], 
                    "\[Placeholder]"}], "dt", 
                    RowBox[{
                    SubscriptBox["\[PartialD]", "\[SelectionPlaceholder]"], 
                    "\[Placeholder]"}], "cbrt", 
                    RadicalBox["\[SelectionPlaceholder]", "3", SurdForm -> 
                    True, MultilineFunction -> None], "surd", 
                    RadicalBox["\[SelectionPlaceholder]", "\[Placeholder]", 
                    SurdForm -> True, MultilineFunction -> None], "ket", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, "Ket"], "bra", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, "Bra"], "braket", 
                    
                    TemplateBox[{"\[SelectionPlaceholder]", 
                    "\[Placeholder]"}, "BraKet"], "delay", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "SystemsModelDelay"], "grad", 
                    RowBox[{
                    SubscriptBox["\[Del]", "\[SelectionPlaceholder]"], 
                    "\[Placeholder]"}], "del.", 
                    RowBox[{
                    SubscriptBox["\[Del]", "\[SelectionPlaceholder]"], ".", 
                    "\[Placeholder]"}], "delx", 
                    RowBox[{
                    SubscriptBox["\[Del]", "\[SelectionPlaceholder]"], 
                    "\[Cross]", "\[Placeholder]"}], "del2", 
                    RowBox[{
                    SubsuperscriptBox["\[Del]", "\[SelectionPlaceholder]", 2],
                     "\[Placeholder]"}], "kd", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "KroneckerDeltaSeq"], "algs", 
                    TemplateBox[{}, "Algebraics"], "bools", 
                    TemplateBox[{}, "Booleans"], "comps", 
                    TemplateBox[{}, "Complexes"], "ints", 
                    TemplateBox[{}, "Integers"], "pris", 
                    TemplateBox[{}, "Primes"], "rats", 
                    TemplateBox[{}, "Rationals"], "reals", 
                    TemplateBox[{}, "Reals"], "pints", 
                    TemplateBox[{}, "PositiveIntegers"], "npints", 
                    TemplateBox[{}, "NonPositiveIntegers"], "nnints", 
                    TemplateBox[{}, "NonNegativeIntegers"], "nints", 
                    TemplateBox[{}, "NegativeIntegers"], "prats", 
                    TemplateBox[{}, "PositiveRationals"], "nprats", 
                    TemplateBox[{}, "NonPositiveRationals"], "nnrats", 
                    TemplateBox[{}, "NonNegativeRationals"], "nrats", 
                    TemplateBox[{}, "NegativeRationals"], "preals", 
                    TemplateBox[{}, "PositiveReals"], "npreals", 
                    TemplateBox[{}, "NonPositiveReals"], "nnreals", 
                    TemplateBox[{}, "NonNegativeReals"], "nreals", 
                    TemplateBox[{}, "NegativeReals"], "dlim", 
                    RowBox[{
                    UnderscriptBox["\[Limit]", 
                    RowBox[{"\[SelectionPlaceholder]", 
                    UnderscriptBox["\[Rule]", 
                    TemplateBox[{}, "Integers"]], "\[Infinity]"}]], 
                    "\[Placeholder]"}], "dMlim", 
                    RowBox[{
                    UnderscriptBox["\[MaxLimit]", 
                    RowBox[{"\[SelectionPlaceholder]", 
                    UnderscriptBox["\[Rule]", 
                    TemplateBox[{}, "Integers"]], "\[Infinity]"}]], 
                    "\[Placeholder]"}], "dmlim", 
                    RowBox[{
                    UnderscriptBox["\[MinLimit]", 
                    RowBox[{"\[SelectionPlaceholder]", 
                    UnderscriptBox["\[Rule]", 
                    TemplateBox[{}, "Integers"]], "\[Infinity]"}]], 
                    "\[Placeholder]"}], "tue", 
                    OverscriptBox["\[UndirectedEdge]", "\[Placeholder]"], 
                    "tde", 
                    OverscriptBox["\[DirectedEdge]", "\[Placeholder]"], "cB", 
                    TemplateBox[{}, "CombinatorB"], "cC", 
                    TemplateBox[{}, "CombinatorC"], "cI", 
                    TemplateBox[{}, "CombinatorI"], "cK", 
                    TemplateBox[{}, "CombinatorK"], "cS", 
                    TemplateBox[{}, "CombinatorS"], "cW", 
                    TemplateBox[{}, "CombinatorW"], "cY", 
                    TemplateBox[{}, "CombinatorY"], "notation", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", 
                    "\[DoubleLongLeftRightArrow]", " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation>", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongRightArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation<", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongLeftArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "symb", 
                    RowBox[{"Symbolize", "[", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], "]"}], "infixnotation", 
                    RowBox[{"InfixNotation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], ",", "\[Placeholder]"}], "]"}], 
                    "addia", 
                    RowBox[{"AddInputAlias", "[", 
                    RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "pattwraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationPatternTag"], "madeboxeswraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationMadeBoxesTag"], "notation", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", 
                    "\[DoubleLongLeftRightArrow]", " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation>", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongRightArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation<", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongLeftArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "symb", 
                    RowBox[{"Symbolize", "[", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], "]"}], "infixnotation", 
                    RowBox[{"InfixNotation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], ",", "\[Placeholder]"}], "]"}], 
                    "addia", 
                    RowBox[{"AddInputAlias", "[", 
                    RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "pattwraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationPatternTag"], "madeboxeswraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationMadeBoxesTag"], "notation", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", 
                    "\[DoubleLongLeftRightArrow]", " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation>", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongRightArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation<", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongLeftArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "symb", 
                    RowBox[{"Symbolize", "[", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], "]"}], "infixnotation", 
                    RowBox[{"InfixNotation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], ",", "\[Placeholder]"}], "]"}], 
                    "addia", 
                    RowBox[{"AddInputAlias", "[", 
                    RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "pattwraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationPatternTag"], "madeboxeswraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationMadeBoxesTag"], "notation", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", 
                    "\[DoubleLongLeftRightArrow]", " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation>", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongRightArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation<", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongLeftArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "symb", 
                    RowBox[{"Symbolize", "[", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], "]"}], "infixnotation", 
                    RowBox[{"InfixNotation", "[", 
                    RowBox[{
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], ",", "\[Placeholder]"}], "]"}], 
                    "addia", 
                    RowBox[{"AddInputAlias", "[", 
                    RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "pattwraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationPatternTag"], "madeboxeswraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationMadeBoxesTag"], "notation", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", 
                    "\[DoubleLongLeftRightArrow]", " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation>", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongRightArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation<", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongLeftArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "symb", 
                    RowBox[{"Symbolize", "[", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], "]"}], "infixnotation", 
                    RowBox[{"InfixNotation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], ",", "\[Placeholder]"}], "]"}], 
                    "addia", 
                    RowBox[{"AddInputAlias", "[", 
                    RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "pattwraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationPatternTag"], "madeboxeswraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationMadeBoxesTag"], "notation", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", 
                    "\[DoubleLongLeftRightArrow]", " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation>", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongRightArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation<", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongLeftArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "symb", 
                    RowBox[{"Symbolize", "[", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], "]"}], "infixnotation", 
                    RowBox[{"InfixNotation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], ",", "\[Placeholder]"}], "]"}], 
                    "addia", 
                    RowBox[{"AddInputAlias", "[", 
                    RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "pattwraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationPatternTag"], "madeboxeswraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationMadeBoxesTag"], "notation", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", 
                    "\[DoubleLongLeftRightArrow]", " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation>", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongRightArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation<", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongLeftArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "symb", 
                    RowBox[{"Symbolize", "[", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], "]"}], "infixnotation", 
                    RowBox[{"InfixNotation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], ",", "\[Placeholder]"}], "]"}], 
                    "addia", 
                    RowBox[{"AddInputAlias", "[", 
                    RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "pattwraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationPatternTag"], "madeboxeswraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationMadeBoxesTag"], "notation", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", 
                    "\[DoubleLongLeftRightArrow]", " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation>", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongRightArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation<", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongLeftArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "symb", 
                    RowBox[{"Symbolize", "[", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], "]"}], "infixnotation", 
                    RowBox[{"InfixNotation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], ",", "\[Placeholder]"}], "]"}], 
                    "addia", 
                    RowBox[{"AddInputAlias", "[", 
                    RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "pattwraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationPatternTag"], "madeboxeswraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationMadeBoxesTag"], "notation", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", 
                    "\[DoubleLongLeftRightArrow]", " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation>", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongRightArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation<", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongLeftArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "symb", 
                    RowBox[{"Symbolize", "[", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], "]"}], "infixnotation", 
                    RowBox[{"InfixNotation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], ",", "\[Placeholder]"}], "]"}], 
                    "addia", 
                    RowBox[{"AddInputAlias", "[", 
                    RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "pattwraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationPatternTag"], "madeboxeswraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationMadeBoxesTag"], "notation", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", 
                    "\[DoubleLongLeftRightArrow]", " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation>", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongRightArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation<", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongLeftArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "symb", 
                    RowBox[{"Symbolize", "[", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], "]"}], "infixnotation", 
                    RowBox[{"InfixNotation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], ",", "\[Placeholder]"}], "]"}], 
                    "addia", 
                    RowBox[{"AddInputAlias", "[", 
                    RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "pattwraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationPatternTag"], "madeboxeswraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationMadeBoxesTag"], "notation", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", 
                    "\[DoubleLongLeftRightArrow]", " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation>", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongRightArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation<", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongLeftArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "symb", 
                    RowBox[{"Symbolize", "[", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], "]"}], "infixnotation", 
                    RowBox[{"InfixNotation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], ",", "\[Placeholder]"}], "]"}], 
                    "addia", 
                    RowBox[{"AddInputAlias", "[", 
                    RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "pattwraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationPatternTag"], "madeboxeswraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationMadeBoxesTag"], "notation", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", 
                    "\[DoubleLongLeftRightArrow]", " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation>", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongRightArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation<", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongLeftArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "symb", 
                    RowBox[{"Symbolize", "[", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], "]"}], "infixnotation", 
                    RowBox[{"InfixNotation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], ",", "\[Placeholder]"}], "]"}], 
                    "addia", 
                    RowBox[{"AddInputAlias", "[", 
                    RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "pattwraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationPatternTag"], "madeboxeswraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationMadeBoxesTag"], "notation", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", 
                    "\[DoubleLongLeftRightArrow]", " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation>", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongRightArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation<", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongLeftArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "symb", 
                    RowBox[{"Symbolize", "[", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], "]"}], "infixnotation", 
                    RowBox[{"InfixNotation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], ",", "\[Placeholder]"}], "]"}], 
                    "addia", 
                    RowBox[{"AddInputAlias", "[", 
                    RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "pattwraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationPatternTag"], "madeboxeswraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationMadeBoxesTag"], "notation", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", 
                    "\[DoubleLongLeftRightArrow]", " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation>", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongRightArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation<", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongLeftArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "symb", 
                    RowBox[{"Symbolize", "[", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], "]"}], "infixnotation", 
                    RowBox[{"InfixNotation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], ",", "\[Placeholder]"}], "]"}], 
                    "addia", 
                    RowBox[{"AddInputAlias", "[", 
                    RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "pattwraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationPatternTag"], "madeboxeswraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationMadeBoxesTag"], "notation", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", 
                    "\[DoubleLongLeftRightArrow]", " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation>", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongRightArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation<", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongLeftArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "symb", 
                    RowBox[{"Symbolize", "[", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], "]"}], "infixnotation", 
                    RowBox[{"InfixNotation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], ",", "\[Placeholder]"}], "]"}], 
                    "addia", 
                    RowBox[{"AddInputAlias", "[", 
                    RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "pattwraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationPatternTag"], "madeboxeswraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationMadeBoxesTag"], "notation", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", 
                    "\[DoubleLongLeftRightArrow]", " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation>", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongRightArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation<", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongLeftArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "symb", 
                    RowBox[{"Symbolize", "[", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], "]"}], "infixnotation", 
                    RowBox[{"InfixNotation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], ",", "\[Placeholder]"}], "]"}], 
                    "addia", 
                    RowBox[{"AddInputAlias", "[", 
                    RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "pattwraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationPatternTag"], "madeboxeswraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationMadeBoxesTag"], "notation", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", 
                    "\[DoubleLongLeftRightArrow]", " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation>", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongRightArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation<", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongLeftArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "symb", 
                    RowBox[{"Symbolize", "[", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], "]"}], "infixnotation", 
                    RowBox[{"InfixNotation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], ",", "\[Placeholder]"}], "]"}], 
                    "addia", 
                    RowBox[{"AddInputAlias", "[", 
                    RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "pattwraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationPatternTag"], "madeboxeswraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationMadeBoxesTag"], "notation", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", 
                    "\[DoubleLongLeftRightArrow]", " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation>", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongRightArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation<", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongLeftArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "symb", 
                    RowBox[{"Symbolize", "[", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], "]"}], "infixnotation", 
                    RowBox[{"InfixNotation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], ",", "\[Placeholder]"}], "]"}], 
                    "addia", 
                    RowBox[{"AddInputAlias", "[", 
                    RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "pattwraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationPatternTag"], "madeboxeswraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationMadeBoxesTag"], "notation", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", 
                    "\[DoubleLongLeftRightArrow]", " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation>", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongRightArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation<", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongLeftArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "symb", 
                    RowBox[{"Symbolize", "[", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], "]"}], "infixnotation", 
                    RowBox[{"InfixNotation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], ",", "\[Placeholder]"}], "]"}], 
                    "addia", 
                    RowBox[{"AddInputAlias", "[", 
                    RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "pattwraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationPatternTag"], "madeboxeswraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationMadeBoxesTag"], "notation", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", 
                    "\[DoubleLongLeftRightArrow]", " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation>", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongRightArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation<", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongLeftArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "symb", 
                    RowBox[{"Symbolize", "[", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], "]"}], "infixnotation", 
                    RowBox[{"InfixNotation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], ",", "\[Placeholder]"}], "]"}], 
                    "addia", 
                    RowBox[{"AddInputAlias", "[", 
                    RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "pattwraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationPatternTag"], "madeboxeswraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationMadeBoxesTag"], "notation", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", 
                    "\[DoubleLongLeftRightArrow]", " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation>", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongRightArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation<", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongLeftArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "symb", 
                    RowBox[{"Symbolize", "[", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], "]"}], "infixnotation", 
                    RowBox[{"InfixNotation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], ",", "\[Placeholder]"}], "]"}], 
                    "addia", 
                    RowBox[{"AddInputAlias", "[", 
                    RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "pattwraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationPatternTag"], "madeboxeswraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationMadeBoxesTag"], "notation", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", 
                    "\[DoubleLongLeftRightArrow]", " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation>", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongRightArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation<", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongLeftArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "symb", 
                    RowBox[{"Symbolize", "[", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], "]"}], "infixnotation", 
                    RowBox[{"InfixNotation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], ",", "\[Placeholder]"}], "]"}], 
                    "addia", 
                    RowBox[{"AddInputAlias", "[", 
                    RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "pattwraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationPatternTag"], "madeboxeswraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationMadeBoxesTag"], "notation", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", 
                    "\[DoubleLongLeftRightArrow]", " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation>", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongRightArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation<", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongLeftArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "symb", 
                    RowBox[{"Symbolize", "[", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], "]"}], "infixnotation", 
                    RowBox[{"InfixNotation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], ",", "\[Placeholder]"}], "]"}], 
                    "addia", 
                    RowBox[{"AddInputAlias", "[", 
                    RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "pattwraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationPatternTag"], "madeboxeswraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationMadeBoxesTag"], "notation", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", 
                    "\[DoubleLongLeftRightArrow]", " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation>", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongRightArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation<", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongLeftArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "symb", 
                    RowBox[{"Symbolize", "[", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], "]"}], "infixnotation", 
                    RowBox[{"InfixNotation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], ",", "\[Placeholder]"}], "]"}], 
                    "addia", 
                    RowBox[{"AddInputAlias", "[", 
                    RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "pattwraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationPatternTag"], "madeboxeswraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationMadeBoxesTag"], "notation", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", 
                    "\[DoubleLongLeftRightArrow]", " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation>", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongRightArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation<", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongLeftArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "symb", 
                    RowBox[{"Symbolize", "[", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], "]"}], "infixnotation", 
                    RowBox[{"InfixNotation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], ",", "\[Placeholder]"}], "]"}], 
                    "addia", 
                    RowBox[{"AddInputAlias", "[", 
                    RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "pattwraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationPatternTag"], "madeboxeswraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationMadeBoxesTag"], "notation", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", 
                    "\[DoubleLongLeftRightArrow]", " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation>", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongRightArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation<", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongLeftArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "symb", 
                    RowBox[{"Symbolize", "[", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], "]"}], "infixnotation", 
                    RowBox[{"InfixNotation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], ",", "\[Placeholder]"}], "]"}], 
                    "addia", 
                    RowBox[{"AddInputAlias", "[", 
                    RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "pattwraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationPatternTag"], "madeboxeswraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationMadeBoxesTag"], "notation", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", 
                    "\[DoubleLongLeftRightArrow]", " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation>", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongRightArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation<", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongLeftArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "symb", 
                    RowBox[{"Symbolize", "[", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], "]"}], "infixnotation", 
                    RowBox[{"InfixNotation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], ",", "\[Placeholder]"}], "]"}], 
                    "addia", 
                    RowBox[{"AddInputAlias", "[", 
                    RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "pattwraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationPatternTag"], "madeboxeswraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationMadeBoxesTag"], "notation", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", 
                    "\[DoubleLongLeftRightArrow]", " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation>", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongRightArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation<", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongLeftArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "symb", 
                    RowBox[{"Symbolize", "[", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], "]"}], "infixnotation", 
                    RowBox[{"InfixNotation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], ",", "\[Placeholder]"}], "]"}], 
                    "addia", 
                    RowBox[{"AddInputAlias", "[", 
                    RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "pattwraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationPatternTag"], "madeboxeswraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationMadeBoxesTag"], "notation", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", 
                    "\[DoubleLongLeftRightArrow]", " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation>", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongRightArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation<", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongLeftArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "symb", 
                    RowBox[{"Symbolize", "[", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], "]"}], "infixnotation", 
                    RowBox[{"InfixNotation", "[", 
                    RowBox[{
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], ",", "\[Placeholder]"}], "]"}], 
                    "addia", 
                    RowBox[{"AddInputAlias", "[", 
                    RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "pattwraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationPatternTag"], "madeboxeswraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationMadeBoxesTag"], "notation", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", 
                    "\[DoubleLongLeftRightArrow]", " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation>", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongRightArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation<", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongLeftArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "symb", 
                    RowBox[{"Symbolize", "[", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], "]"}], "infixnotation", 
                    RowBox[{"InfixNotation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], ",", "\[Placeholder]"}], "]"}], 
                    "addia", 
                    RowBox[{"AddInputAlias", "[", 
                    RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "pattwraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationPatternTag"], "madeboxeswraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationMadeBoxesTag"], "notation", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", 
                    "\[DoubleLongLeftRightArrow]", " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation>", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongRightArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation<", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongLeftArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "symb", 
                    RowBox[{"Symbolize", "[", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], "]"}], "infixnotation", 
                    RowBox[{"InfixNotation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], ",", "\[Placeholder]"}], "]"}], 
                    "addia", 
                    RowBox[{"AddInputAlias", "[", 
                    RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "pattwraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationPatternTag"], "madeboxeswraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationMadeBoxesTag"], "notation", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", 
                    "\[DoubleLongLeftRightArrow]", " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation>", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongRightArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation<", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongLeftArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "symb", 
                    RowBox[{"Symbolize", "[", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], "]"}], "infixnotation", 
                    RowBox[{"InfixNotation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], ",", "\[Placeholder]"}], "]"}], 
                    "addia", 
                    RowBox[{"AddInputAlias", "[", 
                    RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "pattwraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationPatternTag"], "madeboxeswraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationMadeBoxesTag"], "notation", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", 
                    "\[DoubleLongLeftRightArrow]", " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation>", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongRightArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation<", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongLeftArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "symb", 
                    RowBox[{"Symbolize", "[", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], "]"}], "infixnotation", 
                    RowBox[{"InfixNotation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], ",", "\[Placeholder]"}], "]"}], 
                    "addia", 
                    RowBox[{"AddInputAlias", "[", 
                    RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "pattwraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationPatternTag"], "madeboxeswraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationMadeBoxesTag"], "notation", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", 
                    "\[DoubleLongLeftRightArrow]", " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation>", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongRightArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation<", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongLeftArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "symb", 
                    RowBox[{"Symbolize", "[", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], "]"}], "infixnotation", 
                    RowBox[{"InfixNotation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], ",", "\[Placeholder]"}], "]"}], 
                    "addia", 
                    RowBox[{"AddInputAlias", "[", 
                    RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "pattwraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationPatternTag"], "madeboxeswraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationMadeBoxesTag"], "notation", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", 
                    "\[DoubleLongLeftRightArrow]", " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation>", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongRightArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation<", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongLeftArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "symb", 
                    RowBox[{"Symbolize", "[", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], "]"}], "infixnotation", 
                    RowBox[{"InfixNotation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], ",", "\[Placeholder]"}], "]"}], 
                    "addia", 
                    RowBox[{"AddInputAlias", "[", 
                    RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "pattwraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationPatternTag"], "madeboxeswraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationMadeBoxesTag"], "notation", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", 
                    "\[DoubleLongLeftRightArrow]", " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation>", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongRightArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation<", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongLeftArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "symb", 
                    RowBox[{"Symbolize", "[", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], "]"}], "infixnotation", 
                    RowBox[{"InfixNotation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], ",", "\[Placeholder]"}], "]"}], 
                    "addia", 
                    RowBox[{"AddInputAlias", "[", 
                    RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "pattwraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationPatternTag"], "madeboxeswraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationMadeBoxesTag"], "notation", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", 
                    "\[DoubleLongLeftRightArrow]", " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation>", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongRightArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation<", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongLeftArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "symb", 
                    RowBox[{"Symbolize", "[", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], "]"}], "infixnotation", 
                    RowBox[{"InfixNotation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], ",", "\[Placeholder]"}], "]"}], 
                    "addia", 
                    RowBox[{"AddInputAlias", "[", 
                    RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "pattwraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationPatternTag"], "madeboxeswraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationMadeBoxesTag"], "notation", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", 
                    "\[DoubleLongLeftRightArrow]", " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation>", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongRightArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation<", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongLeftArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "symb", 
                    RowBox[{"Symbolize", "[", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], "]"}], "infixnotation", 
                    RowBox[{"InfixNotation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], ",", "\[Placeholder]"}], "]"}], 
                    "addia", 
                    RowBox[{"AddInputAlias", "[", 
                    RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "pattwraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationPatternTag"], "madeboxeswraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationMadeBoxesTag"], "notation", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", 
                    "\[DoubleLongLeftRightArrow]", " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation>", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongRightArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation<", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongLeftArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "symb", 
                    RowBox[{"Symbolize", "[", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], "]"}], "infixnotation", 
                    RowBox[{"InfixNotation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], ",", "\[Placeholder]"}], "]"}], 
                    "addia", 
                    RowBox[{"AddInputAlias", "[", 
                    RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "pattwraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationPatternTag"], "madeboxeswraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationMadeBoxesTag"], "notation", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", 
                    "\[DoubleLongLeftRightArrow]", " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation>", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongRightArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation<", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongLeftArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "symb", 
                    RowBox[{"Symbolize", "[", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], "]"}], "infixnotation", 
                    RowBox[{"InfixNotation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], ",", "\[Placeholder]"}], "]"}], 
                    "addia", 
                    RowBox[{"AddInputAlias", "[", 
                    RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "pattwraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationPatternTag"], "madeboxeswraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationMadeBoxesTag"], "notation", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", 
                    "\[DoubleLongLeftRightArrow]", " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation>", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongRightArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation<", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongLeftArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "symb", 
                    RowBox[{"Symbolize", "[", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], "]"}], "infixnotation", 
                    RowBox[{"InfixNotation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], ",", "\[Placeholder]"}], "]"}], 
                    "addia", 
                    RowBox[{"AddInputAlias", "[", 
                    RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "pattwraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationPatternTag"], "madeboxeswraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationMadeBoxesTag"], "notation", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", 
                    "\[DoubleLongLeftRightArrow]", " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation>", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongRightArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation<", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongLeftArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "symb", 
                    RowBox[{"Symbolize", "[", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], "]"}], "infixnotation", 
                    RowBox[{"InfixNotation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], ",", "\[Placeholder]"}], "]"}], 
                    "addia", 
                    RowBox[{"AddInputAlias", "[", 
                    RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "pattwraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationPatternTag"], "madeboxeswraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationMadeBoxesTag"], "notation", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", 
                    "\[DoubleLongLeftRightArrow]", " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation>", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongRightArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation<", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongLeftArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "symb", 
                    RowBox[{"Symbolize", "[", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], "]"}], "infixnotation", 
                    RowBox[{"InfixNotation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], ",", "\[Placeholder]"}], "]"}], 
                    "addia", 
                    RowBox[{"AddInputAlias", "[", 
                    RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "pattwraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationPatternTag"], "madeboxeswraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationMadeBoxesTag"], "notation", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", 
                    "\[DoubleLongLeftRightArrow]", " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation>", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongRightArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation<", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongLeftArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "symb", 
                    RowBox[{"Symbolize", "[", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], "]"}], "infixnotation", 
                    RowBox[{"InfixNotation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], ",", "\[Placeholder]"}], "]"}], 
                    "addia", 
                    RowBox[{"AddInputAlias", "[", 
                    RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "pattwraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationPatternTag"], "madeboxeswraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationMadeBoxesTag"], "notation", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", 
                    "\[DoubleLongLeftRightArrow]", " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation>", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongRightArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation<", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongLeftArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "symb", 
                    RowBox[{"Symbolize", "[", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], "]"}], "infixnotation", 
                    RowBox[{"InfixNotation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], ",", "\[Placeholder]"}], "]"}], 
                    "addia", 
                    RowBox[{"AddInputAlias", "[", 
                    RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "pattwraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationPatternTag"], "madeboxeswraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationMadeBoxesTag"], "notation", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", 
                    "\[DoubleLongLeftRightArrow]", " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation>", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongRightArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation<", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongLeftArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "symb", 
                    RowBox[{"Symbolize", "[", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], "]"}], "infixnotation", 
                    RowBox[{"InfixNotation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], ",", "\[Placeholder]"}], "]"}], 
                    "addia", 
                    RowBox[{"AddInputAlias", "[", 
                    RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "pattwraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationPatternTag"], "madeboxeswraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationMadeBoxesTag"], "notation", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", 
                    "\[DoubleLongLeftRightArrow]", " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation>", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongRightArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation<", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongLeftArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "symb", 
                    RowBox[{"Symbolize", "[", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], "]"}], "infixnotation", 
                    RowBox[{"InfixNotation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], ",", "\[Placeholder]"}], "]"}], 
                    "addia", 
                    RowBox[{"AddInputAlias", "[", 
                    RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "pattwraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationPatternTag"], "madeboxeswraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationMadeBoxesTag"], "notation", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", 
                    "\[DoubleLongLeftRightArrow]", " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation>", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongRightArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation<", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongLeftArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "symb", 
                    RowBox[{"Symbolize", "[", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], "]"}], "infixnotation", 
                    RowBox[{"InfixNotation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], ",", "\[Placeholder]"}], "]"}], 
                    "addia", 
                    RowBox[{"AddInputAlias", "[", 
                    RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "pattwraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationPatternTag"], "madeboxeswraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationMadeBoxesTag"], "notation", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", 
                    "\[DoubleLongLeftRightArrow]", " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation>", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongRightArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation<", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongLeftArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "symb", 
                    RowBox[{"Symbolize", "[", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], "]"}], "infixnotation", 
                    RowBox[{"InfixNotation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], ",", "\[Placeholder]"}], "]"}], 
                    "addia", 
                    RowBox[{"AddInputAlias", "[", 
                    RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "pattwraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationPatternTag"], "madeboxeswraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationMadeBoxesTag"], "notation", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", 
                    "\[DoubleLongLeftRightArrow]", " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation>", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongRightArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation<", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongLeftArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "symb", 
                    RowBox[{"Symbolize", "[", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], "]"}], "infixnotation", 
                    RowBox[{"InfixNotation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], ",", "\[Placeholder]"}], "]"}], 
                    "addia", 
                    RowBox[{"AddInputAlias", "[", 
                    RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "pattwraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationPatternTag"], "madeboxeswraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationMadeBoxesTag"], "notation", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", 
                    "\[DoubleLongLeftRightArrow]", " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation>", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongRightArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation<", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongLeftArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "symb", 
                    RowBox[{"Symbolize", "[", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], "]"}], "infixnotation", 
                    RowBox[{"InfixNotation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], ",", "\[Placeholder]"}], "]"}], 
                    "addia", 
                    RowBox[{"AddInputAlias", "[", 
                    RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "pattwraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationPatternTag"], "madeboxeswraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationMadeBoxesTag"], "notation", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", 
                    "\[DoubleLongLeftRightArrow]", " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation>", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongRightArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation<", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongLeftArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "symb", 
                    RowBox[{"Symbolize", "[", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], "]"}], "infixnotation", 
                    RowBox[{"InfixNotation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], ",", "\[Placeholder]"}], "]"}], 
                    "addia", 
                    RowBox[{"AddInputAlias", "[", 
                    RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "pattwraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationPatternTag"], "madeboxeswraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationMadeBoxesTag"], "notation", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", 
                    "\[DoubleLongLeftRightArrow]", " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation>", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongRightArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation<", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongLeftArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "symb", 
                    RowBox[{"Symbolize", "[", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], "]"}], "infixnotation", 
                    RowBox[{"InfixNotation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], ",", "\[Placeholder]"}], "]"}], 
                    "addia", 
                    RowBox[{"AddInputAlias", "[", 
                    RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "pattwraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationPatternTag"], "madeboxeswraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationMadeBoxesTag"], "notation", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", 
                    "\[DoubleLongLeftRightArrow]", " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation>", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongRightArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation<", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongLeftArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "symb", 
                    RowBox[{"Symbolize", "[", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], "]"}], "infixnotation", 
                    RowBox[{"InfixNotation", "[", 
                    RowBox[{
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], ",", "\[Placeholder]"}], "]"}], 
                    "addia", 
                    RowBox[{"AddInputAlias", "[", 
                    RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "pattwraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationPatternTag"], "madeboxeswraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationMadeBoxesTag"], "notation", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", 
                    "\[DoubleLongLeftRightArrow]", " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation>", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongRightArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation<", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongLeftArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "symb", 
                    RowBox[{"Symbolize", "[", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], "]"}], "infixnotation", 
                    RowBox[{"InfixNotation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], ",", "\[Placeholder]"}], "]"}], 
                    "addia", 
                    RowBox[{"AddInputAlias", "[", 
                    RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "pattwraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationPatternTag"], "madeboxeswraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationMadeBoxesTag"], "notation", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", 
                    "\[DoubleLongLeftRightArrow]", " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation>", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongRightArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation<", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongLeftArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "symb", 
                    RowBox[{"Symbolize", "[", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], "]"}], "infixnotation", 
                    RowBox[{"InfixNotation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], ",", "\[Placeholder]"}], "]"}], 
                    "addia", 
                    RowBox[{"AddInputAlias", "[", 
                    RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "pattwraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationPatternTag"], "madeboxeswraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationMadeBoxesTag"], "notation", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", 
                    "\[DoubleLongLeftRightArrow]", " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation>", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongRightArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation<", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongLeftArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "symb", 
                    RowBox[{"Symbolize", "[", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], "]"}], "infixnotation", 
                    RowBox[{"InfixNotation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], ",", "\[Placeholder]"}], "]"}], 
                    "addia", 
                    RowBox[{"AddInputAlias", "[", 
                    RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "pattwraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationPatternTag"], "madeboxeswraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationMadeBoxesTag"], "notation", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", 
                    "\[DoubleLongLeftRightArrow]", " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation>", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongRightArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation<", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongLeftArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "symb", 
                    RowBox[{"Symbolize", "[", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], "]"}], "infixnotation", 
                    RowBox[{"InfixNotation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], ",", "\[Placeholder]"}], "]"}], 
                    "addia", 
                    RowBox[{"AddInputAlias", "[", 
                    RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "pattwraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationPatternTag"], "madeboxeswraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationMadeBoxesTag"], "notation", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", 
                    "\[DoubleLongLeftRightArrow]", " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation>", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongRightArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation<", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongLeftArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "symb", 
                    RowBox[{"Symbolize", "[", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], "]"}], "infixnotation", 
                    RowBox[{"InfixNotation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], ",", "\[Placeholder]"}], "]"}], 
                    "addia", 
                    RowBox[{"AddInputAlias", "[", 
                    RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "pattwraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationPatternTag"], "madeboxeswraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationMadeBoxesTag"], "notation", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", 
                    "\[DoubleLongLeftRightArrow]", " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation>", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongRightArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation<", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongLeftArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "symb", 
                    RowBox[{"Symbolize", "[", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], "]"}], "infixnotation", 
                    RowBox[{"InfixNotation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], ",", "\[Placeholder]"}], "]"}], 
                    "addia", 
                    RowBox[{"AddInputAlias", "[", 
                    RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "pattwraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationPatternTag"], "madeboxeswraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationMadeBoxesTag"], "notation", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", 
                    "\[DoubleLongLeftRightArrow]", " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation>", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongRightArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation<", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongLeftArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "symb", 
                    RowBox[{"Symbolize", "[", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], "]"}], "infixnotation", 
                    RowBox[{"InfixNotation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], ",", "\[Placeholder]"}], "]"}], 
                    "addia", 
                    RowBox[{"AddInputAlias", "[", 
                    RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "pattwraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationPatternTag"], "madeboxeswraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationMadeBoxesTag"], "notation", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", 
                    "\[DoubleLongLeftRightArrow]", " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation>", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongRightArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation<", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongLeftArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "symb", 
                    RowBox[{"Symbolize", "[", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], "]"}], "infixnotation", 
                    RowBox[{"InfixNotation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], ",", "\[Placeholder]"}], "]"}], 
                    "addia", 
                    RowBox[{"AddInputAlias", "[", 
                    RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "pattwraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationPatternTag"], "madeboxeswraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationMadeBoxesTag"], "notation", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", 
                    "\[DoubleLongLeftRightArrow]", " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation>", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongRightArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation<", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongLeftArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "symb", 
                    RowBox[{"Symbolize", "[", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], "]"}], "infixnotation", 
                    RowBox[{"InfixNotation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], ",", "\[Placeholder]"}], "]"}], 
                    "addia", 
                    RowBox[{"AddInputAlias", "[", 
                    RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "pattwraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationPatternTag"], "madeboxeswraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationMadeBoxesTag"], "notation", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", 
                    "\[DoubleLongLeftRightArrow]", " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation>", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongRightArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation<", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongLeftArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "symb", 
                    RowBox[{"Symbolize", "[", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], "]"}], "infixnotation", 
                    RowBox[{"InfixNotation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], ",", "\[Placeholder]"}], "]"}], 
                    "addia", 
                    RowBox[{"AddInputAlias", "[", 
                    RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "pattwraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationPatternTag"], "madeboxeswraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationMadeBoxesTag"], "notation", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", 
                    "\[DoubleLongLeftRightArrow]", " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation>", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongRightArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation<", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongLeftArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "symb", 
                    RowBox[{"Symbolize", "[", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], "]"}], "infixnotation", 
                    RowBox[{"InfixNotation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], ",", "\[Placeholder]"}], "]"}], 
                    "addia", 
                    RowBox[{"AddInputAlias", "[", 
                    RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "pattwraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationPatternTag"], "madeboxeswraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationMadeBoxesTag"], "notation", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", 
                    "\[DoubleLongLeftRightArrow]", " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation>", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongRightArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation<", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongLeftArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "symb", 
                    RowBox[{"Symbolize", "[", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], "]"}], "infixnotation", 
                    RowBox[{"InfixNotation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], ",", "\[Placeholder]"}], "]"}], 
                    "addia", 
                    RowBox[{"AddInputAlias", "[", 
                    RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "pattwraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationPatternTag"], "madeboxeswraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationMadeBoxesTag"], "notation", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", 
                    "\[DoubleLongLeftRightArrow]", " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation>", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongRightArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation<", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongLeftArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "symb", 
                    RowBox[{"Symbolize", "[", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], "]"}], "infixnotation", 
                    RowBox[{"InfixNotation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], ",", "\[Placeholder]"}], "]"}], 
                    "addia", 
                    RowBox[{"AddInputAlias", "[", 
                    RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "pattwraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationPatternTag"], "madeboxeswraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationMadeBoxesTag"], "notation", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", 
                    "\[DoubleLongLeftRightArrow]", " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation>", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongRightArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation<", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongLeftArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "symb", 
                    RowBox[{"Symbolize", "[", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], "]"}], "infixnotation", 
                    RowBox[{"InfixNotation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], ",", "\[Placeholder]"}], "]"}], 
                    "addia", 
                    RowBox[{"AddInputAlias", "[", 
                    RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "pattwraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationPatternTag"], "madeboxeswraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationMadeBoxesTag"], "notation", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", 
                    "\[DoubleLongLeftRightArrow]", " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation>", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongRightArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation<", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongLeftArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "symb", 
                    RowBox[{"Symbolize", "[", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], "]"}], "infixnotation", 
                    RowBox[{"InfixNotation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], ",", "\[Placeholder]"}], "]"}], 
                    "addia", 
                    RowBox[{"AddInputAlias", "[", 
                    RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "pattwraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationPatternTag"], "madeboxeswraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationMadeBoxesTag"], "notation", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", 
                    "\[DoubleLongLeftRightArrow]", " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation>", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongRightArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation<", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongLeftArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "symb", 
                    RowBox[{"Symbolize", "[", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], "]"}], "infixnotation", 
                    RowBox[{"InfixNotation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], ",", "\[Placeholder]"}], "]"}], 
                    "addia", 
                    RowBox[{"AddInputAlias", "[", 
                    RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "pattwraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationPatternTag"], "madeboxeswraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationMadeBoxesTag"], "notation", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", 
                    "\[DoubleLongLeftRightArrow]", " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation>", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongRightArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation<", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongLeftArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "symb", 
                    RowBox[{"Symbolize", "[", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], "]"}], "infixnotation", 
                    RowBox[{"InfixNotation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], ",", "\[Placeholder]"}], "]"}], 
                    "addia", 
                    RowBox[{"AddInputAlias", "[", 
                    RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "pattwraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationPatternTag"], "madeboxeswraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationMadeBoxesTag"], "notation", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", 
                    "\[DoubleLongLeftRightArrow]", " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation>", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongRightArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation<", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongLeftArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "symb", 
                    RowBox[{"Symbolize", "[", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], "]"}], "infixnotation", 
                    RowBox[{"InfixNotation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], ",", "\[Placeholder]"}], "]"}], 
                    "addia", 
                    RowBox[{"AddInputAlias", "[", 
                    RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "pattwraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationPatternTag"], "madeboxeswraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationMadeBoxesTag"], "notation", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", 
                    "\[DoubleLongLeftRightArrow]", " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation>", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongRightArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation<", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongLeftArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "symb", 
                    RowBox[{"Symbolize", "[", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], "]"}], "infixnotation", 
                    RowBox[{"InfixNotation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], ",", "\[Placeholder]"}], "]"}], 
                    "addia", 
                    RowBox[{"AddInputAlias", "[", 
                    RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "pattwraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationPatternTag"], "madeboxeswraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationMadeBoxesTag"], "notation", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", 
                    "\[DoubleLongLeftRightArrow]", " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation>", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongRightArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation<", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongLeftArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "symb", 
                    RowBox[{"Symbolize", "[", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], "]"}], "infixnotation", 
                    RowBox[{"InfixNotation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], ",", "\[Placeholder]"}], "]"}], 
                    "addia", 
                    RowBox[{"AddInputAlias", "[", 
                    RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "pattwraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationPatternTag"], "madeboxeswraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationMadeBoxesTag"], "notation", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", 
                    "\[DoubleLongLeftRightArrow]", " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation>", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongRightArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation<", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongLeftArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "symb", 
                    RowBox[{"Symbolize", "[", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], "]"}], "infixnotation", 
                    RowBox[{"InfixNotation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], ",", "\[Placeholder]"}], "]"}], 
                    "addia", 
                    RowBox[{"AddInputAlias", "[", 
                    RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "pattwraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationPatternTag"], "madeboxeswraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationMadeBoxesTag"], "notation", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", 
                    "\[DoubleLongLeftRightArrow]", " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation>", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongRightArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation<", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongLeftArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "symb", 
                    RowBox[{"Symbolize", "[", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], "]"}], "infixnotation", 
                    RowBox[{"InfixNotation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], ",", "\[Placeholder]"}], "]"}], 
                    "addia", 
                    RowBox[{"AddInputAlias", "[", 
                    RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "pattwraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationPatternTag"], "madeboxeswraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationMadeBoxesTag"], "notation", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", 
                    "\[DoubleLongLeftRightArrow]", " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation>", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongRightArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation<", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongLeftArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "symb", 
                    RowBox[{"Symbolize", "[", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], "]"}], "infixnotation", 
                    RowBox[{"InfixNotation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], ",", "\[Placeholder]"}], "]"}], 
                    "addia", 
                    RowBox[{"AddInputAlias", "[", 
                    RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "pattwraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationPatternTag"], "madeboxeswraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationMadeBoxesTag"], "notation", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", 
                    "\[DoubleLongLeftRightArrow]", " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation>", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongRightArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation<", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongLeftArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "symb", 
                    RowBox[{"Symbolize", "[", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], "]"}], "infixnotation", 
                    RowBox[{"InfixNotation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], ",", "\[Placeholder]"}], "]"}], 
                    "addia", 
                    RowBox[{"AddInputAlias", "[", 
                    RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "pattwraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationPatternTag"], "madeboxeswraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationMadeBoxesTag"], "notation", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", 
                    "\[DoubleLongLeftRightArrow]", " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation>", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongRightArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation<", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongLeftArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "symb", 
                    RowBox[{"Symbolize", "[", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], "]"}], "infixnotation", 
                    RowBox[{"InfixNotation", "[", 
                    RowBox[{
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], ",", "\[Placeholder]"}], "]"}], 
                    "addia", 
                    RowBox[{"AddInputAlias", "[", 
                    RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "pattwraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationPatternTag"], "madeboxeswraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationMadeBoxesTag"], "notation", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", 
                    "\[DoubleLongLeftRightArrow]", " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation>", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongRightArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation<", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongLeftArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "symb", 
                    RowBox[{"Symbolize", "[", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], "]"}], "infixnotation", 
                    RowBox[{"InfixNotation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], ",", "\[Placeholder]"}], "]"}], 
                    "addia", 
                    RowBox[{"AddInputAlias", "[", 
                    RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "pattwraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationPatternTag"], "madeboxeswraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationMadeBoxesTag"], "notation", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", 
                    "\[DoubleLongLeftRightArrow]", " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation>", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongRightArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation<", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongLeftArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "symb", 
                    RowBox[{"Symbolize", "[", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], "]"}], "infixnotation", 
                    RowBox[{"InfixNotation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], ",", "\[Placeholder]"}], "]"}], 
                    "addia", 
                    RowBox[{"AddInputAlias", "[", 
                    RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "pattwraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationPatternTag"], "madeboxeswraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationMadeBoxesTag"], "notation", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", 
                    "\[DoubleLongLeftRightArrow]", " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation>", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongRightArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation<", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongLeftArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "symb", 
                    RowBox[{"Symbolize", "[", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], "]"}], "infixnotation", 
                    RowBox[{"InfixNotation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], ",", "\[Placeholder]"}], "]"}], 
                    "addia", 
                    RowBox[{"AddInputAlias", "[", 
                    RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "pattwraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationPatternTag"], "madeboxeswraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationMadeBoxesTag"], "notation", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", 
                    "\[DoubleLongLeftRightArrow]", " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation>", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongRightArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation<", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongLeftArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "symb", 
                    RowBox[{"Symbolize", "[", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], "]"}], "infixnotation", 
                    RowBox[{"InfixNotation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], ",", "\[Placeholder]"}], "]"}], 
                    "addia", 
                    RowBox[{"AddInputAlias", "[", 
                    RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "pattwraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationPatternTag"], "madeboxeswraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationMadeBoxesTag"], "notation", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", 
                    "\[DoubleLongLeftRightArrow]", " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation>", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongRightArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation<", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongLeftArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "symb", 
                    RowBox[{"Symbolize", "[", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], "]"}], "infixnotation", 
                    RowBox[{"InfixNotation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], ",", "\[Placeholder]"}], "]"}], 
                    "addia", 
                    RowBox[{"AddInputAlias", "[", 
                    RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "pattwraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationPatternTag"], "madeboxeswraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationMadeBoxesTag"], "notation", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", 
                    "\[DoubleLongLeftRightArrow]", " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation>", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongRightArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation<", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongLeftArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "symb", 
                    RowBox[{"Symbolize", "[", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], "]"}], "infixnotation", 
                    RowBox[{"InfixNotation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], ",", "\[Placeholder]"}], "]"}], 
                    "addia", 
                    RowBox[{"AddInputAlias", "[", 
                    RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "pattwraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationPatternTag"], "madeboxeswraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationMadeBoxesTag"], "notation", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", 
                    "\[DoubleLongLeftRightArrow]", " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation>", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongRightArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation<", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongLeftArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "symb", 
                    RowBox[{"Symbolize", "[", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], "]"}], "infixnotation", 
                    RowBox[{"InfixNotation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], ",", "\[Placeholder]"}], "]"}], 
                    "addia", 
                    RowBox[{"AddInputAlias", "[", 
                    RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "pattwraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationPatternTag"], "madeboxeswraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationMadeBoxesTag"], "notation", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", 
                    "\[DoubleLongLeftRightArrow]", " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation>", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongRightArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation<", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongLeftArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "symb", 
                    RowBox[{"Symbolize", "[", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], "]"}], "infixnotation", 
                    RowBox[{"InfixNotation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], ",", "\[Placeholder]"}], "]"}], 
                    "addia", 
                    RowBox[{"AddInputAlias", "[", 
                    RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "pattwraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationPatternTag"], "madeboxeswraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationMadeBoxesTag"], "notation", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", 
                    "\[DoubleLongLeftRightArrow]", " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation>", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongRightArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation<", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongLeftArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "symb", 
                    RowBox[{"Symbolize", "[", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], "]"}], "infixnotation", 
                    RowBox[{"InfixNotation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], ",", "\[Placeholder]"}], "]"}], 
                    "addia", 
                    RowBox[{"AddInputAlias", "[", 
                    RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "pattwraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationPatternTag"], "madeboxeswraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationMadeBoxesTag"], "notation", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", 
                    "\[DoubleLongLeftRightArrow]", " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation>", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongRightArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation<", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongLeftArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "symb", 
                    RowBox[{"Symbolize", "[", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], "]"}], "infixnotation", 
                    RowBox[{"InfixNotation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], ",", "\[Placeholder]"}], "]"}], 
                    "addia", 
                    RowBox[{"AddInputAlias", "[", 
                    RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "pattwraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationPatternTag"], "madeboxeswraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationMadeBoxesTag"], "notation", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", 
                    "\[DoubleLongLeftRightArrow]", " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation>", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongRightArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation<", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongLeftArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "symb", 
                    RowBox[{"Symbolize", "[", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], "]"}], "infixnotation", 
                    RowBox[{"InfixNotation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], ",", "\[Placeholder]"}], "]"}], 
                    "addia", 
                    RowBox[{"AddInputAlias", "[", 
                    RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "pattwraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationPatternTag"], "madeboxeswraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationMadeBoxesTag"], "notation", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", 
                    "\[DoubleLongLeftRightArrow]", " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation>", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongRightArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation<", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongLeftArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "symb", 
                    RowBox[{"Symbolize", "[", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], "]"}], "infixnotation", 
                    RowBox[{"InfixNotation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], ",", "\[Placeholder]"}], "]"}], 
                    "addia", 
                    RowBox[{"AddInputAlias", "[", 
                    RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "pattwraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationPatternTag"], "madeboxeswraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationMadeBoxesTag"], "notation", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", 
                    "\[DoubleLongLeftRightArrow]", " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation>", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongRightArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation<", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongLeftArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "symb", 
                    RowBox[{"Symbolize", "[", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], "]"}], "infixnotation", 
                    RowBox[{"InfixNotation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], ",", "\[Placeholder]"}], "]"}], 
                    "addia", 
                    RowBox[{"AddInputAlias", "[", 
                    RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "pattwraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationPatternTag"], "madeboxeswraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationMadeBoxesTag"], "notation", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", 
                    "\[DoubleLongLeftRightArrow]", " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation>", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongRightArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation<", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongLeftArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "symb", 
                    RowBox[{"Symbolize", "[", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], "]"}], "infixnotation", 
                    RowBox[{"InfixNotation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], ",", "\[Placeholder]"}], "]"}], 
                    "addia", 
                    RowBox[{"AddInputAlias", "[", 
                    RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "pattwraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationPatternTag"], "madeboxeswraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationMadeBoxesTag"], "notation", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", 
                    "\[DoubleLongLeftRightArrow]", " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation>", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongRightArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation<", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongLeftArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "symb", 
                    RowBox[{"Symbolize", "[", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], "]"}], "infixnotation", 
                    RowBox[{"InfixNotation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], ",", "\[Placeholder]"}], "]"}], 
                    "addia", 
                    RowBox[{"AddInputAlias", "[", 
                    RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "pattwraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationPatternTag"], "madeboxeswraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationMadeBoxesTag"], "notation", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", 
                    "\[DoubleLongLeftRightArrow]", " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation>", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongRightArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation<", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongLeftArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "symb", 
                    RowBox[{"Symbolize", "[", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], "]"}], "infixnotation", 
                    RowBox[{"InfixNotation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], ",", "\[Placeholder]"}], "]"}], 
                    "addia", 
                    RowBox[{"AddInputAlias", "[", 
                    RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "pattwraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationPatternTag"], "madeboxeswraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationMadeBoxesTag"], "notation", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", 
                    "\[DoubleLongLeftRightArrow]", " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation>", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongRightArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation<", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongLeftArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "symb", 
                    RowBox[{"Symbolize", "[", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], "]"}], "infixnotation", 
                    RowBox[{"InfixNotation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], ",", "\[Placeholder]"}], "]"}], 
                    "addia", 
                    RowBox[{"AddInputAlias", "[", 
                    RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "pattwraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationPatternTag"], "madeboxeswraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationMadeBoxesTag"], "notation", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", 
                    "\[DoubleLongLeftRightArrow]", " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation>", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongRightArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation<", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongLeftArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "symb", 
                    RowBox[{"Symbolize", "[", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], "]"}], "infixnotation", 
                    RowBox[{"InfixNotation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], ",", "\[Placeholder]"}], "]"}], 
                    "addia", 
                    RowBox[{"AddInputAlias", "[", 
                    RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "pattwraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationPatternTag"], "madeboxeswraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationMadeBoxesTag"], "notation", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", 
                    "\[DoubleLongLeftRightArrow]", " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation>", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongRightArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation<", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongLeftArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "symb", 
                    RowBox[{"Symbolize", "[", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], "]"}], "infixnotation", 
                    RowBox[{"InfixNotation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], ",", "\[Placeholder]"}], "]"}], 
                    "addia", 
                    RowBox[{"AddInputAlias", "[", 
                    RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "pattwraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationPatternTag"], "madeboxeswraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationMadeBoxesTag"], "notation", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", 
                    "\[DoubleLongLeftRightArrow]", " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation>", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongRightArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation<", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongLeftArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "symb", 
                    RowBox[{"Symbolize", "[", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], "]"}], "infixnotation", 
                    RowBox[{"InfixNotation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], ",", "\[Placeholder]"}], "]"}], 
                    "addia", 
                    RowBox[{"AddInputAlias", "[", 
                    RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "pattwraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationPatternTag"], "madeboxeswraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationMadeBoxesTag"], "notation", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", 
                    "\[DoubleLongLeftRightArrow]", " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation>", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongRightArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation<", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongLeftArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "symb", 
                    RowBox[{"Symbolize", "[", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], "]"}], "infixnotation", 
                    RowBox[{"InfixNotation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], ",", "\[Placeholder]"}], "]"}], 
                    "addia", 
                    RowBox[{"AddInputAlias", "[", 
                    RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "pattwraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationPatternTag"], "madeboxeswraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationMadeBoxesTag"], "notation", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", 
                    "\[DoubleLongLeftRightArrow]", " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation>", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongRightArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation<", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongLeftArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "symb", 
                    RowBox[{"Symbolize", "[", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], "]"}], "infixnotation", 
                    RowBox[{"InfixNotation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], ",", "\[Placeholder]"}], "]"}], 
                    "addia", 
                    RowBox[{"AddInputAlias", "[", 
                    RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "pattwraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationPatternTag"], "madeboxeswraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationMadeBoxesTag"], "notation", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", 
                    "\[DoubleLongLeftRightArrow]", " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation>", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongRightArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation<", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongLeftArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "symb", 
                    RowBox[{"Symbolize", "[", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], "]"}], "infixnotation", 
                    RowBox[{"InfixNotation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], ",", "\[Placeholder]"}], "]"}], 
                    "addia", 
                    RowBox[{"AddInputAlias", "[", 
                    RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "pattwraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationPatternTag"], "madeboxeswraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationMadeBoxesTag"], "notation", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", 
                    "\[DoubleLongLeftRightArrow]", " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation>", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongRightArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation<", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongLeftArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "symb", 
                    RowBox[{"Symbolize", "[", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], "]"}], "infixnotation", 
                    RowBox[{"InfixNotation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], ",", "\[Placeholder]"}], "]"}], 
                    "addia", 
                    RowBox[{"AddInputAlias", "[", 
                    RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "pattwraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationPatternTag"], "madeboxeswraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationMadeBoxesTag"], "notation", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", 
                    "\[DoubleLongLeftRightArrow]", " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation>", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongRightArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation<", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongLeftArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "symb", 
                    RowBox[{"Symbolize", "[", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], "]"}], "infixnotation", 
                    RowBox[{"InfixNotation", "[", 
                    RowBox[{
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], ",", "\[Placeholder]"}], "]"}], 
                    "addia", 
                    RowBox[{"AddInputAlias", "[", 
                    RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "pattwraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationPatternTag"], "madeboxeswraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationMadeBoxesTag"], "notation", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", 
                    "\[DoubleLongLeftRightArrow]", " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation>", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongRightArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation<", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongLeftArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "symb", 
                    RowBox[{"Symbolize", "[", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], "]"}], "infixnotation", 
                    RowBox[{"InfixNotation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], ",", "\[Placeholder]"}], "]"}], 
                    "addia", 
                    RowBox[{"AddInputAlias", "[", 
                    RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "pattwraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationPatternTag"], "madeboxeswraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationMadeBoxesTag"], "notation", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", 
                    "\[DoubleLongLeftRightArrow]", " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation>", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongRightArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation<", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongLeftArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "symb", 
                    RowBox[{"Symbolize", "[", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], "]"}], "infixnotation", 
                    RowBox[{"InfixNotation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], ",", "\[Placeholder]"}], "]"}], 
                    "addia", 
                    RowBox[{"AddInputAlias", "[", 
                    RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "pattwraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationPatternTag"], "madeboxeswraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationMadeBoxesTag"], "notation", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", 
                    "\[DoubleLongLeftRightArrow]", " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation>", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongRightArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation<", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongLeftArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "symb", 
                    RowBox[{"Symbolize", "[", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], "]"}], "infixnotation", 
                    RowBox[{"InfixNotation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], ",", "\[Placeholder]"}], "]"}], 
                    "addia", 
                    RowBox[{"AddInputAlias", "[", 
                    RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "pattwraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationPatternTag"], "madeboxeswraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationMadeBoxesTag"], "notation", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", 
                    "\[DoubleLongLeftRightArrow]", " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation>", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongRightArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation<", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongLeftArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "symb", 
                    RowBox[{"Symbolize", "[", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], "]"}], "infixnotation", 
                    RowBox[{"InfixNotation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], ",", "\[Placeholder]"}], "]"}], 
                    "addia", 
                    RowBox[{"AddInputAlias", "[", 
                    RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "pattwraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationPatternTag"], "madeboxeswraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationMadeBoxesTag"], "notation", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", 
                    "\[DoubleLongLeftRightArrow]", " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation>", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongRightArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation<", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongLeftArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "symb", 
                    RowBox[{"Symbolize", "[", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], "]"}], "infixnotation", 
                    RowBox[{"InfixNotation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], ",", "\[Placeholder]"}], "]"}], 
                    "addia", 
                    RowBox[{"AddInputAlias", "[", 
                    RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "pattwraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationPatternTag"], "madeboxeswraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationMadeBoxesTag"], "notation", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", 
                    "\[DoubleLongLeftRightArrow]", " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation>", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongRightArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation<", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongLeftArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "symb", 
                    RowBox[{"Symbolize", "[", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], "]"}], "infixnotation", 
                    RowBox[{"InfixNotation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], ",", "\[Placeholder]"}], "]"}], 
                    "addia", 
                    RowBox[{"AddInputAlias", "[", 
                    RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "pattwraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationPatternTag"], "madeboxeswraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationMadeBoxesTag"], "notation", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", 
                    "\[DoubleLongLeftRightArrow]", " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation>", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongRightArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation<", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongLeftArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "symb", 
                    RowBox[{"Symbolize", "[", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], "]"}], "infixnotation", 
                    RowBox[{"InfixNotation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], ",", "\[Placeholder]"}], "]"}], 
                    "addia", 
                    RowBox[{"AddInputAlias", "[", 
                    RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "pattwraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationPatternTag"], "madeboxeswraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationMadeBoxesTag"], "notation", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", 
                    "\[DoubleLongLeftRightArrow]", " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation>", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongRightArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation<", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongLeftArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "symb", 
                    RowBox[{"Symbolize", "[", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], "]"}], "infixnotation", 
                    RowBox[{"InfixNotation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], ",", "\[Placeholder]"}], "]"}], 
                    "addia", 
                    RowBox[{"AddInputAlias", "[", 
                    RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "pattwraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationPatternTag"], "madeboxeswraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationMadeBoxesTag"], "notation", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", 
                    "\[DoubleLongLeftRightArrow]", " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation>", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongRightArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation<", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongLeftArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "symb", 
                    RowBox[{"Symbolize", "[", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], "]"}], "infixnotation", 
                    RowBox[{"InfixNotation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], ",", "\[Placeholder]"}], "]"}], 
                    "addia", 
                    RowBox[{"AddInputAlias", "[", 
                    RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "pattwraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationPatternTag"], "madeboxeswraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationMadeBoxesTag"], "notation", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", 
                    "\[DoubleLongLeftRightArrow]", " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation>", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongRightArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation<", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongLeftArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "symb", 
                    RowBox[{"Symbolize", "[", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], "]"}], "infixnotation", 
                    RowBox[{"InfixNotation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], ",", "\[Placeholder]"}], "]"}], 
                    "addia", 
                    RowBox[{"AddInputAlias", "[", 
                    RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "pattwraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationPatternTag"], "madeboxeswraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationMadeBoxesTag"], "notation", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", 
                    "\[DoubleLongLeftRightArrow]", " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation>", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongRightArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation<", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongLeftArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "symb", 
                    RowBox[{"Symbolize", "[", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], "]"}], "infixnotation", 
                    RowBox[{"InfixNotation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], ",", "\[Placeholder]"}], "]"}], 
                    "addia", 
                    RowBox[{"AddInputAlias", "[", 
                    RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "pattwraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationPatternTag"], "madeboxeswraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationMadeBoxesTag"], "notation", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", 
                    "\[DoubleLongLeftRightArrow]", " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation>", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongRightArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation<", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongLeftArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "symb", 
                    RowBox[{"Symbolize", "[", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], "]"}], "infixnotation", 
                    RowBox[{"InfixNotation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], ",", "\[Placeholder]"}], "]"}], 
                    "addia", 
                    RowBox[{"AddInputAlias", "[", 
                    RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "pattwraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationPatternTag"], "madeboxeswraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationMadeBoxesTag"], "notation", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", 
                    "\[DoubleLongLeftRightArrow]", " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation>", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongRightArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation<", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongLeftArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "symb", 
                    RowBox[{"Symbolize", "[", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], "]"}], "infixnotation", 
                    RowBox[{"InfixNotation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], ",", "\[Placeholder]"}], "]"}], 
                    "addia", 
                    RowBox[{"AddInputAlias", "[", 
                    RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "pattwraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationPatternTag"], "madeboxeswraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationMadeBoxesTag"], "notation", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", 
                    "\[DoubleLongLeftRightArrow]", " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation>", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongRightArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation<", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongLeftArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "symb", 
                    RowBox[{"Symbolize", "[", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], "]"}], "infixnotation", 
                    RowBox[{"InfixNotation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], ",", "\[Placeholder]"}], "]"}], 
                    "addia", 
                    RowBox[{"AddInputAlias", "[", 
                    RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "pattwraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationPatternTag"], "madeboxeswraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationMadeBoxesTag"], "notation", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", 
                    "\[DoubleLongLeftRightArrow]", " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation>", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongRightArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation<", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongLeftArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "symb", 
                    RowBox[{"Symbolize", "[", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], "]"}], "infixnotation", 
                    RowBox[{"InfixNotation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], ",", "\[Placeholder]"}], "]"}], 
                    "addia", 
                    RowBox[{"AddInputAlias", "[", 
                    RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "pattwraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationPatternTag"], "madeboxeswraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationMadeBoxesTag"], "notation", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", 
                    "\[DoubleLongLeftRightArrow]", " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation>", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongRightArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation<", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongLeftArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "symb", 
                    RowBox[{"Symbolize", "[", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], "]"}], "infixnotation", 
                    RowBox[{"InfixNotation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], ",", "\[Placeholder]"}], "]"}], 
                    "addia", 
                    RowBox[{"AddInputAlias", "[", 
                    RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "pattwraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationPatternTag"], "madeboxeswraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationMadeBoxesTag"], "notation", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", 
                    "\[DoubleLongLeftRightArrow]", " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation>", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongRightArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation<", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongLeftArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "symb", 
                    RowBox[{"Symbolize", "[", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], "]"}], "infixnotation", 
                    RowBox[{"InfixNotation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], ",", "\[Placeholder]"}], "]"}], 
                    "addia", 
                    RowBox[{"AddInputAlias", "[", 
                    RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "pattwraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationPatternTag"], "madeboxeswraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationMadeBoxesTag"], "notation", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", 
                    "\[DoubleLongLeftRightArrow]", " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation>", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongRightArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation<", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongLeftArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "symb", 
                    RowBox[{"Symbolize", "[", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], "]"}], "infixnotation", 
                    RowBox[{"InfixNotation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], ",", "\[Placeholder]"}], "]"}], 
                    "addia", 
                    RowBox[{"AddInputAlias", "[", 
                    RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "pattwraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationPatternTag"], "madeboxeswraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationMadeBoxesTag"], "notation", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", 
                    "\[DoubleLongLeftRightArrow]", " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation>", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongRightArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation<", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongLeftArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "symb", 
                    RowBox[{"Symbolize", "[", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], "]"}], "infixnotation", 
                    RowBox[{"InfixNotation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], ",", "\[Placeholder]"}], "]"}], 
                    "addia", 
                    RowBox[{"AddInputAlias", "[", 
                    RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "pattwraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationPatternTag"], "madeboxeswraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationMadeBoxesTag"], "notation", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", 
                    "\[DoubleLongLeftRightArrow]", " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation>", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongRightArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation<", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongLeftArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "symb", 
                    RowBox[{"Symbolize", "[", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], "]"}], "infixnotation", 
                    RowBox[{"InfixNotation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], ",", "\[Placeholder]"}], "]"}], 
                    "addia", 
                    RowBox[{"AddInputAlias", "[", 
                    RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "pattwraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationPatternTag"], "madeboxeswraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationMadeBoxesTag"], "notation", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", 
                    "\[DoubleLongLeftRightArrow]", " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation>", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongRightArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation<", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongLeftArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "symb", 
                    RowBox[{"Symbolize", "[", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], "]"}], "infixnotation", 
                    RowBox[{"InfixNotation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], ",", "\[Placeholder]"}], "]"}], 
                    "addia", 
                    RowBox[{"AddInputAlias", "[", 
                    RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "pattwraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationPatternTag"], "madeboxeswraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationMadeBoxesTag"], "notation", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", 
                    "\[DoubleLongLeftRightArrow]", " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation>", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongRightArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation<", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongLeftArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "symb", 
                    RowBox[{"Symbolize", "[", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], "]"}], "infixnotation", 
                    RowBox[{"InfixNotation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], ",", "\[Placeholder]"}], "]"}], 
                    "addia", 
                    RowBox[{"AddInputAlias", "[", 
                    RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "pattwraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationPatternTag"], "madeboxeswraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationMadeBoxesTag"], "notation", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", 
                    "\[DoubleLongLeftRightArrow]", " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation>", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongRightArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation<", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongLeftArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "symb", 
                    RowBox[{"Symbolize", "[", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], "]"}], "infixnotation", 
                    RowBox[{"InfixNotation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], ",", "\[Placeholder]"}], "]"}], 
                    "addia", 
                    RowBox[{"AddInputAlias", "[", 
                    RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "pattwraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationPatternTag"], "madeboxeswraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationMadeBoxesTag"], "notation", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", 
                    "\[DoubleLongLeftRightArrow]", " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation>", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongRightArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation<", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongLeftArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "symb", 
                    RowBox[{"Symbolize", "[", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], "]"}], "infixnotation", 
                    RowBox[{"InfixNotation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], ",", "\[Placeholder]"}], "]"}], 
                    "addia", 
                    RowBox[{"AddInputAlias", "[", 
                    RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "pattwraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationPatternTag"], "madeboxeswraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationMadeBoxesTag"], "notation", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", 
                    "\[DoubleLongLeftRightArrow]", " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation>", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongRightArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation<", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongLeftArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "symb", 
                    RowBox[{"Symbolize", "[", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], "]"}], "infixnotation", 
                    RowBox[{"InfixNotation", "[", 
                    RowBox[{
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], ",", "\[Placeholder]"}], "]"}], 
                    "addia", 
                    RowBox[{"AddInputAlias", "[", 
                    RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "pattwraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationPatternTag"], "madeboxeswraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationMadeBoxesTag"], "notation", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", 
                    "\[DoubleLongLeftRightArrow]", " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation>", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongRightArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation<", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongLeftArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "symb", 
                    RowBox[{"Symbolize", "[", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], "]"}], "infixnotation", 
                    RowBox[{"InfixNotation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], ",", "\[Placeholder]"}], "]"}], 
                    "addia", 
                    RowBox[{"AddInputAlias", "[", 
                    RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "pattwraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationPatternTag"], "madeboxeswraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationMadeBoxesTag"], "notation", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", 
                    "\[DoubleLongLeftRightArrow]", " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation>", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongRightArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation<", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongLeftArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "symb", 
                    RowBox[{"Symbolize", "[", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], "]"}], "infixnotation", 
                    RowBox[{"InfixNotation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], ",", "\[Placeholder]"}], "]"}], 
                    "addia", 
                    RowBox[{"AddInputAlias", "[", 
                    RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "pattwraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationPatternTag"], "madeboxeswraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationMadeBoxesTag"], "notation", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", 
                    "\[DoubleLongLeftRightArrow]", " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation>", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongRightArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation<", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongLeftArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "symb", 
                    RowBox[{"Symbolize", "[", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], "]"}], "infixnotation", 
                    RowBox[{"InfixNotation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], ",", "\[Placeholder]"}], "]"}], 
                    "addia", 
                    RowBox[{"AddInputAlias", "[", 
                    RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "pattwraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationPatternTag"], "madeboxeswraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationMadeBoxesTag"], "notation", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", 
                    "\[DoubleLongLeftRightArrow]", " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation>", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongRightArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation<", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongLeftArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "symb", 
                    RowBox[{"Symbolize", "[", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], "]"}], "infixnotation", 
                    RowBox[{"InfixNotation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], ",", "\[Placeholder]"}], "]"}], 
                    "addia", 
                    RowBox[{"AddInputAlias", "[", 
                    RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "pattwraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationPatternTag"], "madeboxeswraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationMadeBoxesTag"], "notation", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", 
                    "\[DoubleLongLeftRightArrow]", " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation>", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongRightArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation<", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongLeftArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "symb", 
                    RowBox[{"Symbolize", "[", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], "]"}], "infixnotation", 
                    RowBox[{"InfixNotation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], ",", "\[Placeholder]"}], "]"}], 
                    "addia", 
                    RowBox[{"AddInputAlias", "[", 
                    RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "pattwraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationPatternTag"], "madeboxeswraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationMadeBoxesTag"], "notation", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", 
                    "\[DoubleLongLeftRightArrow]", " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation>", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongRightArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation<", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongLeftArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "symb", 
                    RowBox[{"Symbolize", "[", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], "]"}], "infixnotation", 
                    RowBox[{"InfixNotation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], ",", "\[Placeholder]"}], "]"}], 
                    "addia", 
                    RowBox[{"AddInputAlias", "[", 
                    RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "pattwraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationPatternTag"], "madeboxeswraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationMadeBoxesTag"], "notation", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", 
                    "\[DoubleLongLeftRightArrow]", " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation>", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongRightArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation<", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongLeftArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "symb", 
                    RowBox[{"Symbolize", "[", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], "]"}], "infixnotation", 
                    RowBox[{"InfixNotation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], ",", "\[Placeholder]"}], "]"}], 
                    "addia", 
                    RowBox[{"AddInputAlias", "[", 
                    RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "pattwraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationPatternTag"], "madeboxeswraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationMadeBoxesTag"], "notation", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", 
                    "\[DoubleLongLeftRightArrow]", " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation>", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongRightArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation<", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongLeftArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "symb", 
                    RowBox[{"Symbolize", "[", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], "]"}], "infixnotation", 
                    RowBox[{"InfixNotation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], ",", "\[Placeholder]"}], "]"}], 
                    "addia", 
                    RowBox[{"AddInputAlias", "[", 
                    RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "pattwraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationPatternTag"], "madeboxeswraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationMadeBoxesTag"], "notation", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", 
                    "\[DoubleLongLeftRightArrow]", " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation>", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongRightArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "notation<", 
                    RowBox[{"Notation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], " ", "\[DoubleLongLeftArrow]", 
                    " ", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "symb", 
                    RowBox[{"Symbolize", "[", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], "]"}], "infixnotation", 
                    RowBox[{"InfixNotation", "[", 
                    RowBox[{
                    
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationTemplateTag"], ",", "\[Placeholder]"}], "]"}], 
                    "addia", 
                    RowBox[{"AddInputAlias", "[", 
                    RowBox[{"\"\[SelectionPlaceholder]\"", "\[Rule]", 
                    TemplateBox[{"\[Placeholder]"}, "NotationTemplateTag"]}], 
                    "]"}], "pattwraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationPatternTag"], "madeboxeswraper", 
                    TemplateBox[{"\[SelectionPlaceholder]"}, 
                    "NotationMadeBoxesTag"], ":=<", 
                    OverscriptBox[":=", "\:02c2"], ":=<", 
                    OverscriptBox[":=", "\:02c2"], ":=<", 
                    OverscriptBox[":=", "\:02c2"], ":=<", 
                    OverscriptBox[":=", "\:02c2"], ":=<", 
                    OverscriptBox[":=", "\:02c2"], ":=<", 
                    OverscriptBox[":=", "\:02c2"], ":=<", 
                    OverscriptBox[":=", "\:02c2"], ":=<", 
                    OverscriptBox[":=", "\:02c2"], ":=<", 
                    OverscriptBox[":=", "\:02c2"], ":=<", 
                    OverscriptBox[":=", "\:02c2"], ":=<", 
                    OverscriptBox[":=", "\:02c2"], ":=<", 
                    OverscriptBox[":=", "\:02c2"], ":=<", 
                    OverscriptBox[":=", "\:02c2"], ":=<", 
                    OverscriptBox[":=", "\:02c2"], "=<", 
                    OverscriptBox["=", "\:02c2"]] -> {
                    ":=<" -> OverscriptBox[":=", "\:02c2"]}) -> {"=<" -> 
                    OverscriptBox["=", "\:02c2"]}) -> {":=<" -> 
                    OverscriptBox[":=", "\:02c2"]}) -> {"=<" -> 
                    OverscriptBox["=", "\:02c2"]}) -> {":=<" -> 
                    OverscriptBox[":=", "\:02c2"]}) -> {"=<" -> 
                    OverscriptBox["=", "\:02c2"]}) -> {":=<" -> 
                    OverscriptBox[":=", "\:02c2"]}) -> {"=<" -> 
                    OverscriptBox["=", "\:02c2"]}) -> {":=<" -> 
                    OverscriptBox[":=", "\:02c2"]}) -> {"=<" -> 
                    OverscriptBox["=", "\:02c2"]}) -> {":=<" -> 
                    OverscriptBox[":=", "\:02c2"]}) -> {"=<" -> 
                    OverscriptBox["=", "\:02c2"]}) -> {":=<" -> 
                    OverscriptBox[":=", "\:02c2"]}) -> {"=<" -> 
                    OverscriptBox["=", "\:02c2"]}) -> {":=<" -> 
                    OverscriptBox[":=", "\:02c2"]}) -> {"=<" -> 
                    OverscriptBox["=", "\:02c2"]}) -> {":=<" -> 
                    OverscriptBox[":=", "\:02c2"]}) -> {"=<" -> 
                    OverscriptBox["=", "\:02c2"]}) -> {":=<" -> 
                    OverscriptBox[":=", "\:02c2"]}) -> {"=<" -> 
                    OverscriptBox["=", "\:02c2"]}) -> {":=<" -> 
                    OverscriptBox[":=", "\:02c2"]}) -> {"=<" -> 
                    OverscriptBox["=", "\:02c2"]}) -> {":=<" -> 
                    OverscriptBox[":=", "\:02c2"]}) -> {"=<" -> 
                    OverscriptBox["=", "\:02c2"]}) -> {":=<" -> 
                    OverscriptBox[":=", "\:02c2"]}) -> {"=<" -> 
                    OverscriptBox["=", "\:02c2"]}) -> {":=<" -> 
                    OverscriptBox[":=", "\:02c2"]}) -> {"=<" -> 
                    OverscriptBox["=", "\:02c2"]}) -> {":=<" -> 
                    OverscriptBox[":=", "\:02c2"]}) -> {"=<" -> 
                    OverscriptBox["=", "\:02c2"]}) -> {":=<" -> 
                    OverscriptBox[":=", "\:02c2"]}) -> {"=<" -> 
                    OverscriptBox["=", "\:02c2"]}) -> {":=<" -> 
                    OverscriptBox[":=", "\:02c2"]}) -> {"=<" -> 
                    OverscriptBox["=", "\:02c2"]}) -> {":=<" -> 
                    OverscriptBox[":=", "\:02c2"]}) -> {"=<" -> 
                    OverscriptBox["=", "\:02c2"]}) -> {":=<" -> 
                    OverscriptBox[":=", "\:02c2"]}) -> {"=<" -> 
                    OverscriptBox["=", "\:02c2"]}) -> {":=<" -> 
                    OverscriptBox[":=", "\:02c2"]}) -> {"=<" -> 
                    OverscriptBox["=", "\:02c2"]}) -> {":=<" -> 
                    OverscriptBox[":=", "\:02c2"]}) -> {"=<" -> OverscriptBox[
                    "=", "\:02c2"]}) -> {":=<" -> OverscriptBox[":=", 
                    "\:02c2"]}) -> {"=<" -> OverscriptBox["=", 
                    "\:02c2"]}) -> {":=<" -> OverscriptBox[":=", 
                    "\:02c2"]}) -> {"=<" -> OverscriptBox["=", 
                    "\:02c2"]}) -> {":=<" -> OverscriptBox[":=", 
                    "\:02c2"]}) -> {"=<" -> OverscriptBox["=", 
                    "\:02c2"]}) -> {":=<" -> OverscriptBox[":=", 
                    "\:02c2"]}) -> {"=<" -> OverscriptBox["=", 
                    "\:02c2"]}) -> {":=<" -> OverscriptBox[":=", 
                    "\:02c2"]}) -> {"=<" -> OverscriptBox["=", 
                    "\:02c2"]}) -> {":=<" -> OverscriptBox[":=", 
                    "\:02c2"]}) -> {"=<" -> OverscriptBox["=", 
                    "\:02c2"]}) -> {":=<" -> OverscriptBox[":=", 
                    "\:02c2"]}) -> {"=<" -> OverscriptBox["=", 
                    "\:02c2"]}) -> {":=<" -> OverscriptBox[":=", 
                    "\:02c2"]}) -> {"=<" -> OverscriptBox["=", 
                    "\:02c2"]}) -> {":=<" -> OverscriptBox[":=", 
                    "\:02c2"]}) -> {"=<" -> OverscriptBox["=", 
                    "\:02c2"]}) -> {":=<" -> OverscriptBox[
                    ":=", "\:02c2"]}) -> {"=<" -> OverscriptBox[
                    "=", "\:02c2"]}) -> {":=<" -> OverscriptBox[
                    ":=", "\:02c2"]}) -> {"=<" -> OverscriptBox[
                    "=", "\:02c2"]}) -> {":=<" -> OverscriptBox[
                    ":=", "\:02c2"]}) -> {"=<" -> OverscriptBox[
                    "=", "\:02c2"]}) -> {":=<" -> OverscriptBox[
                    ":=", "\:02c2"]}) -> {"=<" -> OverscriptBox[
                    "=", "\:02c2"]}) -> {":=<" -> OverscriptBox[
                    ":=", "\:02c2"]}) -> {"=<" -> OverscriptBox[
                    "=", "\:02c2"]}) -> {":=<" -> OverscriptBox[
                    ":=", "\:02c2"]}) -> {"=<" -> 
                    OverscriptBox["=", "\:02c2"]}) -> {
                    ":=<" -> OverscriptBox[":=", "\:02c2"]}) -> {
                    "=<" -> OverscriptBox["=", "\:02c2"]}) -> {
                    ":=<" -> OverscriptBox[":=", "\:02c2"]}) -> {
                    "=<" -> OverscriptBox["=", "\:02c2"]}) -> {
                    ":=<" -> OverscriptBox[":=", "\:02c2"]}) -> {
                    "=<" -> OverscriptBox["=", "\:02c2"]}) -> {
                    ":=<" -> OverscriptBox[":=", "\:02c2"]}) -> {
                    "=<" -> OverscriptBox["=", "\:02c2"]}) -> {
                    ":=<" -> OverscriptBox[":=", "\:02c2"]}) -> {
                    "=<" -> OverscriptBox["=", "\:02c2"]}) -> {
                    ":=<" -> OverscriptBox[":=", "\:02c2"]}) -> {
                    "=<" -> OverscriptBox["=", "\:02c2"]}) -> {
                    ":=<" -> OverscriptBox[":=", "\:02c2"]}) -> {
                    "=<" -> OverscriptBox["=", "\:02c2"]}) -> {
                    ":=<" -> OverscriptBox[":=", "\:02c2"]}) -> {
                    "=<" -> OverscriptBox["=", "\:02c2"]}) -> {
                    ":=<" -> OverscriptBox[":=", "\:02c2"]}) -> {
                    "=<" -> OverscriptBox["=", "\:02c2"]}) -> {
                    ":=<" -> OverscriptBox[":=", "\:02c2"]}) -> {
                    "=<" -> OverscriptBox["=", "\:02c2"]}) -> {
                    ":=<" -> OverscriptBox[":=", "\:02c2"]}) -> {
                    "=<" -> OverscriptBox["=", "\:02c2"]}) -> {
                    ":=<" -> OverscriptBox[":=", "\:02c2"]}) -> {
                    "=<" -> OverscriptBox["=", "\:02c2"]}) -> {
                    ":=<" -> OverscriptBox[":=", "\:02c2"]}) -> {
                    "=<" -> OverscriptBox["=", "\:02c2"]}) -> {
                   ":=<" -> OverscriptBox[":=", "\:02c2"]}) -> {
                  "=<" -> OverscriptBox["=", "\:02c2"]}) -> {
                 ":=<" -> OverscriptBox[":=", "\:02c2"]}) -> {
                "=<" -> OverscriptBox["=", "\:02c2"]}) -> {
               ":=<" -> OverscriptBox[":=", "\:02c2"]}) -> {
              "=<" -> OverscriptBox["=", "\:02c2"]}) -> {
             ":=<" -> OverscriptBox[":=", "\:02c2"]}) -> {
            "=<" -> OverscriptBox["=", "\:02c2"]}) -> {
           ":=<" -> OverscriptBox[":=", "\:02c2"]}) -> {
          "=<" -> OverscriptBox["=", "\:02c2"]}) -> {
         ":=<" -> OverscriptBox[":=", "\:02c2"]}) -> {
        "=<" -> OverscriptBox["=", "\:02c2"]}) -> {
       ":=<" -> OverscriptBox[":=", "\:02c2"]}) -> {
      "=<" -> OverscriptBox["=", "\:02c2"]}) -> {
     ":=<" -> OverscriptBox[":=", "\:02c2"]}) -> {
    "=<" -> OverscriptBox["=", "\:02c2"]}) -> {
   ":=<" -> OverscriptBox[":=", "\:02c2"]}) -> {
  "=<" -> OverscriptBox["=", "\:02c2"]}) -> {
 ":=<" -> OverscriptBox[":=", "\:02c2"]}) -> {
 "=<" -> OverscriptBox["=", "\:02c2"]}) -> {
 ":=<" -> OverscriptBox[":=", "\:02c2"]}) -> {
 "=<" -> OverscriptBox["=", "\:02c2"]}) -> {
 ":=<" -> OverscriptBox[":=", "\:02c2"]}) -> {
 "=<" -> OverscriptBox["=", "\:02c2"]}) -> {
 ":=<" -> OverscriptBox[":=", "\:02c2"]}) -> {
 "=<" -> OverscriptBox["=", "\:02c2"]}) -> {
 ":=<" -> OverscriptBox[":=", "\:02c2"]}) -> {
 "=<" -> OverscriptBox["=", "\:02c2"]}) -> {
 ":=<" -> OverscriptBox[":=", "\:02c2"]}) -> {
 "=<" -> OverscriptBox["=", "\:02c2"]}) -> {
 ":=<" -> OverscriptBox[":=", "\:02c2"]}) -> {
 "=<" -> OverscriptBox["=", "\:02c2"]}) -> {
 ":=<" -> OverscriptBox[":=", "\:02c2"]}) -> {
 "=<" -> OverscriptBox["=", "\:02c2"]}) -> {
 ":=<" -> OverscriptBox[":=", "\:02c2"]}) -> {
 "=<" -> OverscriptBox["=", "\:02c2"]}) -> {
 ":=<" -> OverscriptBox[":=", "\:02c2"]}) -> {
 "=<" -> OverscriptBox["=", "\:02c2"]}) -> {
 ":=<" -> OverscriptBox[":=", "\:02c2"]}) -> {
 "=<" -> OverscriptBox["=", "\:02c2"]}) -> {
 ":=<" -> OverscriptBox[":=", "\:02c2"]}) -> {
 "=<" -> OverscriptBox["=", "\:02c2"]}) -> {
 ":=<" -> OverscriptBox[":=", "\:02c2"]}) -> {
 "=<" -> OverscriptBox["=", "\:02c2"]}) -> {
 ":=<" -> OverscriptBox[":=", "\:02c2"]}) -> {
 "=<" -> OverscriptBox["=", "\:02c2"]}) -> {
 ":=<" -> OverscriptBox[":=", "\:02c2"]}) -> {
 "=<" -> OverscriptBox["=", "\:02c2"]}) -> {
 ":=<" -> OverscriptBox[":=", "\:02c2"]}) -> {
 "=<" -> OverscriptBox["=", "\:02c2"]}) -> {
 ":=<" -> OverscriptBox[":=", "\:02c2"]}) -> {
 "=<" -> OverscriptBox["=", "\:02c2"]}) -> {
 ":=<" -> OverscriptBox[":=", "\:02c2"]}) -> {
 "=<" -> OverscriptBox["=", "\:02c2"]}) -> {
 ":=<" -> OverscriptBox[":=", "\:02c2"]}) -> {
 "=<" -> OverscriptBox["=", "\:02c2"]}) -> {
 ":=<" -> OverscriptBox[":=", "\:02c2"]}) -> {
 "=<" -> OverscriptBox["=", "\:02c2"]}) -> {
 ":=<" -> OverscriptBox[":=", "\:02c2"]}) -> {
 "=<" -> OverscriptBox["=", "\:02c2"]}) -> {
 ":=<" -> OverscriptBox[":=", "\:02c2"]}) -> {
 "=<" -> OverscriptBox["=", "\:02c2"]}) -> {
 ":=<" -> OverscriptBox[":=", "\:02c2"]}) -> {
 "=<" -> OverscriptBox["=", "\:02c2"]}) -> {
 ":=<" -> OverscriptBox[":=", "\:02c2"]}) -> {
 "=<" -> OverscriptBox["=", "\:02c2"]}) -> {
 ":=<" -> OverscriptBox[":=", "\:02c2"]}) -> {
 "=<" -> OverscriptBox["=", "\:02c2"]}) -> {
 ":=<" -> OverscriptBox[":=", "\:02c2"]}) -> {
 "=<" -> OverscriptBox["=", "\:02c2"]}) -> {
 ":=<" -> OverscriptBox[":=", "\:02c2"]}) -> {
 "=<" -> OverscriptBox["=", "\:02c2"]}) -> {
 ":=<" -> OverscriptBox[":=", "\:02c2"]}) -> {
 "=<" -> OverscriptBox["=", "\:02c2"]}) -> {
 ":=<" -> OverscriptBox[":=", "\:02c2"]}) -> {
 "=<" -> OverscriptBox["=", "\:02c2"]}) -> {
 ":=<" -> OverscriptBox[":=", "\:02c2"]}) -> {
 "=<" -> OverscriptBox["=", "\:02c2"]}) -> {
 ":=<" -> OverscriptBox[":=", "\:02c2"]}),
Magnification:>1. Inherited,
FrontEndVersion->"13.3 for Microsoft Windows (64-bit) (July 24, 2023)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"e606dedd-0745-49eb-bf4c-676975a5c082"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 267, 5, 28, "Input",ExpressionUUID->"b48582d0-796c-4d80-a70e-26fe08b36565"],
Cell[CellGroupData[{
Cell[850, 29, 158, 3, 69, "Chapter",ExpressionUUID->"1f1b5ca2-a3e0-4c9b-ae2f-da293954b2b8"],
Cell[CellGroupData[{
Cell[1033, 36, 164, 3, 67, "Section",ExpressionUUID->"5be36f9a-83fd-47c6-9cf4-aa397ae71445"],
Cell[CellGroupData[{
Cell[1222, 43, 171, 3, 53, "Subsection",ExpressionUUID->"5eecc558-7caf-4f54-a673-ab096ff804e1"],
Cell[1396, 48, 5253, 138, 300, "Code",ExpressionUUID->"ce0bcb8c-1ef3-4c54-ae9d-7ead0859c500",
 InitializationCell->False]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[6698, 192, 185, 3, 53, "Section",ExpressionUUID->"1ac3cd53-09e5-45f5-b47e-6795de51639f"],
Cell[6886, 197, 227, 5, 47, "Input",ExpressionUUID->"b66c351f-b1cc-4483-b96b-f808bb4bc972"],
Cell[CellGroupData[{
Cell[7138, 206, 281, 4, 53, "Subsection",ExpressionUUID->"98d76889-0838-449f-98b7-d7385e0c913c"],
Cell[7422, 212, 12377, 264, 717, "Input",ExpressionUUID->"e9b7349a-76e7-4e6b-9d41-a98e279a90e5"],
Cell[19802, 478, 997, 27, 70, "Input",ExpressionUUID->"00dbe610-eee4-4379-b93e-2e35226421c2"],
Cell[20802, 507, 798, 21, 70, "Input",ExpressionUUID->"9b967058-8619-4a9f-bd37-6860dc4468c6"]
}, Closed]],
Cell[CellGroupData[{
Cell[21637, 533, 180, 3, 37, "Subsection",ExpressionUUID->"bf5c9a22-840b-42b0-85ad-d8bddec3f25d"],
Cell[21820, 538, 10203, 233, 772, "Input",ExpressionUUID->"998a2175-9b2d-434e-b46e-c403fdbd3cb6"],
Cell[32026, 773, 4709, 107, 70, "Input",ExpressionUUID->"db448320-72fb-44bb-a98f-68f821a7f685"],
Cell[36738, 882, 4789, 109, 70, "Input",ExpressionUUID->"b7fe319a-fe9a-4561-9273-70c7584e6617"]
}, Closed]],
Cell[CellGroupData[{
Cell[41564, 996, 173, 3, 37, "Subsection",ExpressionUUID->"bd348826-fe53-4650-b8ef-3e44f2fcf11d"],
Cell[41740, 1001, 14181, 300, 898, "Input",ExpressionUUID->"e4ab114b-0457-4183-a0d4-44eac90f96b7"],
Cell[55924, 1303, 14434, 302, 975, "Input",ExpressionUUID->"65e0e830-f568-4c71-b485-3d9de782c63e"],
Cell[70361, 1607, 11324, 252, 886, "Input",ExpressionUUID->"bf566bfa-53e3-4131-9fbd-16b8c7b203b7"],
Cell[81688, 1861, 11402, 253, 886, "Input",ExpressionUUID->"57e8162f-8cf3-4b50-9305-3a25c892b4df"],
Cell[93093, 2116, 10029, 235, 867, "Input",ExpressionUUID->"701ac80d-0526-4a5d-9504-385ea3956621"]
}, Closed]],
Cell[CellGroupData[{
Cell[103159, 2356, 235, 4, 37, "Subsection",ExpressionUUID->"d8f97c37-c04e-46b7-9fa2-6d972ebe7fc4"],
Cell[103397, 2362, 7881, 176, 600, "Input",ExpressionUUID->"7d410c18-dc97-4e07-9207-eee81814a759"]
}, Closed]],
Cell[CellGroupData[{
Cell[111315, 2543, 229, 4, 37, "Subsection",ExpressionUUID->"9c822d5e-81fa-450c-9fab-f7096b357395"],
Cell[111547, 2549, 2535, 64, 219, "Input",ExpressionUUID->"c3cc28ea-24c2-4fee-b90d-4395efb15945"]
}, Open  ]],
Cell[CellGroupData[{
Cell[114119, 2618, 175, 3, 53, "Subsection",ExpressionUUID->"a95c6130-72fd-4a92-9df7-ebca3ed64023"],
Cell[114297, 2623, 1894, 51, 70, "Input",ExpressionUUID->"b3e0461f-bcd2-4551-a1a9-1adb1f6a4f75"],
Cell[116194, 2676, 883, 26, 70, "Input",ExpressionUUID->"15ead49b-71f9-4088-9076-e8f56b73b4a3"],
Cell[117080, 2704, 3717, 90, 70, "Input",ExpressionUUID->"afe599e2-5340-4632-9a19-d301a3d41ac9"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[120846, 2800, 174, 3, 53, "Section",ExpressionUUID->"eecdece1-910f-44e4-9306-eba9d653b292"],
Cell[CellGroupData[{
Cell[121045, 2807, 228, 4, 53, "Subsection",ExpressionUUID->"f6b16b30-d579-4b8b-b932-7b197d5d0218"],
Cell[121276, 2813, 79072, 1915, 10146, "Input",ExpressionUUID->"b8b6b901-30e3-44bd-84fc-bb4e11d9c60e"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[200409, 4735, 160, 3, 58, "Chapter",ExpressionUUID->"e3d614c7-a321-493e-b9de-8c298e25bd2c"],
Cell[200572, 4740, 320, 7, 56, "Text",ExpressionUUID->"16f5e194-3e94-476b-aac1-b0be1cad1755"],
Cell[200895, 4749, 2200, 52, 86, "Input",ExpressionUUID->"e63c50f6-8c77-494f-8c4c-e5054fd0725b"],
Cell[203098, 4803, 688, 17, 47, "Input",ExpressionUUID->"d8a36c1a-bfa1-408d-be05-a9f667281c4b"]
}, Closed]],
Cell[CellGroupData[{
Cell[203823, 4825, 224, 4, 58, "Chapter",ExpressionUUID->"453c3ba5-2e53-4b22-ae6a-b12e6f12af03"],
Cell[CellGroupData[{
Cell[204072, 4833, 173, 3, 67, "Section",ExpressionUUID->"f5b68bac-f174-4172-8a20-b793bc0f73f0"],
Cell[204248, 4838, 444, 8, 58, "Text",ExpressionUUID->"516df055-a022-4fe9-bdee-2ed5ecd53668"],
Cell[204695, 4848, 4482, 95, 314, "Input",ExpressionUUID->"2fd91371-8666-4a50-8e6a-f0e8dd8efe3b"],
Cell[209180, 4945, 204, 3, 35, "Text",ExpressionUUID->"2cd5c294-1395-4c05-bf49-dedcca015114"],
Cell[209387, 4950, 5704, 134, 638, "Input",ExpressionUUID->"93a570aa-ccbf-4d7d-a124-4f2ad8658084"],
Cell[CellGroupData[{
Cell[215116, 5088, 154, 3, 54, "Subsection",ExpressionUUID->"6a89fb72-7f3c-465e-b676-ef05e5a602c7"],
Cell[215273, 5093, 1423, 39, 181, "Input",ExpressionUUID->"4032094c-a6f1-4ada-b5d6-54959890ba8d"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[216745, 5138, 324, 7, 91, "Section",ExpressionUUID->"3735de6c-fb93-4c4c-8242-a512849ff2a4"],
Cell[217072, 5147, 6427, 152, 466, "Input",ExpressionUUID->"efa9673d-f94d-4fde-8f99-a5a90711c788"],
Cell[223502, 5301, 3527, 102, 124, "Input",ExpressionUUID->"a2a642aa-096e-47f0-a317-7358e4fc44a2"],
Cell[227032, 5405, 3392, 75, 295, "Input",ExpressionUUID->"92847ee9-84ec-45e4-8786-b61aea887986"],
Cell[230427, 5482, 910, 20, 86, "Input",ExpressionUUID->"19916438-e529-484b-a336-0da868ff7988"],
Cell[CellGroupData[{
Cell[231362, 5506, 186, 3, 54, "Subsection",ExpressionUUID->"790a77c5-0dba-4a30-8761-212df252c596"],
Cell[231551, 5511, 4212, 97, 295, "Input",ExpressionUUID->"24910327-fd9b-4064-80c8-d7684dd8cc2d"],
Cell[235766, 5610, 4328, 99, 295, "Input",ExpressionUUID->"e93cd8d6-977f-4869-b461-cf169e9e5158"],
Cell[240097, 5711, 4110, 96, 295, "Input",ExpressionUUID->"240eeb6f-7f2e-4d41-91d0-45cb7c9e2a09"],
Cell[244210, 5809, 1224, 30, 143, "Input",ExpressionUUID->"6cb53c12-6799-497d-8286-8cdfadc79b6a"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[245483, 5845, 410, 6, 53, "Section",ExpressionUUID->"942f5a5e-1754-422d-b548-57b081bfa039"],
Cell[245896, 5853, 3319, 64, 200, "Input",ExpressionUUID->"67d94281-ed8f-4e2c-abeb-6cdadf1294d0"],
Cell[CellGroupData[{
Cell[249240, 5921, 228, 4, 45, "Subsubsection",ExpressionUUID->"3b09db15-73bd-4f9c-b6dc-bee5c741d4fa"],
Cell[249471, 5927, 1552, 36, 67, "Input",ExpressionUUID->"d201e261-6747-42b9-bf19-a0a591f664f7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[251060, 5968, 163, 3, 45, "Subsubsection",ExpressionUUID->"d794eb85-9445-42f2-871d-e3804b665244"],
Cell[251226, 5973, 777, 19, 121, "Code",ExpressionUUID->"15c2e4b1-98ff-4ef8-8ce8-de8399bcc584"],
Cell[252006, 5994, 5832, 133, 219, "Input",ExpressionUUID->"adc7ab47-dc60-4e91-b247-624b83d20aa7"],
Cell[257841, 6129, 1254, 29, 124, "Input",ExpressionUUID->"66f1bc5b-7568-4819-b647-7f037447da0b"],
Cell[259098, 6160, 1801, 39, 86, "Input",ExpressionUUID->"a0f05e28-3db4-46a8-a302-903cf794a3a6"],
Cell[260902, 6201, 502202, 8273, 500, "Input",ExpressionUUID->"f61eafd1-7589-4848-a91a-ebb20a5b13db"],
Cell[CellGroupData[{
Cell[763129, 14478, 1592, 36, 67, "Input",ExpressionUUID->"d4c1ead0-b320-455f-bb5d-2302d55e2a28"],
Cell[764724, 14516, 213542, 3507, 267, "Output",ExpressionUUID->"f975a859-e640-4dc5-950d-4b6dead1745a"]
}, Open  ]],
Cell[978281, 18026, 151, 3, 28, "Input",ExpressionUUID->"26bbb248-e42b-4c1d-a6bf-a99437e1d4e9"],
Cell[978435, 18031, 295, 7, 35, "Text",ExpressionUUID->"cda0218a-7d4b-4d25-9b25-d2b2bb5d5322"],
Cell[978733, 18040, 4606, 110, 105, "Input",ExpressionUUID->"b4a85317-1932-4494-ba03-550192634d4d"],
Cell[983342, 18152, 1174, 28, 28, "Input",ExpressionUUID->"2b1b404e-e478-42b9-99cf-ac4548605851"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[984577, 18187, 155, 3, 58, "Chapter",ExpressionUUID->"34a4ddeb-8738-40df-aa4a-9710b6868cf8"],
Cell[984735, 18192, 9116, 180, 352, "Input",ExpressionUUID->"5f75c1d1-87f1-4506-b00d-9f4d6ad9527b"]
}, Closed]],
Cell[CellGroupData[{
Cell[993888, 18377, 203, 3, 58, "Chapter",ExpressionUUID->"f2cf6634-0cb7-43dc-b16f-e6b62cf551f3"],
Cell[CellGroupData[{
Cell[994116, 18384, 173, 3, 54, "Subsection",ExpressionUUID->"1d24b0c7-bf80-4a41-a197-d54e551aab3e"],
Cell[994292, 18389, 1485, 38, 50, "Code",ExpressionUUID->"a2413ffe-6e3c-4240-be97-8324c1a98fa2"],
Cell[995780, 18429, 236, 4, 28, "Input",ExpressionUUID->"69f14586-f522-4d94-bb71-a269bc245a4a"],
Cell[996019, 18435, 2054, 49, 105, "Input",ExpressionUUID->"0f80ebb3-33e1-44c0-ac4d-a9d4a9693b45"],
Cell[CellGroupData[{
Cell[998098, 18488, 206, 3, 45, "Subsubsection",ExpressionUUID->"6c918c77-536a-40c4-99df-1a4d1bfec620"],
Cell[998307, 18493, 6992, 151, 567, "Input",ExpressionUUID->"c828423d-759c-4cfc-8b59-c102cc844862"],
Cell[1005302, 18646, 2402, 58, 105, "Input",ExpressionUUID->"21efcc76-89bd-4a76-ab8f-a3437d6e67b7"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1007753, 18710, 163, 3, 54, "Subsection",ExpressionUUID->"447d80d8-c07a-46b5-8d46-fe5c1b1c4916"],
Cell[1007919, 18715, 923, 23, 48, "Input",ExpressionUUID->"c280649e-db11-43bb-a61a-5f2edaae149e"],
Cell[1008845, 18740, 909, 24, 48, "Input",ExpressionUUID->"5f4c821f-5ce2-4f78-8263-b952988c68f9"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1009803, 18770, 235, 4, 58, "Chapter",ExpressionUUID->"185074f2-58aa-4893-abbc-576795ecb0c9"],
Cell[CellGroupData[{
Cell[1010063, 18778, 280, 6, 67, "Section",ExpressionUUID->"23acdb82-1568-468e-8f62-37a8a5c1c479"],
Cell[1010346, 18786, 2938, 69, 241, "Input",ExpressionUUID->"a50e7429-70b8-4266-9496-7966f2eaf57b"],
Cell[1013287, 18857, 3096, 76, 162, "Input",ExpressionUUID->"d3ff47c3-ceec-49c1-b315-66458e7d9f18"],
Cell[1016386, 18935, 3370, 79, 162, "Input",ExpressionUUID->"fc6afbf8-5d07-43f5-b391-305f75ba7be5"],
Cell[1019759, 19016, 1365, 31, 48, "Input",ExpressionUUID->"d2949db6-008f-4fd9-94d3-5796e6307c1b"]
}, Closed]],
Cell[CellGroupData[{
Cell[1021161, 19052, 161, 3, 53, "Section",ExpressionUUID->"f6ef710c-a3c1-4bc2-bc79-c2a0235ae6dd"],
Cell[1021325, 19057, 900, 23, 120, "Input",ExpressionUUID->"b0081a05-ff0e-4057-9075-6dfd4928739f"],
Cell[1022228, 19082, 1470, 39, 47, "Input",ExpressionUUID->"fd7726dd-b980-4d64-98bc-6283c9f61c6e"],
Cell[1023701, 19123, 976, 24, 120, "Input",ExpressionUUID->"c1b44ee4-025f-4de6-9350-29518cf00814"],
Cell[1024680, 19149, 1595, 40, 47, "Input",ExpressionUUID->"600ff998-a388-47fd-989e-1c6a2c8f73c0"],
Cell[1026278, 19191, 1052, 25, 120, "Input",ExpressionUUID->"df766053-ac38-4675-9af9-19acf8602648"],
Cell[1027333, 19218, 1682, 41, 66, "Input",ExpressionUUID->"4d9278e5-c563-4f97-808c-676ae31dea89"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[1029064, 19265, 164, 3, 58, "Chapter",ExpressionUUID->"98c5111d-6504-4a9b-b163-ac3009843f20"],
Cell[CellGroupData[{
Cell[1029253, 19272, 159, 3, 67, "Section",ExpressionUUID->"5ffa6200-b0b5-45fd-baec-02c2af4c8a7c"],
Cell[1029415, 19277, 2832, 64, 237, "Input",ExpressionUUID->"828d8904-ccce-4f57-aa86-b950a9e61aac"],
Cell[1032250, 19343, 803, 21, 66, "Input",ExpressionUUID->"a1a7f697-e933-4b1d-9242-719a8982a571"],
Cell[1033056, 19366, 813, 21, 66, "Input",ExpressionUUID->"5125239e-319f-435b-9e7b-8a81566b0ae4"]
}, Closed]],
Cell[CellGroupData[{
Cell[1033906, 19392, 167, 3, 53, "Section",ExpressionUUID->"3527b40f-68dd-4436-89c8-a53596ea29b6"],
Cell[1034076, 19397, 405, 9, 28, "Input",ExpressionUUID->"92619747-15e0-42cd-8dfa-05349e1a7365"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1034530, 19412, 158, 3, 58, "Chapter",ExpressionUUID->"b6dc5ffb-df49-448c-96a5-3891d17c8709"],
Cell[1034691, 19417, 10638, 223, 733, "Input",ExpressionUUID->"9269c7e6-4d85-4f8e-9893-5ddd1803d827"],
Cell[1045332, 19642, 209, 4, 28, "Input",ExpressionUUID->"3f0396d5-4971-4328-865d-cb4cd9473c5b"],
Cell[1045544, 19648, 649, 13, 28, "Input",ExpressionUUID->"ca48192d-95a1-41bb-9453-6ec614425b3e"],
Cell[1046196, 19663, 255, 5, 28, "Input",ExpressionUUID->"a83e04cd-daf2-4e6b-a958-91942e91d782"],
Cell[1046454, 19670, 461, 10, 28, "Input",ExpressionUUID->"3a01e780-c39d-48cd-9167-cebabe59b589"],
Cell[1046918, 19682, 329, 8, 28, "Input",ExpressionUUID->"5a81461c-c46a-45ca-acbc-33f67bd35b18"],
Cell[1047250, 19692, 2128, 41, 105, "Input",ExpressionUUID->"c463a3ea-f1d3-4ae5-b7ad-1a2c0fd82899"],
Cell[1049381, 19735, 619, 14, 48, "Input",ExpressionUUID->"67680861-f0fb-44f5-862b-3f499908723c"],
Cell[1050003, 19751, 397, 6, 47, "Input",ExpressionUUID->"75e5fb47-7374-46f2-ad6b-1d467383db9a"],
Cell[1050403, 19759, 1395, 33, 105, "Input",ExpressionUUID->"253e5369-3429-47e8-bb6f-5f0ab61d106d"],
Cell[1051801, 19794, 416, 9, 28, "Input",ExpressionUUID->"5dcb434c-2ecb-4f4d-a000-54c4c56b8863"]
}, Closed]],
Cell[CellGroupData[{
Cell[1052254, 19808, 270, 6, 58, "Chapter",ExpressionUUID->"db8ae1e0-b1a4-4342-973b-80719a026738"],
Cell[CellGroupData[{
Cell[1052549, 19818, 157, 3, 67, "Section",ExpressionUUID->"2ecfc3c5-2221-4969-af9a-af9ad175d9ce"],
Cell[CellGroupData[{
Cell[1052731, 19825, 164, 3, 54, "Subsection",ExpressionUUID->"68be89c5-1704-4cec-826a-32bc9a8b5338"],
Cell[CellGroupData[{
Cell[1052920, 19832, 166, 3, 45, "Subsubsection",ExpressionUUID->"654f99eb-1a69-4286-9b8b-4708add21052"],
Cell[1053089, 19837, 3315, 57, 610, "Input",ExpressionUUID->"387f4d4a-5dae-41c7-ac0d-d824d5b3e1b8"]
}, Closed]],
Cell[CellGroupData[{
Cell[1056441, 19899, 297, 5, 35, "Subsubsection",ExpressionUUID->"3f5e5aef-df03-45c7-b297-2fba5cde2d21"],
Cell[1056741, 19906, 10317, 212, 547, "Input",ExpressionUUID->"12f0b6f8-a99c-4873-8f60-f45d9bea24a6"],
Cell[1067061, 20120, 5108, 84, 135, "Input",ExpressionUUID->"4fd18640-9805-4e0a-9578-2ed627121b7b"],
Cell[1072172, 20206, 9488, 189, 420, "Input",ExpressionUUID->"367e2b7e-be2b-4b79-9e16-d0af6dabd010"],
Cell[1081663, 20397, 8953, 179, 405, "Input",ExpressionUUID->"46421821-0a7c-4a2c-869d-c658f2561e9a"],
Cell[1090619, 20578, 3891, 86, 246, "Input",ExpressionUUID->"845a3cf4-4226-454e-8322-03c70c1de3b4"],
Cell[1094513, 20666, 3534, 81, 151, "Input",ExpressionUUID->"8a2161c3-0c7e-4cfc-b12d-d1526483f9be"],
Cell[1098050, 20749, 10317, 190, 377, "Input",ExpressionUUID->"e0401b75-656c-4494-826a-fba2d8bcf73c"],
Cell[1108370, 20941, 5312, 88, 102, "Input",ExpressionUUID->"7b91c1b4-6cd2-4ef2-ba5b-1d3e5fc7db3a"],
Cell[1113685, 21031, 1713, 32, 55, "Input",ExpressionUUID->"41b3f9fe-0983-40d2-96da-241751ef29f7"],
Cell[1115401, 21065, 3814, 82, 261, "Input",ExpressionUUID->"2ff546d9-4171-4f0b-a522-90b403ce980c"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[1119264, 21153, 167, 3, 38, "Subsection",ExpressionUUID->"8bbffd92-8ae1-4706-a711-75b886c42820"],
Cell[CellGroupData[{
Cell[1119456, 21160, 165, 3, 45, "Subsubsection",ExpressionUUID->"461cda36-ade4-475a-b494-2e9a87b7ebb0"],
Cell[1119624, 21165, 3737, 66, 492, "Input",ExpressionUUID->"c4019279-2a52-4fe5-a399-80b7a27fe82a"]
}, Closed]],
Cell[CellGroupData[{
Cell[1123398, 21236, 169, 3, 35, "Subsubsection",ExpressionUUID->"c3e64e1f-3192-4d4f-8943-05b13ce514c0"],
Cell[1123570, 21241, 11710, 261, 878, "Input",ExpressionUUID->"d1908073-5226-44d0-9e22-428ad62187f5"],
Cell[1135283, 21504, 4745, 95, 352, "Input",ExpressionUUID->"f12ae987-d9f8-440c-8d64-d72b7355b573"],
Cell[1140031, 21601, 2082, 49, 181, "Input",ExpressionUUID->"595a731e-5ee2-4a64-bb52-8f4e63c0ebe2"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1142162, 21656, 157, 3, 38, "Subsection",ExpressionUUID->"0f15e304-c093-457e-9fef-1afd28b09d3f"],
Cell[CellGroupData[{
Cell[1142344, 21663, 168, 3, 45, "Subsubsection",ExpressionUUID->"a35aff76-3674-462d-8a12-166348df8c4c"],
Cell[1142515, 21668, 1101, 25, 162, "Input",ExpressionUUID->"1c37753f-5123-4254-ac79-15d028c98464"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1143653, 21698, 169, 3, 45, "Subsubsection",ExpressionUUID->"e2bc870d-09a0-400e-8941-a1caff83d77c"],
Cell[1143825, 21703, 2898, 73, 219, "Input",ExpressionUUID->"86634edb-d014-4828-846d-2258a18b5463"],
Cell[1146726, 21778, 823, 21, 93, "Input",ExpressionUUID->"14eaee01-363e-42a2-b449-160366c66731"],
Cell[1147552, 21801, 1876, 42, 124, "Input",ExpressionUUID->"7b5067f1-ae62-43ba-b72a-1607bae26bb9"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1149489, 21850, 164, 3, 53, "Section",ExpressionUUID->"4488ee5a-d8fb-4c36-8498-ccddf30e9bc0"],
Cell[1149656, 21855, 3468, 78, 133, "Input",ExpressionUUID->"50fe6860-c173-4edd-aa38-6be638556479"],
Cell[1153127, 21935, 563, 13, 28, "Input",ExpressionUUID->"692fbd37-5859-4ce7-9fbd-90969341847f"],
Cell[1153693, 21950, 933, 21, 67, "Input",ExpressionUUID->"3e00d0e9-97fa-4890-b483-45bb5286aaaa"],
Cell[1154629, 21973, 547, 12, 28, "Input",ExpressionUUID->"081c9be4-7e83-468a-8216-9664fd83a2dd"],
Cell[1155179, 21987, 537, 12, 28, "Input",ExpressionUUID->"79e18c64-9724-451f-b4f1-a7c96ded4671"],
Cell[1155719, 22001, 399, 10, 28, "Input",ExpressionUUID->"9c1e0769-c38a-45ad-a038-d890eca42f3b"]
}, Closed]],
Cell[CellGroupData[{
Cell[1156155, 22016, 156, 3, 53, "Section",ExpressionUUID->"334556c7-8b96-44fc-a202-070508d103d6"],
Cell[1156314, 22021, 2433, 49, 105, "Input",ExpressionUUID->"e70abd64-78f3-4511-a942-4e9079748346"],
Cell[1158750, 22072, 565, 13, 48, "Input",ExpressionUUID->"aa69c104-9cf3-46d0-a9e2-457e23c11fce"],
Cell[1159318, 22087, 572, 15, 28, "Input",ExpressionUUID->"20e269a3-af66-48b0-835c-da5f5c570da0"],
Cell[1159893, 22104, 647, 17, 28, "Input",ExpressionUUID->"75be2a75-66e7-46c8-88db-abac63985bce"],
Cell[1160543, 22123, 467, 11, 28, "Input",ExpressionUUID->"afef0957-4185-46ce-ab12-27b1b03598ed"],
Cell[1161013, 22136, 488, 10, 28, "Input",ExpressionUUID->"8df6339f-7e21-4248-b73d-9d42bac80599"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[1161550, 22152, 162, 2, 58, "Chapter",ExpressionUUID->"4d87868c-72c0-49a5-801e-8a7d380bc9ad"],
Cell[CellGroupData[{
Cell[1161737, 22158, 386, 6, 67, "Section",ExpressionUUID->"373af919-e40b-46f8-ad52-25ff1bcde1a6"],
Cell[CellGroupData[{
Cell[1162148, 22168, 184, 3, 54, "Subsection",ExpressionUUID->"7abba3a3-835a-4c68-b75a-13a45a6711f7"],
Cell[1162335, 22173, 4936, 119, 371, "Input",ExpressionUUID->"66ddff11-de03-45ad-8165-aec28a22698f"],
Cell[1167274, 22294, 3659, 79, 275, "Input",ExpressionUUID->"08091653-9256-4f30-9ff5-afd0ca5fe385"]
}, Closed]],
Cell[CellGroupData[{
Cell[1170970, 22378, 231, 4, 38, "Subsection",ExpressionUUID->"f9d1dac9-8b60-4733-8e4e-eaa0c9dcf587"],
Cell[1171204, 22384, 2874, 76, 243, "Code",ExpressionUUID->"ba179476-e1c0-4e1c-b319-7b74e0bac4c5"],
Cell[1174081, 22462, 4952, 109, 371, "Input",ExpressionUUID->"abec1ac0-c250-4201-9c0e-8c30ac7208cb"],
Cell[1179036, 22573, 5273, 114, 395, "Input",ExpressionUUID->"06bb48eb-fdc1-401a-9bfb-434537f1af48"]
}, Closed]],
Cell[CellGroupData[{
Cell[1184346, 22692, 254, 4, 38, "Subsection",ExpressionUUID->"b1b99cb5-33f7-4eed-a1c5-c62d7fddd7a7"],
Cell[1184603, 22698, 271, 6, 35, "Text",ExpressionUUID->"7d408438-996c-4586-a4e4-6af17b4ba670"],
Cell[CellGroupData[{
Cell[1184899, 22708, 157, 3, 45, "Subsubsection",ExpressionUUID->"51e317f5-70cf-40a3-bc35-bfe20bdbc6c9"],
Cell[1185059, 22713, 30620, 795, 810, "Input",ExpressionUUID->"c4e34844-1f09-4d06-92dc-eba04949b5b6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1215716, 23513, 143, 3, 45, "Subsubsection",ExpressionUUID->"37f2ac85-f627-48d9-be6a-3ac1f94ab3c9"],
Cell[1215862, 23518, 911, 15, 226, "Code",ExpressionUUID->"999e65cc-94ca-43d3-906b-b56ac973861d"],
Cell[1216776, 23535, 1725, 30, 48, "Input",ExpressionUUID->"11e04f98-237b-4f69-8475-9e50ee51cc5b"],
Cell[1218504, 23567, 6567, 163, 238, "Input",ExpressionUUID->"59ca5700-f49c-41b7-a99b-f69a6bf5bde0"],
Cell[1225074, 23732, 4483, 101, 257, "Input",ExpressionUUID->"953afee7-8380-4e30-93b3-a582a446235f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1229594, 23838, 171, 3, 45, "Subsubsection",ExpressionUUID->"c7710181-e938-4fcf-bc4e-fc6e3d0c00c3"],
Cell[1229768, 23843, 513, 9, 103, "Code",ExpressionUUID->"034faaf6-2477-4f04-97f2-f1005f00edc5"],
Cell[1230284, 23854, 5434, 128, 333, "Input",ExpressionUUID->"3a3cda3f-076c-4a2f-908c-d5a3ea9aff29"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1235755, 23987, 227, 4, 45, "Subsubsection",ExpressionUUID->"67f9cfa9-902a-45dd-90f4-5b8864f4e4be"],
Cell[1235985, 23993, 645, 11, 121, "Code",ExpressionUUID->"baa2ea06-d26f-4e05-a16b-d400f08a1fa1"],
Cell[1236633, 24006, 1902, 33, 48, "Input",ExpressionUUID->"ee49478d-566d-44e9-9a4e-f5a848bf94cb"],
Cell[1238538, 24041, 1448, 25, 48, "Input",ExpressionUUID->"8bc82193-24fd-428f-b68e-8c77baa8a64f"],
Cell[1239989, 24068, 6582, 146, 600, "Input",ExpressionUUID->"2c49fd37-469b-434b-a80b-e0af97325b87"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1246620, 24220, 173, 3, 54, "Subsection",ExpressionUUID->"34d3e14f-3937-4e93-96c3-17e1f15a219b"],
Cell[1246796, 24225, 636, 17, 34, "Code",ExpressionUUID->"5fd5e78f-8a68-4476-a126-dd8d19550033",
 InitializationCell->False],
Cell[1247435, 24244, 1001, 30, 122, "Code",ExpressionUUID->"b3089416-0bff-44ce-bfc4-b0d4f6642dff",
 InitializationCell->False],
Cell[1248439, 24276, 669, 18, 34, "Code",ExpressionUUID->"195907f2-0a95-4d5b-8f10-ccb5af1bcb33",
 InitializationCell->False]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1249157, 24300, 155, 3, 53, "Section",ExpressionUUID->"4966a8e6-870a-4be7-8eb1-9b46df4aac7d"],
Cell[CellGroupData[{
Cell[1249337, 24307, 157, 3, 54, "Subsection",ExpressionUUID->"0b1d59b3-d3bd-4529-b36b-151004fb04d9"],
Cell[1249497, 24312, 44556, 1054, 1361, "Input",ExpressionUUID->"138d3b2f-a725-41cc-b317-6c8b3e7ee715"]
}, Closed]],
Cell[CellGroupData[{
Cell[1294090, 25371, 159, 3, 38, "Subsection",ExpressionUUID->"3b587400-b305-465c-b691-42ddc957f8be"],
Cell[1294252, 25376, 413, 11, 28, "Input",ExpressionUUID->"02498ef1-17b5-4b00-9b46-1f5c0190d436"],
Cell[1294668, 25389, 350, 6, 28, "Input",ExpressionUUID->"14e127c1-0a1b-470b-88ba-d65721431dcc"],
Cell[1295021, 25397, 7922, 167, 523, "Input",ExpressionUUID->"023be18e-a88f-449f-8612-4890e456231f"],
Cell[1302946, 25566, 5465, 147, 276, "Input",ExpressionUUID->"4511a6e7-5a03-46d8-81ca-d31ef92874ac"]
}, Closed]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1308472, 25720, 229, 4, 72, "Title",ExpressionUUID->"f3c89fb5-3658-4434-90e3-12db05fa2820"],
Cell[CellGroupData[{
Cell[1308726, 25728, 167, 3, 69, "Chapter",ExpressionUUID->"ec9c4ebe-ee91-4af2-ae6d-f1b041e435b1"],
Cell[CellGroupData[{
Cell[1308918, 25735, 185, 3, 67, "Section",ExpressionUUID->"fb627fb6-6fe5-4486-b206-0c753238b2ab"],
Cell[CellGroupData[{
Cell[1309128, 25742, 162, 3, 54, "Subsection",ExpressionUUID->"a470997d-a973-4e1b-a26f-c5aa3f95d724"],
Cell[1309293, 25747, 2814, 42, 28, "Input",ExpressionUUID->"57bda0c9-b95f-4d0e-8ad7-a3acb3c02139"],
Cell[1312110, 25791, 765, 18, 70, "Code",ExpressionUUID->"269ca9a7-3480-4a0c-9e5e-305b4d19de68",
 InitializationCell->False],
Cell[1312878, 25811, 4972, 127, 219, "Input",ExpressionUUID->"a8bcf5e6-9b95-41b5-ae5e-12319b7b9397"],
Cell[1317853, 25940, 222, 4, 28, "Input",ExpressionUUID->"fefbcdbf-4833-4a7d-be9a-32fda0e5fba3"],
Cell[1318078, 25946, 222, 4, 28, "Input",ExpressionUUID->"47a9f1cc-83b5-458a-bf5d-9eaf73e09e75"]
}, Closed]],
Cell[CellGroupData[{
Cell[1318337, 25955, 180, 3, 38, "Subsection",ExpressionUUID->"9af02a4a-2888-4eb2-8b0f-aea8661622aa"],
Cell[1318520, 25960, 17486, 431, 1416, "Code",ExpressionUUID->"6d01318d-c54b-4ec4-8f87-213498094ce7",
 InitializationCell->False]
}, Closed]],
Cell[CellGroupData[{
Cell[1336043, 26396, 167, 3, 38, "Subsection",ExpressionUUID->"eb419da7-1c67-47cb-8e38-104ee6b4c272"],
Cell[1336213, 26401, 219, 4, 28, "Input",ExpressionUUID->"ab8ed823-70e1-4675-b328-0d52555496cf"],
Cell[1336435, 26407, 1744, 55, 86, "Input",ExpressionUUID->"f68cacee-1fa7-449a-8c83-9b9e210a36a3"],
Cell[1338182, 26464, 636, 13, 28, "Input",ExpressionUUID->"e6dd27d2-4546-4c03-99c9-bfbe5136060e"],
Cell[1338821, 26479, 459, 11, 35, "Text",ExpressionUUID->"8adc4092-5283-42aa-8e3a-fc775230486a"],
Cell[1339283, 26492, 1504, 39, 28, "Input",ExpressionUUID->"d4c4be60-4ce4-40fa-a74e-33eece6e0aa2"],
Cell[1340790, 26533, 509, 13, 35, "Text",ExpressionUUID->"ea6bd6f0-a525-44ad-9e45-99bfbe6f65cd"],
Cell[1341302, 26548, 1283, 33, 48, "Input",ExpressionUUID->"24d5228d-d989-419c-b210-5a5e8b3ac6c1"],
Cell[1342588, 26583, 222, 4, 28, "Input",ExpressionUUID->"2befacbb-5a51-4daf-8ea4-1d5d0be8a094"],
Cell[1342813, 26589, 432, 10, 28, "Input",ExpressionUUID->"5a63770b-d40c-4ddc-903b-0549ced68254"],
Cell[1343248, 26601, 835, 22, 48, "Input",ExpressionUUID->"a7a70ae1-cfe6-4e0a-86b5-ff14c21b3fe8"],
Cell[1344086, 26625, 2255, 59, 124, "Input",ExpressionUUID->"4cb7838d-110b-484c-99b7-1606ebd01ed8"],
Cell[1346344, 26686, 313, 7, 28, "Input",ExpressionUUID->"ae94fdbb-e0b3-4623-9b09-b08cd1f766a8"],
Cell[1346660, 26695, 1120, 29, 67, "Input",ExpressionUUID->"e216cdf7-7229-4f9f-9921-5c2bc550dbb8"],
Cell[1347783, 26726, 1087, 28, 67, "Input",ExpressionUUID->"02c475c0-f27f-434c-a1f2-96c6c5055bf2"],
Cell[1348873, 26756, 207, 4, 28, "Input",ExpressionUUID->"936d89a9-96c7-4820-b0aa-8c653b4a4df4"],
Cell[1349083, 26762, 1243, 32, 67, "Input",ExpressionUUID->"d3c0fe6d-6df0-40ce-a950-fb864be8c563"],
Cell[1350329, 26796, 825, 21, 28, "Input",ExpressionUUID->"c54a0471-352a-4e1f-bb0d-b9ca070451e2"]
}, Closed]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1351215, 26824, 164, 3, 69, "Chapter",ExpressionUUID->"ae6b4566-bffa-4a87-970b-6b098f87b102"],
Cell[CellGroupData[{
Cell[1351404, 26831, 156, 3, 67, "Section",ExpressionUUID->"e64fddb5-958a-4e9c-9ec6-d1676363bbc3"],
Cell[CellGroupData[{
Cell[1351585, 26838, 302, 5, 54, "Subsection",ExpressionUUID->"f1969642-b5c4-47bf-ba74-5588261936b8"],
Cell[1351890, 26845, 6428, 150, 238, "Input",ExpressionUUID->"da86a84f-3efd-4d52-afad-25a635950cd2"],
Cell[1358321, 26997, 1786, 51, 67, "Input",ExpressionUUID->"404be612-8672-4697-808d-03d0a1c8f1c7"]
}, Closed]],
Cell[CellGroupData[{
Cell[1360144, 27053, 242, 4, 38, "Subsection",ExpressionUUID->"26edbf77-7317-4d09-b943-5f1521598c47"],
Cell[1360389, 27059, 6409, 166, 546, "Input",ExpressionUUID->"1c437db4-0c27-401d-8dc9-4b5a1f531e77"],
Cell[1366801, 27227, 2972, 76, 162, "Input",ExpressionUUID->"ad914958-1b1f-43b4-bd3b-107bd3783c5c"]
}, Closed]],
Cell[CellGroupData[{
Cell[1369810, 27308, 211, 4, 38, "Subsection",ExpressionUUID->"d8b64102-b65e-415b-affc-3a14d7317bef"],
Cell[1370024, 27314, 3263, 75, 352, "Input",ExpressionUUID->"20c4a7fe-251d-4761-84a8-8a527db5e0d1"],
Cell[1373290, 27391, 2683, 70, 105, "Input",ExpressionUUID->"7c9882b5-868e-4749-93f7-20e4bf9b40cb"],
Cell[1375976, 27463, 3874, 100, 143, "Input",ExpressionUUID->"12aa8508-e9c1-4e4a-89d3-b34a4e783701"],
Cell[1379853, 27565, 2065, 56, 105, "Input",ExpressionUUID->"a9587d73-9657-4dc3-8a19-7f000a403f2d"],
Cell[1381921, 27623, 3086, 79, 143, "Input",ExpressionUUID->"58937241-1402-4f05-a373-14f4459b12bf"],
Cell[1385010, 27704, 3134, 79, 143, "Input",ExpressionUUID->"e295bd19-88b8-4cd5-84cb-7dafe46d22d4"],
Cell[1388147, 27785, 2838, 70, 143, "Input",ExpressionUUID->"19ac15bf-4998-45fa-932b-2fd351784876"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[1391034, 27861, 172, 3, 53, "Section",ExpressionUUID->"959f8507-31e9-4ffc-b03e-cb49733934c1"],
Cell[1391209, 27866, 278, 5, 28, "Input",ExpressionUUID->"5bf369ef-934e-4ff5-967a-2c8b449f7938"],
Cell[CellGroupData[{
Cell[1391512, 27875, 178, 3, 54, "Subsection",ExpressionUUID->"effd5109-36c3-421c-bdfd-361f961c6d6f"],
Cell[1391693, 27880, 1022, 30, 48, "Input",ExpressionUUID->"3299a496-aeda-442c-99f1-ceb8e0c6772e"],
Cell[1392718, 27912, 739, 21, 48, "Input",ExpressionUUID->"27e3dd64-7a97-4a85-af0b-a8d12b01a577"],
Cell[1393460, 27935, 520, 11, 28, "Input",ExpressionUUID->"6f474580-03fc-40e7-9924-2f7da94d53f4"],
Cell[1393983, 27948, 483, 11, 28, "Input",ExpressionUUID->"bde301e0-a39f-4fa8-b2cf-91de6b7ffd6e"],
Cell[1394469, 27961, 575, 12, 28, "Input",ExpressionUUID->"9fac43e3-0127-4937-8f59-16b0b9d301a8"],
Cell[1395047, 27975, 438, 9, 28, "Input",ExpressionUUID->"e6d71328-4deb-44af-9257-77e6f3fa6763"],
Cell[1395488, 27986, 534, 14, 28, "Input",ExpressionUUID->"01f6c72c-96f7-4ee5-87e7-70d1ff34f398"],
Cell[1396025, 28002, 353, 8, 28, "Input",ExpressionUUID->"5b4f7730-b8b7-4d61-a54c-3ab55f46b849"],
Cell[1396381, 28012, 579, 14, 28, "Input",ExpressionUUID->"c6e9c239-66e7-4507-bbd0-b9411ced70ad"]
}, Closed]],
Cell[CellGroupData[{
Cell[1396997, 28031, 210, 3, 38, "Subsection",ExpressionUUID->"1cc720aa-b90a-43cf-aa0e-1203b4b7e087"],
Cell[1397210, 28036, 295, 6, 28, "Input",ExpressionUUID->"4293890b-2e6c-4b83-85ee-39761f2ca0fd"],
Cell[1397508, 28044, 575, 14, 28, "Input",ExpressionUUID->"ccbf8c58-4380-4877-a4b2-28117b4b1df7"],
Cell[1398086, 28060, 590, 14, 28, "Input",ExpressionUUID->"9d1d2642-3aa6-402e-ab6b-0d555e0b0261"],
Cell[1398679, 28076, 850, 18, 28, "Input",ExpressionUUID->"7e36456b-1b39-44bf-a838-8fd5b3a0347d"],
Cell[1399532, 28096, 340, 8, 28, "Input",ExpressionUUID->"4f489f59-102e-415f-b443-91cda82eaafb"],
Cell[1399875, 28106, 1105, 31, 48, "Input",ExpressionUUID->"384dc84e-f56a-45d2-821b-4c8f8c7ee1b3"],
Cell[1400983, 28139, 765, 18, 28, "Input",ExpressionUUID->"2681e211-4ec1-4883-bf8d-8aa34d309ca4"]
}, Closed]],
Cell[CellGroupData[{
Cell[1401785, 28162, 159, 3, 38, "Subsection",ExpressionUUID->"8d037174-bc31-4292-94af-050948c3a745"],
Cell[1401947, 28167, 712, 15, 75, "Input",ExpressionUUID->"9aeff6c0-7dc8-4caa-bd38-3e91bd262bc8"],
Cell[1402662, 28184, 251, 6, 35, "Text",ExpressionUUID->"c3bc19f2-b889-48e9-94eb-cf41ee2b3b63"],
Cell[1402916, 28192, 710, 14, 28, "Input",ExpressionUUID->"9bc9bec5-2d28-4c69-bcaf-87b59dc15d32"],
Cell[1403629, 28208, 745, 22, 48, "Input",ExpressionUUID->"05d3a374-e7c2-4c23-a61d-8bb91909d51e"],
Cell[1404377, 28232, 598, 17, 28, "Input",ExpressionUUID->"9a63c33b-08bb-4926-926d-574932d0734d"],
Cell[1404978, 28251, 1669, 47, 48, "Input",ExpressionUUID->"3e2f9535-de41-4fdc-8cf0-2a8b0896daee"]
}, Closed]],
Cell[CellGroupData[{
Cell[1406684, 28303, 170, 3, 38, "Subsection",ExpressionUUID->"58b47363-7a71-4f83-9045-ea700e8aad2b"],
Cell[1406857, 28308, 471, 15, 38, "Input",ExpressionUUID->"6f2a6133-61eb-4d7d-87f1-d00474d55e8a"],
Cell[1407331, 28325, 708, 21, 67, "Input",ExpressionUUID->"7405dbe7-dbab-4026-8710-69a5eca49b16"]
}, Closed]],
Cell[CellGroupData[{
Cell[1408076, 28351, 166, 3, 38, "Subsection",ExpressionUUID->"69f0e42c-3406-4f4e-acf1-8fe23f3c33cd"],
Cell[CellGroupData[{
Cell[1408267, 28358, 178, 3, 45, "Subsubsection",ExpressionUUID->"e6abe74c-2ed8-4d88-806a-9ef2df97c122"],
Cell[1408448, 28363, 431, 10, 28, "Input",ExpressionUUID->"d0ca5221-0095-42da-a88b-a9894a0ae25c"],
Cell[1408882, 28375, 971, 17, 28, "Input",ExpressionUUID->"c789a083-98e6-43e5-91cb-b4e8f4a37a39"],
Cell[1409856, 28394, 521, 10, 28, "Input",ExpressionUUID->"2a5cd721-d7fb-447b-94e7-9ddd31f72df2"],
Cell[1410380, 28406, 391, 8, 28, "Input",ExpressionUUID->"92db74ff-f369-4434-8318-6469b7a98bb3"]
}, Closed]],
Cell[CellGroupData[{
Cell[1410808, 28419, 165, 3, 37, "Subsubsection",ExpressionUUID->"5c7ae94f-b94c-4d09-abab-2b69ee465f2e"],
Cell[1410976, 28424, 179, 4, 28, "Input",ExpressionUUID->"c85fcc8e-2e00-49cb-8673-0cf4fb5a8e53"],
Cell[1411158, 28430, 523, 12, 28, "Input",ExpressionUUID->"456bbd87-169d-437d-9804-cda71ae07d74"]
}, Closed]],
Cell[CellGroupData[{
Cell[1411718, 28447, 173, 3, 37, "Subsubsection",ExpressionUUID->"00160f1c-bfcf-44b2-845b-195595125c3b"],
Cell[1411894, 28452, 673, 19, 28, "Input",ExpressionUUID->"56457f0c-755b-45af-b18d-85cbe5ade370"],
Cell[1412570, 28473, 603, 16, 48, "Input",ExpressionUUID->"4a419513-ad1b-462d-ac76-eb0cd20d38cf"],
Cell[1413176, 28491, 1039, 26, 48, "Input",ExpressionUUID->"577deb00-745b-43d0-8d8a-36c28483d60a"],
Cell[1414218, 28519, 218, 4, 28, "Input",ExpressionUUID->"a285291f-05ad-4bba-a561-d218a71e67af"],
Cell[1414439, 28525, 1673, 47, 67, "Input",ExpressionUUID->"465111fa-d066-42e5-8c0e-6b0ec50146c4"],
Cell[1416115, 28574, 213, 4, 24, "Input",ExpressionUUID->"f51888b5-0a7c-46c7-a2bb-70bd5f2ad985"],
Cell[1416331, 28580, 3200, 98, 86, "Input",ExpressionUUID->"2a0b26e9-cb38-4ed9-b9a1-e510db25fb3b"],
Cell[1419534, 28680, 466, 13, 28, "Input",ExpressionUUID->"05517ad1-6a14-4a28-911f-543aede25d1e"],
Cell[1420003, 28695, 1056, 27, 28, "Input",ExpressionUUID->"a600f515-952d-410e-8d93-44548240e785"],
Cell[1421062, 28724, 618, 16, 28, "Input",ExpressionUUID->"0249cb81-e837-4397-a829-fbb701c6e69b"],
Cell[1421683, 28742, 616, 16, 28, "Input",ExpressionUUID->"e6ec84cc-f3f4-46a3-8619-b6eb0449eded"],
Cell[1422302, 28760, 958, 27, 67, "Input",ExpressionUUID->"c5df9688-0eac-4374-a3bd-5f44ed6877ab"],
Cell[1423263, 28789, 3040, 73, 105, "Input",ExpressionUUID->"10ab770d-72c9-48b9-b13f-3ed584cb6d68"],
Cell[1426306, 28864, 4445, 125, 124, "Input",ExpressionUUID->"70232740-e7dd-4cbf-a7ae-b6a83180f0f8"],
Cell[1430754, 28991, 4624, 132, 139, "Input",ExpressionUUID->"f53c1605-157d-4ff9-b4f6-48df64e20324"],
Cell[1435381, 29125, 2638, 64, 82, "Input",ExpressionUUID->"7695840a-2f98-4dc6-814a-c6a0f20e5a62"],
Cell[1438022, 29191, 1651, 49, 86, "Input",ExpressionUUID->"92f8fce6-09fe-47e8-bd67-3f8287912fa7"]
}, Closed]]
}, Closed]]
}, Closed]]
}, Open  ]]
}, Open  ]]
}
]
*)

